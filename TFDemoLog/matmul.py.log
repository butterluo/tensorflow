root@docker-desktop:/ws/tfDemo#  cd /ws/tfDemo ; /usr/bin/env /usr/bin/python3 /root/.vscode-server/extensions/ms-python.python-2022.20.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 56751 -- /ws/tfDemo/matmul.py 
******************** import tf BEGIN
2023-01-12 08:10:44.227584: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-12 08:10:47.779746: I tensorflow/core/platform/cloud/gcs_file_system.cc:302] GCS RetryConfig: init_delay_time_us = 1000000 ; max_delay_time_us = 32000000 ; max_retries = 10
2023-01-12 08:10:47.809065: I tensorflow/core/platform/cloud/gcs_file_system.cc:851] GCS cache max size = 0 ; block size = 67108864 ; max staleness = 0
2023-01-12 08:10:47.830763: I ./tensorflow/core/platform/cloud/ram_file_block_cache.h:64] GCS file block cache is disabled
2023-01-12 08:10:47.842068: I tensorflow/core/platform/cloud/gcs_file_system.cc:891] GCS DNS cache is disabled, because GCS_RESOLVE_REFRESH_SECS = 0 (or is not set)
2023-01-12 08:10:47.842174: I tensorflow/core/platform/cloud/gcs_file_system.cc:921] GCS additional header DISABLED. No environment variable set.
2023-01-12 08:10:47.843387: I tensorflow/core/platform/cloud/gcs_file_system.cc:302] GCS RetryConfig: init_delay_time_us = 1000000 ; max_delay_time_us = 32000000 ; max_retries = 10
2023-01-12 08:10:50.807612: I tensorflow/core/platform/cloud/gcs_file_system.cc:302] GCS RetryConfig: init_delay_time_us = 1000000 ; max_delay_time_us = 32000000 ; max_retries = 10
2023-01-12 08:10:50.807859: I tensorflow/core/platform/cloud/gcs_file_system.cc:851] GCS cache max size = 0 ; block size = 67108864 ; max staleness = 0
2023-01-12 08:10:50.807889: I ./tensorflow/core/platform/cloud/ram_file_block_cache.h:64] GCS file block cache is disabled
2023-01-12 08:10:50.807910: I tensorflow/core/platform/cloud/gcs_file_system.cc:891] GCS DNS cache is disabled, because GCS_RESOLVE_REFRESH_SECS = 0 (or is not set)
2023-01-12 08:10:50.807922: I tensorflow/core/platform/cloud/gcs_file_system.cc:921] GCS additional header DISABLED. No environment variable set.
2023-01-12 08:10:50.807935: I tensorflow/core/platform/cloud/gcs_file_system.cc:302] GCS RetryConfig: init_delay_time_us = 1000000 ; max_delay_time_us = 32000000 ; max_retries = 10
2023-01-12 08:10:50.968587: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "ALREADY_EXISTS: File factory for gs already registered". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::AlreadyExists<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::FileSystemRegistryImpl::Register(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tsl::FileSystem* ()>)
        tsl::Env::RegisterFileSystem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tsl::FileSystem* ()>)
        tsl::register_file_system::Register<tensorflow::RetryingGcsFileSystem>::Register(tsl::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)




        _dl_catch_exception

        _dl_catch_exception


        _dl_catch_exception
        _dl_catch_error

        dlopen



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyObject_CallMethodIdObjArgs
        PyImport_ImportModuleLevelObject
        _PyEval_EvalFrameDefault


        PyEval_EvalCode


        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyObject_CallMethodIdObjArgs
        PyImport_ImportModuleLevelObject


        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyObject_CallMethodIdObjArgs
        PyImport_ImportModuleLevelObject
        _PyEval_EvalFrameDefault


        PyEval_EvalCode


        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyObject_CallMethodIdObjArgs
        PyImport_ImportModuleLevelObject


        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

*** End stack trace ***

9319 139989459988480 01-12 08:10:53 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FakeQuantWithMinMaxArgs (<function _FakeQuantWithMinMaxArgsGradient at 0x7f5154a73f40>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FakeQuantWithMinMaxVars (<function _FakeQuantWithMinMaxVarsGradient at 0x7f5154995a20>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FakeQuantWithMinMaxVarsPerChannel (<function _FakeQuantWithMinMaxVarsPerChannelGradient at 0x7f5154995ab0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QuantizeAndDequantizeV4 (<function _QuantizeAndDequantizeV4Grad at 0x7f5154995b40>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QuantizeAndDequantizeV4Grad (<function _QuantizeAndDequantizeV4GradGrad at 0x7f5154995bd0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatMul,flops (<function _calc_mat_mul_flops at 0x7f5154473be0>) in statistical functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchMatMulV3,flops (<function _calc_batch_mat_mul_flops at 0x7f51544e4940>) in statistical functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchMatMulV2,flops (<function _calc_batch_mat_mul_flops at 0x7f51544e4940>) in statistical functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchMatMul,flops (<function _calc_batch_mat_mul_flops at 0x7f51544e4940>) in statistical functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AccumulateNV2 (<function _accumulate_n_grad at 0x7f51544e4ca0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListConcatLists (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListElementShape (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListLength (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListPushBackBatch (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListPushBack (<function _PushBackGrad at 0x7f51543a0940>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListPopBack (<function _PopBackGrad at 0x7f51543a09d0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListStack (<function _TensorListStackGrad at 0x7f51543a0a60>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListConcatV2 (<function _TensorListConcatGrad at 0x7f51543a0af0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListConcat (<function _TensorListConcatGrad at 0x7f51543a0af0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListSplit (<function _TensorListSplitGrad at 0x7f51543a0b80>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListFromTensor (<function _TensorListFromTensorGrad at 0x7f51543a0c10>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListGetItem (<function _TensorListGetItemGrad at 0x7f51543a0ca0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListSetItem (<function _TensorListSetItemGrad at 0x7f51543a0d30>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListResize (<function _TensorListResizeGrad at 0x7f51543a0dc0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListGather (<function _TensorListGatherGrad at 0x7f51543a0e50>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListScatterV2 (<function _TensorListScatterGrad at 0x7f51543a0ee0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListScatter (<function _TensorListScatterGrad at 0x7f51543a0ee0>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorListScatterIntoExistingList (<function _TensorListScatterIntoExistingListGrad at 0x7f51543a0f70>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering cond_context ((<class 'tensorflow.core.protobuf.control_flow_pb2.CondContextDef'>, <function CondContext.to_proto at 0x7f51543c31c0>, <function CondContext.from_proto at 0x7f51543c3250>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering while_context ((<class 'tensorflow.core.protobuf.control_flow_pb2.WhileContextDef'>, <function WhileContext.to_proto at 0x7f51543c84c0>, <function WhileContext.from_proto at 0x7f51543c85e0>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BitwiseAnd (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BitwiseOr (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BitwiseXor (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Invert (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering PopulationCount (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LeftShift (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RightShift (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessMultinomial (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomBinomial (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomNormal (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomPoisson (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomUniform (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomUniformInt (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomUniformFullInt (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessTruncatedNormal (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomNormalV2 (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomUniformV2 (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomUniformIntV2 (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomUniformFullIntV2 (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessTruncatedNormalV2 (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomShuffle (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RandomIndexShuffle (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RandomStandardNormal (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ParameterizedTruncatedNormal (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TruncatedNormal (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RandomUniform (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RandomShuffle (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Multinomial (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReadVariableOp (<function _ReadGrad at 0x7f51540a9b40>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ResourceGather (<function _GatherGrad at 0x7f51540ca830>) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering variables ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering trainable_variables ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering moving_average_variables ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering local_variables ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering model_variables ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering global_step ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering metric_variables ((<class 'tensorflow.core.framework.variable_pb2.VariableDef'>, <function _to_proto_fn at 0x7f51540ca8c0>, <function _from_proto_fn at 0x7f51540ca950>)) in proto functions.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Assert (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering VarIsInitializedOp (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering VariableShape (None) in gradient.
9319 139989459988480 01-12 08:10:54 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EnsureShape (<function _ensure_shape_grad at 0x7f5154131e10>) in gradient.
9319 139989459988480 01-12 08:10:55 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RaggedTensorToSparse (<function _ragged_tensor_to_sparse_gradient at 0x7f5153f9bac0>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AllToAll (<function _all_to_all_grad at 0x7f5153215750>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CollectivePermute (<function _collective_permute_grad at 0x7f5153216c20>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CrossReplicaSum (<function _cross_replica_sum_grad at 0x7f5153216cb0>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TPUEmbeddingActivations (<function _embedding_activations_grad at 0x7f5153216d40>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering _identity_resolver (<function _identity_resolver at 0x7f5152cc9480>) in acd_resource_resolvers.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderRead (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderReadUpTo (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderNumRecordsProduced (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderNumWorkUnitsCompleted (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderSerializeState (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderRestoreState (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReaderReset (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering WholeFileReader (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TextLineReader (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FixedLengthRecordReader (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TFRecordReader (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LMDBReader (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IdentityReader (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RegexReplace (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StringToHashBucket (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StringToHashBucketFast (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StringToHashBucketStrong (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReduceJoin (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StringJoin (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StringSplit (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AsString (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EncodeBase64 (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DecodeBase64 (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering savers ((<class 'tensorflow.core.protobuf.saver_pb2.SaverDef'>, <function Saver.to_proto at 0x7f5152c9e0e0>, <function Saver.from_proto at 0x7f5152c9e170>)) in proto functions.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EagerPyFunc (<function _EagerPyFuncGrad at 0x7f515213cb80>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering PyFunc (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering PyFuncStateless (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Print (<function _PrintGrad at 0x7f515213f910>) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering HistogramSummary (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ImageSummary (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AudioSummary (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AudioSummaryV2 (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MergeSummary (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScalarSummary (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorSummary (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorSummaryV2 (None) in gradient.
9319 139989459988480 01-12 08:10:56 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Timestamp (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReduceDataset (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering _resource_resolver (<function _resource_resolver at 0x7f5151fd9120>) in acd_resource_resolvers.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LookupTableFind (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LookupTableFindV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LookupTableInsert (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LookupTableInsertV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LookupTableSize (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LookupTableSizeV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering HashTable (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering HashTableV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering InitializeTable (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering InitializeTableV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering InitializeTableFromTextFile (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering InitializeTableFromTextFileV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MutableDenseHashTable (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MutableDenseHashTableV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MutableHashTable (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MutableHashTableV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MutableHashTableOfTensors (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MutableHashTableOfTensorsV2 (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering XlaEinsum (<function _einsum_grad at 0x7f51510ae8c0>) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv3D,flops (<function _calc_conv3d_flops at 0x7f515115fa30>) in statistical functions.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv2D,flops (<function _calc_conv_flops at 0x7f51d0190f70>) in statistical functions.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DepthwiseConv2dNative,flops (<function _calc_depthwise_conv_flops at 0x7f51d0191000>) in statistical functions.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BiasAdd,flops (<function _calc_bias_add_flops at 0x7f51d0191090>) in statistical functions.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Dilation2D,flops (<function _calc_dilation2d_flops at 0x7f51d0192710>) in statistical functions.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RaggedRange (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DecodeRaw (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DecodePaddedRaw (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ParseTensor (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SerializeTensor (None) in gradient.
9319 139989459988480 01-12 08:10:57 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StringToNumber (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv2DBackpropInput (<function _Conv2DBackpropInputGrad at 0x7f5150abf010>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv2DBackpropFilter (<function _Conv2DBackpropFilterGrad at 0x7f5150abfe20>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DepthwiseConv2dNativeBackpropInput (<function _DepthwiseConv2dNativeBackpropInputGrad at 0x7f5150abfeb0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DepthwiseConv2dNativeBackpropFilter (<function _DepthwiseConv2dNativeBackpropFilterGrad at 0x7f5150abff40>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv3D (<function _Conv3DGrad at 0x7f51508fc040>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv3DBackpropInputV2 (<function _Conv3DBackpropInputGrad at 0x7f51508fc0d0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv3DBackpropFilterV2 (<function _Conv3DBackpropFilterGrad at 0x7f51508fc160>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AvgPool3D (<function _AvgPool3DGrad at 0x7f51508fc1f0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AvgPool3DGrad (<function _AvgPool3DGradGrad at 0x7f51508fc280>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPool3D (<function _MaxPool3DGrad at 0x7f51508fc310>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPool3DGrad (<function _MaxPool3DGradGrad at 0x7f51508fc3a0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPool3DGradGrad (<function _MaxPool3DGradGradGrad at 0x7f51508fc430>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Softmax (<function _SoftmaxGrad at 0x7f51508fc4c0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LogSoftmax (<function _LogSoftmaxGrad at 0x7f51508fc550>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BiasAdd (<function _BiasAddGrad at 0x7f51508fc5e0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BiasAddGrad (<function _BiasAddGradGrad at 0x7f51508fc670>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BiasAddV1 (<function _BiasAddGradV1 at 0x7f51508fc700>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Relu (<function _ReluGrad at 0x7f51508fc790>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EluGrad (<function _EluGradGrad at 0x7f51508fc820>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SeluGrad (<function _SeluGradGrad at 0x7f51508fc8b0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Relu6 (<function _Relu6Grad at 0x7f51508fc940>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Relu6Grad (<function _Relu6GradGrad at 0x7f51508fc9d0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LeakyRelu (<function _LeakyReluGrad at 0x7f51508fca60>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LeakyReluGrad (<function _LeakyReluGradGrad at 0x7f51508fcaf0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Elu (<function _EluGrad at 0x7f51508fcb80>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Selu (<function _SeluGrad at 0x7f51508fcc10>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Softplus (<function _SoftplusGrad at 0x7f51508fcca0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SoftplusGrad (<function _SoftplusGradGrad at 0x7f51508fcd30>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Softsign (<function _SoftsignGrad at 0x7f51508fcdc0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReluGrad (<function _ReluGradGrad at 0x7f51508fce50>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SoftmaxCrossEntropyWithLogits (<function _SoftmaxCrossEntropyWithLogitsGrad at 0x7f51508fcf70>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSoftmaxCrossEntropyWithLogits (<function _SparseSoftmaxCrossEntropyWithLogitsGrad at 0x7f51508fd000>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv2D (<function _Conv2DGrad at 0x7f51508fd090>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DepthwiseConv2dNative (<function _DepthwiseConv2dNativeGrad at 0x7f51508fd120>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Dilation2D (<function _Dilation2DGrad at 0x7f51508fd1b0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LRN (<function _LRNGrad at 0x7f51508fd240>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AvgPool (<function _AvgPoolGrad at 0x7f51508fd2d0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AvgPoolGrad (<function _AvgPoolGradGrad at 0x7f51508fd360>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPool (<function _MaxPoolGrad at 0x7f51508fd3f0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPoolV2 (<function _MaxPoolGradV2 at 0x7f51508fd480>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPoolWithArgmax (<function _MaxPoolGradWithArgmax at 0x7f51508fd510>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPoolGrad (<function _MaxPoolGradGrad at 0x7f51508fd5a0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPoolGradV2 (<function _MaxPoolGradGradV2 at 0x7f51508fd630>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPoolGradGrad (<function _MaxPoolGradGradGrad at 0x7f51508fd6c0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FractionalMaxPool (<function _FractionalMaxPoolGrad at 0x7f51508fd750>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FractionalAvgPool (<function _FractionalAvgPoolGrad at 0x7f51508fd7e0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchNormWithGlobalNormalization (<function _BatchNormWithGlobalNormalizationGrad at 0x7f51508fd870>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FusedBatchNorm (<function _FusedBatchNormGrad at 0x7f51508fd990>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FusedBatchNormV2 (<function _FusedBatchNormV2Grad at 0x7f51508fda20>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FusedBatchNormV3 (<function _FusedBatchNormV3Grad at 0x7f51508fdab0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FusedBatchNormGrad (<function _FusedBatchNormGradGrad at 0x7f51508fdbd0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FusedBatchNormGradV2 (<function _FusedBatchNormGradGradV2 at 0x7f51508fdc60>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FusedBatchNormGradV3 (<function _FusedBatchNormGradGradV3 at 0x7f51508fdcf0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering L2Loss (<function _L2LossGrad at 0x7f51508fdd80>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TopKV2 (<function _TopKGrad at 0x7f51508fde10>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TopK (<function _TopKGrad at 0x7f51508fde10>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ApproxTopK (<function _ApproxTopKGradient at 0x7f51508fdea0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NthElement (<function _NthElementGrad at 0x7f51508fdf30>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IsotonicRegression (<function _IsotonicRegressionGrad at 0x7f51508fe050>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CTCLoss (<function _CTCLossGrad at 0x7f51508fe440>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CTCLossV2 (<function _CTCLossV2Grad at 0x7f5150928280>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CTCGreedyDecoder (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CTCBeamSearchDecoder (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DynamicPartition (<function _DynamicPartitionGrads at 0x7f515092a440>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ParallelDynamicStitch (<function _DynamicStitchGrads at 0x7f515094e050>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DynamicStitch (<function _DynamicStitchGrads at 0x7f515094e050>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Queue (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueEnqueue (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueEnqueueMany (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueDequeue (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueDequeueMany (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueDequeueUpTo (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueClose (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QueueSize (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Stack (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StackPush (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StackPop (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StackClose (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GetSessionHandle (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GetSessionHandleV2 (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GetSessionTensor (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DeleteSessionTensor (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SetSize (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DenseToDenseSetOperation (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DenseToSparseSetOperation (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseToSparseSetOperation (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering XlaClusterOutput (<function _XlaClusterOutputGrad at 0x7f51507f0b80>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering XlaVariadicReduce (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering XlaSharding (<function _sharding_grad at 0x7f51508a2d40>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering XlaSpmdFullToShardShape (<function _spmd_full_to_shard_shape_grad at 0x7f51508a2dd0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering XlaSpmdShardToFullShape (<function _spmd_shard_to_full_shape_grad at 0x7f51508a2e60>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TPUReplicatedInput (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering tpu_replicated_input_resolver (<function tpu_replicated_input_resolver at 0x7f51507463b0>) in acd_resource_resolvers.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Pack (<function _PackGrad at 0x7f5150632950>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Unpack (<function _UnpackGrad at 0x7f5150633ac0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Concat (<function _ConcatGrad at 0x7f5150633be0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ConcatV2 (<function _ConcatGradV2 at 0x7f5150633c70>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ConcatOffset (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Slice (<function _SliceGrad at 0x7f5150633d00>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StridedSlice (<function _StridedSliceGrad at 0x7f5150633d90>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StridedSliceGrad (<function _StridedSliceGradGrad at 0x7f5150633e20>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorStridedSliceUpdate (<function _TensorStridedSliceUpdateGrad at 0x7f5150633eb0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Split (<function _SplitGrad at 0x7f5150633f40>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SplitV (<function _SplitVGrad at 0x7f5150658040>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Const (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Diag (<function _DiagGrad at 0x7f51506580d0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DiagPart (<function _DiagPartGrad at 0x7f5150658160>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDiag (<function _MatrixDiagGrad at 0x7f51506581f0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDiagV2 (<function _MatrixDiagV2Grad at 0x7f5150658280>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDiagV3 (<function _MatrixDiagV3Grad at 0x7f5150658310>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDiagPart (<function _MatrixDiagPartGrad at 0x7f51506583a0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDiagPartV2 (<function _MatrixDiagPartV2Grad at 0x7f5150658430>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDiagPartV3 (<function _MatrixDiagPartV3Grad at 0x7f51506584c0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixSetDiag (<function _MatrixSetDiagGrad at 0x7f5150658550>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixSetDiagV2 (<function _MatrixSetDiagGradV2 at 0x7f51506585e0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixSetDiagV3 (<function _MatrixSetDiagGradV3 at 0x7f5150658670>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixBandPart (<function _MatrixBandPartGrad at 0x7f5150658700>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EditDistance (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Fill (<function _FillGrad at 0x7f5150658790>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ZerosLike (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering OnesLike (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering PreventGradient (<function _PreventGradientGrad at 0x7f5150658820>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Gather (<function _GatherGrad at 0x7f5150658940>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GatherV2 (<function _GatherV2Grad at 0x7f5150658af0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GatherNd (<function _GatherNdGrad at 0x7f5150658b80>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ResourceGatherNd (<function _ResourceGatherNdGrad at 0x7f5150658c10>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CheckNumerics (<function _CheckNumericsGrad at 0x7f5150658ca0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CheckNumericsV2 (<function _CheckNumericsV2Grad at 0x7f5150658d30>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Identity (<function _IdGrad at 0x7f5150658dc0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering PlaceholderWithDefault (<function _IdGrad at 0x7f5150658dc0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering _EagerConst (<function _EagerConstGrad at 0x7f5150658e50>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RefIdentity (<function _RefIdGrad at 0x7f5150658ee0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IdentityN (<function _IdNGrad at 0x7f5150658f70>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StopGradient (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Reshape (<function _ReshapeGrad at 0x7f5150659000>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering InvertPermutation (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ExpandDims (<function _ExpandDimsGrad at 0x7f5150659120>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Squeeze (<function _SqueezeGrad at 0x7f51506591b0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Transpose (<function _TransposeGrad at 0x7f5150659240>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ConjugateTranspose (<function _ConjugateTransposeGrad at 0x7f51506592d0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Shape (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ShapeN (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Rank (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Size (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Tile (<function _TileGrad at 0x7f5150659360>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BroadcastGradientArgs (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Pad (<function _PadGrad at 0x7f51506593f0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering PadV2 (<function _PadGrad at 0x7f51506593f0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReverseSequence (<function _ReverseSequenceGrad at 0x7f5150659480>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Reverse (<function _ReverseGrad at 0x7f5150659510>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReverseV2 (<function _ReverseV2Grad at 0x7f51506595a0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SpaceToBatch (<function _SpaceToBatchGrad at 0x7f5150659630>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SpaceToBatchND (<function _SpaceToBatchNDGrad at 0x7f51506596c0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchToSpace (<function _BatchToSpaceGrad at 0x7f5150659750>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchToSpaceND (<function _BatchToSpaceNDGrad at 0x7f51506597e0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SpaceToDepth (<function _SpaceToDepthGrad at 0x7f5150659870>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DepthToSpace (<function _DepthToSpaceGrad at 0x7f5150659900>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering OneHot (None) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MirrorPad (<function _MirrorPadGrad at 0x7f5150659990>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MirrorPadGrad (<function _MirrorPadGradGrad at 0x7f5150659a20>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QuantizeAndDequantize (<function _QuantizeAndDequantizeGrad at 0x7f5150659ab0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QuantizeAndDequantizeV2 (<function _QuantizeAndDequantizeV2Grad at 0x7f5150659b40>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering QuantizeAndDequantizeV3 (<function _QuantizeAndDequantizeV3Grad at 0x7f5150659bd0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ExtractImagePatches (<function _ExtractImagePatchesGrad at 0x7f5150659c60>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ExtractVolumePatches (<function _ExtractVolumePatchesGrad at 0x7f5150659cf0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNd (<function _ScatterNdGrad at 0x7f5150659d80>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorScatterUpdate (<function _TensorScatterUpdateGrad at 0x7f5150659e10>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorScatterAdd (<function _TensorScatterAddGrad at 0x7f5150659ea0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorScatterMax (<function _TensorScatterMaxGrad at 0x7f5150659fc0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorScatterMin (<function _TensorScatterMinGrad at 0x7f515065a050>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorScatterSub (<function _TensorScatterSubGrad at 0x7f515065a0e0>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNdNonAliasingAdd (<function _ScatterNdNonAliasingAddGrad at 0x7f515065a170>) in gradient.
9319 139989459988480 01-12 08:10:58 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BroadcastTo (<function _BroadcastToGrad at 0x7f515065a200>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Switch (<function _SwitchGrad at 0x7f515065a4d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RefSwitch (<function _SwitchGrad at 0x7f515065a4d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Merge (<function _MergeGrad at 0x7f515065a830>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RefMerge (<function _RefMergeGrad at 0x7f515065a8c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Exit (<function _ExitGrad at 0x7f515065a950>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RefExit (<function _ExitGrad at 0x7f515065a950>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NextIteration (<function _NextIterationGrad at 0x7f515065a9e0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RefNextIteration (<function _RefNextIterationGrad at 0x7f515065aa70>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Enter (<function _EnterGrad at 0x7f515065ab00>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RefEnter (<function _RefEnterGrad at 0x7f515065ab90>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LoopCond (<function _LoopCondGrad at 0x7f515065ac20>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ResizeNearestNeighbor (<function _ResizeNearestNeighborGrad at 0x7f515065ad40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ResizeBilinear (<function _ResizeBilinearGrad at 0x7f515065b400>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScaleAndTranslate (<function _ScaleAndTranslateGrad at 0x7f515065b490>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ResizeBicubic (<function _ResizeBicubicGrad at 0x7f515065b520>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CropAndResize (<function _CropAndResizeGrad at 0x7f515065b5b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RGBToHSV (<function _RGBToHSVGrad at 0x7f515065b6d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixInverse (<function _MatrixInverseGrad at 0x7f5150684280>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Einsum (<function _EinsumGrad at 0x7f51506b84c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixDeterminant (<function _MatrixDeterminantGrad at 0x7f51506b8550>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixSquareRoot (<function _MatrixSquareRootGrad at 0x7f51506b85e0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LogMatrixDeterminant (<function _LogMatrixDeterminantGrad at 0x7f51506b8670>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cholesky (<function _CholeskyGrad at 0x7f51506b8700>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Qr (<function _QrGrad at 0x7f51506b8790>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixSolve (<function _MatrixSolveGrad at 0x7f51506b8820>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixSolveLs (<function _MatrixSolveLsGrad at 0x7f51506b88b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BandedTriangularSolve (<function _BandedTriangularSolveGrad at 0x7f51506b8940>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatrixTriangularSolve (<function _MatrixTriangularSolveGrad at 0x7f51506b89d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Eig (<function _EigGrad at 0x7f51506b8af0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SelfAdjointEigV2 (<function _SelfAdjointEigV2Grad at 0x7f51506b8b80>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Svd (<function _SvdGrad at 0x7f51506b8c10>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TridiagonalMatMul (<function _TridiagonalMatMulGrad at 0x7f51506b8dc0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TridiagonalSolve (<function _TridiagonalSolveGrad at 0x7f51506b8e50>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Roll (<function _RollGrad at 0x7f51506b9000>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ArgMax (<function _ArgMaxGrad at 0x7f51506ba710>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ArgMin (<function _ArgMinGrad at 0x7f51506bb880>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EuclideanNorm (<function _EuclideanNormGrad at 0x7f51506bb910>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sum (<function _SumGrad at 0x7f51506bbac0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Max (<function _MaxGrad at 0x7f51506bbbe0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Min (<function _MinGrad at 0x7f51506bbc70>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Mean (<function _MeanGrad at 0x7f51506bbd00>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Prod (<function _ProdGrad at 0x7f51506bbd90>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SegmentSum (<function _SegmentSumGrad at 0x7f51506bbe20>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SegmentMean (<function _SegmentMeanGrad at 0x7f51506bbeb0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSegmentSum (<function _SparseSegmentSumGrad at 0x7f51506bbf40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSegmentSumWithNumSegments (<function _SparseSegmentSumWithNumSegmentsGrad at 0x7f5150508040>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSegmentMean (<function _SparseSegmentMeanGrad at 0x7f51505080d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSegmentMeanWithNumSegments (<function _SparseSegmentMeanWithNumSegmentsGrad at 0x7f5150508160>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSegmentSqrtN (<function _SparseSegmentSqrtNGrad at 0x7f51505081f0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSegmentSqrtNWithNumSegments (<function _SparseSegmentSqrtNWithNumSegmentsGrad at 0x7f5150508280>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SegmentMin (<function _SegmentMinGrad at 0x7f51505083a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SegmentMax (<function _SegmentMaxGrad at 0x7f5150508430>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SegmentProd (<function _SegmentProdGrad at 0x7f51505084c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering UnsortedSegmentSum (<function _UnsortedSegmentSumGrad at 0x7f5150508670>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering UnsortedSegmentMax (<function _UnsortedSegmentMaxGrad at 0x7f5150508700>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering UnsortedSegmentMin (<function _UnsortedSegmentMinGrad at 0x7f5150508790>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering UnsortedSegmentProd (<function _UnsortedSegmentProdGrad at 0x7f5150508820>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Abs (<function _AbsGrad at 0x7f51505088b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Neg (<function _NegGrad at 0x7f5150508940>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Inv (<function _InvGrad at 0x7f51505089d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Reciprocal (<function _ReciprocalGrad at 0x7f5150508a60>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering InvGrad (<function _InvGradGrad at 0x7f5150508af0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ReciprocalGrad (<function _ReciprocalGradGrad at 0x7f5150508b80>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Square (<function _SquareGrad at 0x7f5150508c10>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sqrt (<function _SqrtGrad at 0x7f5150508ca0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SqrtGrad (<function _SqrtGradGrad at 0x7f5150508d30>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Rsqrt (<function _RsqrtGrad at 0x7f5150508dc0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RsqrtGrad (<function _RsqrtGradGrad at 0x7f5150508e50>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Exp (<function _ExpGrad at 0x7f5150508ee0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Expm1 (<function _Expm1Grad at 0x7f5150508f70>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Log (<function _LogGrad at 0x7f5150509000>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Log1p (<function _Log1pGrad at 0x7f5150509090>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Xlogy (<function _XLogyGrad at 0x7f5150509120>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Xlog1py (<function _XLog1pyGrad at 0x7f51505091b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Xdivy (<function _XDivyGrad at 0x7f5150509240>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sinh (<function _SinhGrad at 0x7f51505092d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cosh (<function _CoshGrad at 0x7f5150509360>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Tanh (<function _TanhGrad at 0x7f51505093f0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Asinh (<function _AsinhGrad at 0x7f5150509480>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Acosh (<function _AcoshGrad at 0x7f5150509510>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Atanh (<function _AtanhGrad at 0x7f51505095a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TanhGrad (<function _TanhGradGrad at 0x7f5150509630>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Erf (<function _ErfGrad at 0x7f51505096c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Erfc (<function _ErfcGrad at 0x7f5150509750>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Erfinv (<function _ErfinvGrad at 0x7f51505097e0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Ndtri (<function _NdtriGrad at 0x7f5150509870>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Lgamma (<function _LgammaGrad at 0x7f5150509900>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Digamma (<function _DigammaGrad at 0x7f5150509990>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Dawsn (<function _DawsnGrad at 0x7f5150509a20>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Expint (<function _ExpintGrad at 0x7f5150509ab0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FresnelCos (<function _FresnelCosGrad at 0x7f5150509b40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FresnelSin (<function _FresnelSinGrad at 0x7f5150509bd0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Spence (<function _SpenceGrad at 0x7f5150509c60>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselI0 (<function _BesselI0Grad at 0x7f5150509cf0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselI0e (<function _BesselI0eGrad at 0x7f5150509d80>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselI1 (<function _BesselI1Grad at 0x7f5150509e10>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselI1e (<function _BesselI1eGrad at 0x7f5150509ea0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselK0 (<function _BesselK0Grad at 0x7f5150509f30>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselK0e (<function _BesselK0eGrad at 0x7f5150509fc0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselK1 (<function _BesselK1Grad at 0x7f515050a050>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselK1e (<function _BesselK1eGrad at 0x7f515050a0e0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselJ0 (<function _BesselJ0Grad at 0x7f515050a170>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselJ1 (<function _BesselJ1Grad at 0x7f515050a200>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselY0 (<function _BesselY0Grad at 0x7f515050a290>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BesselY1 (<function _BesselY1Grad at 0x7f515050a320>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Igamma (<function _IgammaGrad at 0x7f515050a3b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Igammac (<function _IgammacGrad at 0x7f515050a440>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Betainc (<function _BetaincGrad at 0x7f515050a4d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Zeta (<function _ZetaGrad at 0x7f515050a560>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Polygamma (<function _PolygammaGrad at 0x7f515050a5f0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sigmoid (<function _SigmoidGrad at 0x7f515050a680>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SigmoidGrad (<function _SigmoidGradGrad at 0x7f515050a710>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sign (<function _SignGrad at 0x7f515050a7a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sin (<function _SinGrad at 0x7f515050a830>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cos (<function _CosGrad at 0x7f515050a8c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Tan (<function _TanGrad at 0x7f515050a950>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Asin (<function _AsinGrad at 0x7f515050a9e0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Acos (<function _AcosGrad at 0x7f515050aa70>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Atan (<function _AtanGrad at 0x7f515050ab00>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Atan2 (<function _Atan2Grad at 0x7f515050ab90>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AddN (<function _AddNGrad at 0x7f515050ac20>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AddV2 (<function _AddGrad at 0x7f515050ad40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Add (<function _AddGrad at 0x7f515050ad40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sub (<function _SubGrad at 0x7f515050add0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Mul (<function _MulGrad at 0x7f515050ae60>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MulNoNan (<function _MulNoNanGrad at 0x7f515050aef0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Div (<function _DivGrad at 0x7f515050af80>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FloorDiv (<function _FloorDivGrad at 0x7f515050b010>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FloorMod (<function _FloorModGrad at 0x7f515050b0a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TruncateDiv (<function _TruncateDivGrad at 0x7f515050b130>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RealDiv (<function _RealDivGrad at 0x7f515050b1c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DivNoNan (<function _DivNoNanGrad at 0x7f515050b250>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Pow (<function _PowGrad at 0x7f515050b2e0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Maximum (<function _MaximumGrad at 0x7f515050b490>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Minimum (<function _MinimumGrad at 0x7f515050b520>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SquaredDifference (<function _SquaredDifferenceGrad at 0x7f515050b5b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Less (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LessEqual (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Greater (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GreaterEqual (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Equal (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ApproximateEqual (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NotEqual (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LogicalAnd (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LogicalOr (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LogicalNot (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Select (<function _SelectGrad at 0x7f515050b640>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SelectV2 (<function _SelectGradV2 at 0x7f515050b6d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MatMul (<function _MatMulGrad at 0x7f515050b880>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatMul (<function _SparseMatMulGrad at 0x7f515050b910>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Floor (<function _FloorGrad at 0x7f515050b9a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Ceil (<function _CeilGrad at 0x7f515050ba30>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Round (<function _RoundGrad at 0x7f515050bac0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Rint (<function _RintGrad at 0x7f515050bb50>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchMatMul (<function _BatchMatMul at 0x7f515050bbe0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchMatMulV3 (<function _BatchMatMulV2 at 0x7f515050bc70>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BatchMatMulV2 (<function _BatchMatMulV2 at 0x7f515050bc70>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Range (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LinSpace (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Complex (<function _ComplexGrad at 0x7f515050bd00>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Real (<function _RealGrad at 0x7f515050bd90>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Imag (<function _ImagGrad at 0x7f515050be20>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Angle (<function _AngleGrad at 0x7f515050beb0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conj (<function _ConjGrad at 0x7f515050bf40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ComplexAbs (<function _ComplexAbsGrad at 0x7f5150510040>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cast (<function _CastGrad at 0x7f51505100d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cross (<function _CrossGrad at 0x7f5150510160>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cumsum (<function _CumsumGrad at 0x7f51505101f0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Cumprod (<function _CumprodGrad at 0x7f5150510280>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CumulativeLogsumexp (<function _CumulativeLogsumexpGrad at 0x7f5150510310>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NextAfter (<function _NextAfterGrad at 0x7f51505103a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering OptionalFromValue (<function _OptionalFromValueGrad at 0x7f5150510430>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering OptionalGetValue (<function _OptionalGetValueGrad at 0x7f51505104c0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RandomGamma (<function _RandomGammaGrad at 0x7f5150510820>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessRandomGammaV2 (<function _StatelessRandomGammaV2Grad at 0x7f5150510ca0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessParameterizedTruncatedNormal (<function _StatelessParameterizedTruncatedNormalGrad at 0x7f5150510dc0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CompositeTensorVariantFromComponents (<function _composite_tensor_to_variants_grad at 0x7f51505623b0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CompositeTensorVariantToComponents (<function _composite_tensor_from_variant_grad at 0x7f5150562680>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering queue_runners ((<class 'tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef'>, <function QueueRunner.to_proto at 0x7f51505abac0>, <function QueueRunner.from_proto at 0x7f51505abb50>)) in proto functions.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RaggedGather (<function _ragged_gather_grad at 0x7f515046b400>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RandomCrop (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering HSVToRGB (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DrawBoundingBoxes (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SampleDistortedBoundingBox (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SampleDistortedBoundingBoxV2 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ExtractGlimpse (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NonMaxSuppression (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NonMaxSuppressionV2 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NonMaxSuppressionWithOverlaps (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GenerateBoundingBoxProposals (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ImageProjectiveTransformV2 (<function _image_projective_transform_grad at 0x7f51503555a0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ImageProjectiveTransformV3 (<function _image_projective_transform_v3_grad at 0x7f5150355b40>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArray (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGrad (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArraySize (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayClose (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayV2 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGradV2 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArraySizeV2 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayCloseV2 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayV3 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGradV3 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGradWithShape (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArraySizeV3 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayCloseV3 (None) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayReadV3 (<function _TensorArrayReadGrad at 0x7f5150356440>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayReadV2 (<function _TensorArrayReadGrad at 0x7f5150356440>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayRead (<function _TensorArrayReadGrad at 0x7f5150356440>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayWriteV3 (<function _TensorArrayWriteGrad at 0x7f51503564d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayWriteV2 (<function _TensorArrayWriteGrad at 0x7f51503564d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayWrite (<function _TensorArrayWriteGrad at 0x7f51503564d0>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGatherV3 (<function _TensorArrayGatherGrad at 0x7f5150356560>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGatherV2 (<function _TensorArrayGatherGrad at 0x7f5150356560>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayGather (<function _TensorArrayGatherGrad at 0x7f5150356560>) in gradient.
9319 139989459988480 01-12 08:10:59 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayScatterV3 (<function _TensorArrayScatterGrad at 0x7f51503565f0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayScatterV2 (<function _TensorArrayScatterGrad at 0x7f51503565f0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayScatter (<function _TensorArrayScatterGrad at 0x7f51503565f0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayConcatV3 (<function _TensorArrayConcatGrad at 0x7f5150356680>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayConcatV2 (<function _TensorArrayConcatGrad at 0x7f5150356680>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArrayConcat (<function _TensorArrayConcatGrad at 0x7f5150356680>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArraySplitV3 (<function _TensorArraySplitGrad at 0x7f5150356710>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArraySplitV2 (<function _TensorArraySplitGrad at 0x7f5150356710>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering TensorArraySplit (<function _TensorArraySplitGrad at 0x7f5150356710>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NcclAllReduce (<function _all_sum_grad at 0x7f514fdfd360>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NcclReduce (<function _reduce_sum_grad at 0x7f514fdfd990>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NcclBroadcast (<function _broadcast_grad at 0x7f514fdfdab0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py:32.<module> Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CudnnRNN (<function _cudnn_rnn_backward at 0x7f514faab910>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CudnnRNNV2 (<function _cudnn_rnn_backward_v2 at 0x7f514fae3e20>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CudnnRNNV3 (<function _cudnn_rnn_backwardv3 at 0x7f514fae3f40>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BlockLSTM (<function _block_lstm_grad at 0x7f514f8f8040>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BlockLSTMV2 (<function _block_lstm_grad at 0x7f514f8f8040>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseAddGrad (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseConcat (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseReorder (<function _SparseReorderGrad at 0x7f514f910160>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseAdd (<function _SparseAddGrad at 0x7f514f9101f0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseTensorDenseAdd (<function _SparseTensorDenseAddGrad at 0x7f514f910280>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseReduceSum (<function _SparseReduceSumGrad at 0x7f514f910310>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSlice (<function _SparseSliceGrad at 0x7f514f9103a0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseTensorDenseMatMul (<function _SparseTensorDenseMatMulGrad at 0x7f514f910430>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseDenseCwiseAdd (<function _SparseDenseCwiseAddGrad at 0x7f514f9104c0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseDenseCwiseMul (<function _SparseDenseCwiseMulGrad at 0x7f514f9105e0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseDenseCwiseDiv (<function _SparseDenseCwiseDivGrad at 0x7f514f910670>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSoftmax (<function _SparseSoftmaxGrad at 0x7f514f910700>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSparseMaximum (<function _SparseSparseMaximumGrad at 0x7f514f910790>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseSparseMinimum (<function _SparseSparseMinimumGrad at 0x7f514f910820>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseFillEmptyRows (<function _SparseFillEmptyRowsGrad at 0x7f514f9108b0>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseToDense (<function _SparseToDenseGrad at 0x7f514f910940>) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Assign (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AssignAdd (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AssignSub (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterAdd (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterSub (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterMul (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterDiv (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNdUpdate (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNdAdd (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNdSub (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNdMul (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ScatterNdDiv (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DecodeProtoV2 (None) in gradient.
9319 139989459988480 01-12 08:11:00 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering EncodeProto (None) in gradient.
9319 139989459988480 01-12 08:11:01 /usr/local/lib/python3.10/dist-packages/h5py/__init__.py:47.<module> Creating converter from 7 to 5
9319 139989459988480 01-12 08:11:01 /usr/local/lib/python3.10/dist-packages/h5py/__init__.py:47.<module> Creating converter from 5 to 7
9319 139989459988480 01-12 08:11:01 /usr/local/lib/python3.10/dist-packages/h5py/__init__.py:47.<module> Creating converter from 7 to 5
9319 139989459988480 01-12 08:11:01 /usr/local/lib/python3.10/dist-packages/h5py/__init__.py:47.<module> Creating converter from 5 to 7
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering If (<function _IfGrad at 0x7f514e7abd90>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessIf (<function _IfGrad at 0x7f514e7abd90>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessCase (<function _CaseGrad at 0x7f514e7cad40>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Case (<function _CaseGrad at 0x7f514e7cad40>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering While (<function _WhileGrad at 0x7f514df1b520>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering StatelessWhile (<function _WhileGrad at 0x7f514df1b520>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FFT (<function _fft_grad at 0x7f514db26170>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IFFT (<function _ifft_grad at 0x7f514db26c20>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FFT2D (<function _fft2d_grad at 0x7f514db26cb0>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IFFT2D (<function _ifft2d_grad at 0x7f514db26d40>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering FFT3D (<function _fft3d_grad at 0x7f514db26dd0>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IFFT3D (<function _ifft3d_grad at 0x7f514db26e60>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RFFT (<function _rfft_grad_helper.<locals>._grad at 0x7f514db27250>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IRFFT (<function _irfft_grad_helper.<locals>._grad at 0x7f514db27400>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RFFT2D (<function _rfft_grad_helper.<locals>._grad at 0x7f514db27490>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering IRFFT2D (<function _irfft_grad_helper.<locals>._grad at 0x7f514db27520>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DenseToCSRSparseMatrix (<function _DenseToCSRSparseMatrixGrad at 0x7f514dbcc280>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CSRSparseMatrixToDense (<function _CSRSparseMatrixToDenseGrad at 0x7f514dbf1480>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseTensorToCSRSparseMatrix (<function _SparseTensorToCSRSparseMatrixGrad at 0x7f514dbf1510>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CSRSparseMatrixToSparseTensor (<function _CSRSparseMatrixToSparseTensorGrad at 0x7f514dbf15a0>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixNNZ (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixZeros (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixAdd (<function _SparseMatrixAddGrad at 0x7f514dbf1750>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixTranspose (<function _SparseMatrixTransposeGrad at 0x7f514dbf1870>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixSoftmax (<function _SparseMatrixSoftmaxGrad at 0x7f514dbf1900>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixMatMul (<function _SparseMatrixMatMulGrad at 0x7f514dbf1990>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixSparseMatMul (<function _SparseMatrixSparseMatMulGrad at 0x7f514dbf1a20>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SparseMatrixMul (<function _SparseMatrixMulGrad at 0x7f514dbf1ab0>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RaggedTensorToTensor (<function _ragged_tensor_to_tensor_grad at 0x7f514dbf39a0>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RaggedTensorFromVariant (<function _ragged_tensor_from_variant_grad at 0x7f514dbf3d00>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RaggedTensorToVariant (<function _ragged_tensor_to_variant_grad at 0x7f514dbf3d90>) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Reciprocal,flops (<function _reciprocal_flops at 0x7f514d752dd0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Square,flops (<function _square_flops at 0x7f514d7536d0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Rsqrt,flops (<function _rsqrt_flops at 0x7f514d753760>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Log,flops (<function _log_flops at 0x7f514d7537f0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Neg,flops (<function _neg_flops at 0x7f514d753880>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AssignSub,flops (<function _assign_sub_flops at 0x7f514d753910>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AssignAdd,flops (<function _assign_add_flops at 0x7f514d7539a0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering L2Loss,flops (<function _l2_loss_flops at 0x7f514d753a30>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Softmax,flops (<function _softmax_flops at 0x7f514d753ac0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Add,flops (<function _add_flops at 0x7f514d753be0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sub,flops (<function _sub_flops at 0x7f514d753c70>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Mul,flops (<function _mul_flops at 0x7f514d753d00>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RealDiv,flops (<function _real_div_flops at 0x7f514d753d90>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Maximum,flops (<function _maximum_flops at 0x7f514d753e20>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Minimum,flops (<function _minimum_flops at 0x7f514d753eb0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Pow,flops (<function _pow_flops at 0x7f514d753f40>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering RsqrtGrad,flops (<function _rsqrt_grad_flops at 0x7f514d784040>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GreaterEqual,flops (<function _greater_equal_flops at 0x7f514d7840d0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Greater,flops (<function _greater_flops at 0x7f514d784160>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LessEqual,flops (<function _less_equal_flops at 0x7f514d7841f0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Less,flops (<function _less_flops at 0x7f514d784280>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Equal,flops (<function _equal_flops at 0x7f514d784310>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering NotEqual,flops (<function _not_equal_flops at 0x7f514d7843a0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SquaredDifference,flops (<function _squared_difference_flops at 0x7f514d784430>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Mean,flops (<function _mean_flops at 0x7f514d784550>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Sum,flops (<function _sum_flops at 0x7f514d7845e0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ArgMax,flops (<function _arg_max_flops at 0x7f514d784670>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering ArgMin,flops (<function _arg_min_flops at 0x7f514d784700>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering BiasAddGrad,flops (<function _bias_add_grad_flops at 0x7f514d784790>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AvgPool,flops (<function _avg_pool_flops at 0x7f514d784940>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPool,flops (<function _max_pool_flops at 0x7f514d7849d0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AvgPoolGrad,flops (<function _avg_pool_grad_flops at 0x7f514d784a60>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering MaxPoolGrad,flops (<function _max_pool_grad_flops at 0x7f514d784af0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv2DBackpropInput,flops (<function _conv_2d_backprop_input_flops at 0x7f514d784b80>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Conv2DBackpropFilter,flops (<function _conv_2d_backprop_filter_flops at 0x7f514d784c10>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AddN,flops (<function _add_n_flops at 0x7f514d784ca0>) in statistical functions.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SdcaFprint (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SdcaOptimizer (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SdcaOptimizerV2 (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering SdcaShrinkL1 (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering GenerateVocabRemapping (None) in gradient.
9319 139989459988480 01-12 08:11:02 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering LoadAndRemapMatrix (None) in gradient.
9319 139989459988480 01-12 08:11:03 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DebugGradientIdentity (<function _identify_gradient_grad at 0x7f514c7936d0>) in gradient.
9319 139989459988480 01-12 08:11:03 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DebugGradientRefIdentity (<function _identify_gradient_grad_ref at 0x7f514c793eb0>) in gradient.
9319 139989459988480 01-12 08:11:03 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering DebugIdentityV2 (<function _debug_identity_v2_grad at 0x7f514bf45630>) in gradient.
9319 139989459988480 01-12 08:11:03 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering AudioMicrofrontend (None) in gradient.
9319 139989459988480 01-12 08:11:03 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering Relayout (<function _relayout_gradient at 0x7f514ab3a050>) in gradient.
9319 139989459988480 01-12 08:11:04 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/registry.py:62.register Registering CopyToMesh (<function _copy_to_mesh_gradient at 0x7f514ab3af80>) in gradient.
9319 139989459988480 01-12 08:11:04 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/ops.py:6153.enable_eager_execution Enabling eager execution
9319 139989459988480 01-12 08:11:04 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/tensor_shape.py:84.enable_v2_tensorshape Enabling v2 tensorshape
9319 139989459988480 01-12 08:11:04 /usr/local/lib/python3.10/dist-packages/tensorflow/python/ops/variable_scope.py:240.enable_resource_variables Enabling resource variables
9319 139989459988480 01-12 08:11:04 /usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/ops.py:273.enable_tensor_equality Enabling tensor equality
9319 139989459988480 01-12 08:11:04 /usr/local/lib/python3.10/dist-packages/tensorflow/python/ops/control_flow_v2_toggles.py:43.enable_control_flow_v2 Enabling control flow v2
******************** import tf END
******************** call op/ matmul BEGIN
2023-01-12 08:11:05.219641: I tensorflow/compiler/xla/parse_flags_from_env.cc:196] For env var TF_XLA_FLAGS found arguments:
2023-01-12 08:11:05.219703: I tensorflow/compiler/xla/parse_flags_from_env.cc:198]   argv[0] = <argv[0]>
2023-01-12 08:11:05.219815: I tensorflow/compiler/xla/parse_flags_from_env.cc:196] For env var TF_JITRT_FLAGS found arguments:
2023-01-12 08:11:05.219854: I tensorflow/compiler/xla/parse_flags_from_env.cc:198]   argv[0] = <argv[0]>
2023-01-12 08:11:05.219962: I tensorflow/compiler/jit/xla_cpu_device.cc:44] Not creating XLA devices, tf_xla_enable_xla_devices not set and XLA device creation not requested
2023-01-12 08:11:05.226146: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-12 08:11:05.230342: I tensorflow/compiler/jit/xla_cpu_device.cc:58] Not creating XLA devices, tf_xla_enable_xla_devices not set
2023-01-12 08:11:05.235006: I tensorflow/core/common_runtime/process_util.cc:159] Session inter op parallelism threads: 8
2023-01-12 08:11:05.241214: I ./tensorflow/core/common_runtime/eager/context.h:603] Creating rendezvous using local_device_mgr.
2023-01-12 08:11:05.243435: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogRawAllocation { step_id: -3 operation: "TF_NewTensor" num_bytes: 72 ptr: 93931475291520 allocation_id: 1 allocator_name: "cpu" }
2023-01-12 08:11:05.245483: I tensorflow/core/common_runtime/eager/tensor_handle.cc:253] Creating Local TensorHandle: 0x556e1ce8bbf0 device: [] tensor: Tensor<type: double shape: [3,3]>
2023-01-12 08:11:05.246778: I tensorflow/core/common_runtime/eager/execute.cc:1795] op: _EagerConst is not Async.
2023-01-12 08:11:05.246896: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.419471: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: /root/.vscode-server/extensions/ms-python.python-2022.20.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy.runfiles/org_tensorflow not found". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::PosixFileSystem::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tsl::TransactionToken*)
        tsl::FileSystem::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tsl::FileSystem::IsDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tsl::TransactionToken*)
        tsl::FileSystem::IsDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tsl::Env::IsDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::LoadDynamicKernelsInternal()
        void std::__invoke_impl<void, void (&)()>(std::__invoke_other, void (&)())
        std::__invoke_result<void (&)()>::type std::__invoke<void (&)()>(void (&)())
        std::invoke_result<void (&)()>::type std::invoke<void (&)()>(void (&)())
        void absl::lts_20220623::base_internal::CallOnceImpl<void (&)()>(std::atomic<unsigned int>*, absl::lts_20220623::base_internal::SchedulingMode, void (&)())
        void absl::lts_20220623::call_once<void (&)()>(absl::lts_20220623::once_flag&, void (&)())
        tensorflow::LoadDynamicKernels()



        tensorflow::SupportedDeviceTypesForNode(std::vector<tsl::DeviceType, std::allocator<tsl::DeviceType> > const&, tensorflow::NodeDef const&, absl::lts_20220623::InlinedVector<std::pair<tsl::DeviceType, int>, 4ul, std::allocator<std::pair<tsl::DeviceType, int> > >*, tensorflow::DeviceNameUtils::ParsedName const*)
        tensorflow::EagerContext::SelectDevice(tensorflow::DeviceNameUtils::ParsedName, tensorflow::NodeDef const&, tensorflow::Device**) const



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:05.534020: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: /root/.vscode-server/extensions/ms-python.python-2022.20.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../tensorflow/core/kernels; No such file or directory". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::errors::IOError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
        tsl::PosixFileSystem::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tsl::TransactionToken*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
        tsl::FileSystem::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
        tsl::Env::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
        tensorflow::LoadDynamicKernelsInternal()
        void std::__invoke_impl<void, void (&)()>(std::__invoke_other, void (&)())
        std::__invoke_result<void (&)()>::type std::__invoke<void (&)()>(void (&)())
        std::invoke_result<void (&)()>::type std::invoke<void (&)()>(void (&)())
        void absl::lts_20220623::base_internal::CallOnceImpl<void (&)()>(std::atomic<unsigned int>*, absl::lts_20220623::base_internal::SchedulingMode, void (&)())
        void absl::lts_20220623::call_once<void (&)()>(absl::lts_20220623::once_flag&, void (&)())
        tensorflow::LoadDynamicKernels()



        tensorflow::SupportedDeviceTypesForNode(std::vector<tsl::DeviceType, std::allocator<tsl::DeviceType> > const&, tensorflow::NodeDef const&, absl::lts_20220623::InlinedVector<std::pair<tsl::DeviceType, int>, 4ul, std::allocator<std::pair<tsl::DeviceType, int> > >*, tensorflow::DeviceNameUtils::ParsedName const*)
        tensorflow::EagerContext::SelectDevice(tensorflow::DeviceNameUtils::ParsedName, tensorflow::NodeDef const&, tensorflow::Device**) const



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:05.537886: I tensorflow/core/common_runtime/eager/execute.cc:1036] PreferredDevice _EagerConst: /job:localhost/replica:0/task:0
2023-01-12 08:11:05.537955: I tensorflow/core/common_runtime/eager/execute.cc:1037] Placer place op [_EagerConst] on device: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:05.540736: I tensorflow/core/common_runtime/eager/execute.cc:1039] Available kernels for _EagerConst are  device='GPU'; T in [DT_BOOL]
  device='GPU'; T in [DT_VARIANT]
  device='GPU'; T in [DT_COMPLEX128]
  device='GPU'; T in [DT_COMPLEX64]
  device='GPU'; T in [DT_INT8]
  device='GPU'; T in [DT_UINT8]
  device='GPU'; T in [DT_INT16]
  device='GPU'; T in [DT_UINT16]
  device='GPU'; T in [DT_UINT32]
  device='GPU'; T in [DT_INT64]
  device='GPU'; T in [DT_UINT64]
  device='GPU'; T in [DT_DOUBLE]
  device='GPU'; T in [DT_FLOAT]
  device='GPU'; T in [DT_BFLOAT16]
  device='GPU'; T in [DT_HALF]
  device='CPU'
  device='DEFAULT'; T in [DT_RESOURCE]
  device='DEFAULT'; T in [DT_STRING]
  device='DEFAULT'; T in [DT_INT32]
  device='DEFAULT'; T in [DT_BOOL]
  device='DEFAULT'; T in [DT_VARIANT]
  device='DEFAULT'; T in [DT_COMPLEX128]
  device='DEFAULT'; T in [DT_COMPLEX64]
  device='DEFAULT'; T in [DT_INT8]
  device='DEFAULT'; T in [DT_UINT8]
  device='DEFAULT'; T in [DT_INT16]
  device='DEFAULT'; T in [DT_UINT16]
  device='DEFAULT'; T in [DT_UINT32]
  device='DEFAULT'; T in [DT_INT64]
  device='DEFAULT'; T in [DT_UINT64]
  device='DEFAULT'; T in [DT_DOUBLE]
  device='DEFAULT'; T in [DT_FLOAT]
  device='DEFAULT'; T in [DT_BFLOAT16]
  device='DEFAULT'; T in [DT_HALF]

2023-01-12 08:11:05.540925: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.541006: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.541072: I tensorflow/core/common_runtime/eager/execute.cc:987] _EagerConst:input:0 /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:05.666306: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Unknown composite device: /job:localhost/replica:0/task:0/device:CPU:0". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)

        tensorflow::EagerContext::FindCompositeDeviceFromName(std::basic_string_view<char, std::char_traits<char> >, tensorflow::CompositeDevice**) const



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:05.666441: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.666477: I tensorflow/core/common_runtime/eager/execute.cc:923] ctx.RunEagerOpAsFunction(): 1
2023-01-12 08:11:05.666490: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.666521: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.666609: I tensorflow/core/common_runtime/eager/execute.cc:1118] Creating new kernel for _EagerConst on device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:05.666650: I tensorflow/core/common_runtime/eager/execute.cc:1143] _EagerConst function_outputs_on_op_device: 0
2023-01-12 08:11:05.666663: I tensorflow/core/common_runtime/eager/execute.cc:1148] Device for [_EagerConst] already set to: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:05.666670: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:05.671431: I tensorflow/core/common_runtime/eager/execute.cc:858] signature {
  name: "__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0"
  input_arg {
    name: "input"
    type_attr: "T"
  }
  output_arg {
    name: "output"
    type_attr: "T"
  }
  attr {
    name: "T"
    type: "type"
  }
}
node_def {
  name: "_EagerConst"
  op: "_EagerConst"
  input: "input:0"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      placeholder: "T"
    }
  }
}
ret {
  key: "output"
  value: "_EagerConst:output:0"
}

2023-01-12 08:11:05.704412: I tensorflow/core/framework/op.cc:130] All registered Ops:
2023-01-12 08:11:05.704527: I tensorflow/core/framework/op.cc:132] Op<name=A; signature= -> out:float>
2023-01-12 08:11:05.704572: I tensorflow/core/framework/op.cc:132] Op<name=Abort; signature= -> ; attr=error_msg:string,default=""; attr=exit_without_error:bool,default=false>
2023-01-12 08:11:05.704622: I tensorflow/core/framework/op.cc:132] Op<name=Abs; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.704884: I tensorflow/core/framework/op.cc:132] Op<name=AccumulateNV2; signature=inputs:N*T -> sum:T; attr=N:int,min=1; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=shape:shape; is_commutative=true; is_aggregate=true>
2023-01-12 08:11:05.704976: I tensorflow/core/framework/op.cc:132] Op<name=AccumulatorApplyGradient; signature=handle:Ref(string), local_step:int64, gradient:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.705023: I tensorflow/core/framework/op.cc:132] Op<name=AccumulatorNumAccumulated; signature=handle:Ref(string) -> num_accumulated:int32>
2023-01-12 08:11:05.705034: I tensorflow/core/framework/op.cc:132] Op<name=AccumulatorSetGlobalStep; signature=handle:Ref(string), new_global_step:int64 -> >
2023-01-12 08:11:05.705059: I tensorflow/core/framework/op.cc:132] Op<name=AccumulatorTakeGradient; signature=handle:Ref(string), num_required:int32 -> average:dtype; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.705228: I tensorflow/core/framework/op.cc:132] Op<name=Acos; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.705293: I tensorflow/core/framework/op.cc:132] Op<name=Acosh; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.705459: I tensorflow/core/framework/op.cc:132] Op<name=Add; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128, DT_STRING]>
2023-01-12 08:11:05.705551: I tensorflow/core/framework/op.cc:132] Op<name=AddManySparseToTensorsMap; signature=sparse_indices:int64, sparse_values:T, sparse_shape:int64 -> sparse_handles:int64; attr=T:type; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.705678: I tensorflow/core/framework/op.cc:132] Op<name=AddN; signature=inputs:N*T -> sum:T; attr=N:int,min=1; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_VARIANT]; is_commutative=true; is_aggregate=true>
2023-01-12 08:11:05.705731: I tensorflow/core/framework/op.cc:132] Op<name=AddSparseToTensorsMap; signature=sparse_indices:int64, sparse_values:T, sparse_shape:int64 -> sparse_handle:int64; attr=T:type; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.705757: I tensorflow/core/framework/op.cc:132] Op<name=AddV2; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; is_commutative=true; is_aggregate=true>
2023-01-12 08:11:05.705808: I tensorflow/core/framework/op.cc:132] Op<name=AdjustContrast; signature=images:T, contrast_factor:float, min_value:float, max_value:float -> output:float; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.705829: I tensorflow/core/framework/op.cc:132] Op<name=AdjustContrastv2; signature=images:T, contrast_factor:float -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.706014: I tensorflow/core/framework/op.cc:132] Op<name=AdjustHue; signature=images:T, delta:float -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.706120: I tensorflow/core/framework/op.cc:132] Op<name=AdjustSaturation; signature=images:T, scale:float -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.706143: I tensorflow/core/framework/op.cc:132] Op<name=All; signature=input:bool, reduction_indices:Tidx -> output:bool; attr=keep_dims:bool,default=false; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.706160: I tensorflow/core/framework/op.cc:132] Op<name=AllCandidateSampler; signature=true_classes:int64 -> sampled_candidates:int64, true_expected_count:float, sampled_expected_count:float; attr=num_true:int,min=1; attr=num_sampled:int,min=1; attr=unique:bool; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:05.706199: I tensorflow/core/framework/op.cc:132] Op<name=AllToAll; signature=input:T, group_assignment:int32 -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=concat_dimension:int; attr=split_dimension:int; attr=split_count:int; is_stateful=true>
2023-01-12 08:11:05.706262: I tensorflow/core/framework/op.cc:132] Op<name=Angle; signature=input:T -> output:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.706277: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousHashTable; signature= -> table_handle:resource; attr=key_dtype:type; attr=value_dtype:type; is_stateful=true>
2023-01-12 08:11:05.706317: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousIterator; signature= -> handle:resource; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.706333: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousIteratorV2; signature= -> handle:resource, deleter:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.706373: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousIteratorV3; signature= -> handle:resource; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.706387: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousMemoryCache; signature= -> handle:resource, deleter:variant; is_stateful=true>
2023-01-12 08:11:05.706399: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousMultiDeviceIterator; signature= -> handle:resource, deleter:variant; attr=devices:list(string),min=1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.706409: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousMultiDeviceIteratorV3; signature= -> handle:resource; attr=devices:list(string),min=1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.706472: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousMutableDenseHashTable; signature=empty_key:key_dtype, deleted_key:key_dtype -> table_handle:resource; attr=key_dtype:type; attr=value_dtype:type; attr=value_shape:shape,default=[]; attr=initial_num_buckets:int,default=131072; attr=max_load_factor:float,default=0.8; is_stateful=true>
2023-01-12 08:11:05.706513: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousMutableHashTable; signature= -> table_handle:resource; attr=key_dtype:type; attr=value_dtype:type; is_stateful=true>
2023-01-12 08:11:05.706530: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousMutableHashTableOfTensors; signature= -> table_handle:resource; attr=key_dtype:type; attr=value_dtype:type; attr=value_shape:shape,default=[]; is_stateful=true>
2023-01-12 08:11:05.706541: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousRandomSeedGenerator; signature=seed:int64, seed2:int64 -> handle:resource, deleter:variant; is_stateful=true>
2023-01-12 08:11:05.706568: I tensorflow/core/framework/op.cc:132] Op<name=AnonymousSeedGenerator; signature=seed:int64, seed2:int64, reshuffle:bool -> handle:resource, deleter:variant; is_stateful=true>
2023-01-12 08:11:05.706615: I tensorflow/core/framework/op.cc:132] Op<name=Any; signature=input:bool, reduction_indices:Tidx -> output:bool; attr=keep_dims:bool,default=false; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.706659: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAdaMax; signature=var:Ref(T), m:Ref(T), v:Ref(T), beta1_power:T, lr:T, beta1:T, beta2:T, epsilon:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.706717: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAdadelta; signature=var:Ref(T), accum:Ref(T), accum_update:Ref(T), lr:T, rho:T, epsilon:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.706757: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAdagrad; signature=var:Ref(T), accum:Ref(T), lr:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true>
2023-01-12 08:11:05.706831: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAdagradDA; signature=var:Ref(T), gradient_accumulator:Ref(T), gradient_squared_accumulator:Ref(T), grad:T, lr:T, l1:T, l2:T, global_step:int64 -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.706920: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAdagradV2; signature=var:Ref(T), accum:Ref(T), lr:T, epsilon:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true>
2023-01-12 08:11:05.706953: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAdam; signature=var:Ref(T), m:Ref(T), v:Ref(T), beta1_power:T, beta2_power:T, lr:T, beta1:T, beta2:T, epsilon:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false>
2023-01-12 08:11:05.707066: I tensorflow/core/framework/op.cc:132] Op<name=ApplyAddSign; signature=var:Ref(T), m:Ref(T), lr:T, alpha:T, sign_decay:T, beta:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.707359: I tensorflow/core/framework/op.cc:132] Op<name=ApplyCenteredRMSProp; signature=var:Ref(T), mg:Ref(T), ms:Ref(T), mom:Ref(T), lr:T, rho:T, momentum:T, epsilon:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.707502: I tensorflow/core/framework/op.cc:132] Op<name=ApplyFtrl; signature=var:Ref(T), accum:Ref(T), linear:Ref(T), grad:T, lr:T, l1:T, l2:T, lr_power:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false>
2023-01-12 08:11:05.707568: I tensorflow/core/framework/op.cc:132] Op<name=ApplyFtrlV2; signature=var:Ref(T), accum:Ref(T), linear:Ref(T), grad:T, lr:T, l1:T, l2:T, l2_shrinkage:T, lr_power:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false>
2023-01-12 08:11:05.707654: I tensorflow/core/framework/op.cc:132] Op<name=ApplyGradientDescent; signature=var:Ref(T), alpha:T, delta:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.707702: I tensorflow/core/framework/op.cc:132] Op<name=ApplyMomentum; signature=var:Ref(T), accum:Ref(T), lr:T, grad:T, momentum:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false>
2023-01-12 08:11:05.707786: I tensorflow/core/framework/op.cc:132] Op<name=ApplyPowerSign; signature=var:Ref(T), m:Ref(T), lr:T, logbase:T, sign_decay:T, beta:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.707905: I tensorflow/core/framework/op.cc:132] Op<name=ApplyProximalAdagrad; signature=var:Ref(T), accum:Ref(T), lr:T, l1:T, l2:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.707948: I tensorflow/core/framework/op.cc:132] Op<name=ApplyProximalGradientDescent; signature=var:Ref(T), alpha:T, l1:T, l2:T, delta:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.708127: I tensorflow/core/framework/op.cc:132] Op<name=ApplyRMSProp; signature=var:Ref(T), ms:Ref(T), mom:Ref(T), lr:T, rho:T, momentum:T, epsilon:T, grad:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.708213: I tensorflow/core/framework/op.cc:132] Op<name=ApproxTopK; signature=input:T -> values:T, indices:int32; attr=k:int,min=0; attr=reduction_dimension:int,default=-1; attr=recall_target:float,default=0.95; attr=is_max_k:bool,default=true; attr=reduction_input_size_override:int,default=-1; attr=aggregate_to_topk:bool,default=true; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:05.708338: I tensorflow/core/framework/op.cc:132] Op<name=ApproximateEqual; signature=x:T, y:T -> z:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=tolerance:float,default=1e-05; is_commutative=true>
2023-01-12 08:11:05.708438: I tensorflow/core/framework/op.cc:132] Op<name=ArgMax; signature=input:T, dimension:Tidx -> output:output_type; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT16, DT_INT32, DT_INT64]; attr=output_type:type,default=DT_INT64,allowed=[DT_INT16, DT_UINT16, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.708558: I tensorflow/core/framework/op.cc:132] Op<name=ArgMin; signature=input:T, dimension:Tidx -> output:output_type; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=output_type:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.708802: I tensorflow/core/framework/op.cc:132] Op<name=AsString; signature=input:T -> output:string; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 5860732143377197644, DT_UINT64, DT_COMPLEX64, DT_COMPLEX128, DT_BOOL, DT_VARIANT]; attr=precision:int,default=-1; attr=scientific:bool,default=false; attr=shortest:bool,default=false; attr=width:int,default=-1; attr=fill:string,default="">
2023-01-12 08:11:05.708924: I tensorflow/core/framework/op.cc:132] Op<name=Asin; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.709093: I tensorflow/core/framework/op.cc:132] Op<name=Asinh; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.709232: I tensorflow/core/framework/op.cc:132] Op<name=Assert; signature=condition:bool, data: -> ; attr=T:list(type),min=1; attr=summarize:int,default=3; is_stateful=true>
2023-01-12 08:11:05.709284: I tensorflow/core/framework/op.cc:132] Op<name=AssertCardinalityDataset; signature=input_dataset:variant, cardinality:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.709312: I tensorflow/core/framework/op.cc:132] Op<name=AssertNextDataset; signature=input_dataset:variant, transformations:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.709336: I tensorflow/core/framework/op.cc:132] Op<name=AssertPrevDataset; signature=input_dataset:variant, transformations:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.709359: I tensorflow/core/framework/op.cc:132] Op<name=Assign; signature=ref:Ref(T), value:T -> output_ref:Ref(T); attr=T:type; attr=validate_shape:bool,default=true; attr=use_locking:bool,default=true; allows_uninitialized_input=true>
2023-01-12 08:11:05.709418: I tensorflow/core/framework/op.cc:132] Op<name=AssignAdd; signature=ref:Ref(T), value:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.709519: I tensorflow/core/framework/op.cc:132] Op<name=AssignAddVariableOp; signature=resource:resource, value:dtype -> ; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:05.709589: I tensorflow/core/framework/op.cc:132] Op<name=AssignSub; signature=ref:Ref(T), value:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:05.709616: I tensorflow/core/framework/op.cc:132] Op<name=AssignSubVariableOp; signature=resource:resource, value:dtype -> ; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:05.709636: I tensorflow/core/framework/op.cc:132] Op<name=AssignVariableOp; signature=resource:resource, value:dtype -> ; attr=dtype:type; attr=validate_shape:bool,default=false; is_stateful=true>
2023-01-12 08:11:05.709665: I tensorflow/core/framework/op.cc:132] Op<name=AssignVariableXlaConcatND; signature=resource:resource, inputs:N*T -> ; attr=T:type; attr=N:int,min=1; attr=num_concats:list(int); attr=paddings:list(int),default=[]; is_stateful=true>
2023-01-12 08:11:05.709698: I tensorflow/core/framework/op.cc:132] Op<name=Atan; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.709719: I tensorflow/core/framework/op.cc:132] Op<name=Atan2; signature=y:T, x:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.709734: I tensorflow/core/framework/op.cc:132] Op<name=Atanh; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.709745: I tensorflow/core/framework/op.cc:132] Op<name=Attr; signature= -> ; attr=a:int>
2023-01-12 08:11:05.709756: I tensorflow/core/framework/op.cc:132] Op<name=AttrBool; signature= -> ; attr=a:bool>
2023-01-12 08:11:05.709776: I tensorflow/core/framework/op.cc:132] Op<name=AttrBoolList; signature= -> ; attr=a:list(bool)>
2023-01-12 08:11:05.709813: I tensorflow/core/framework/op.cc:132] Op<name=AttrDefault; signature= -> ; attr=a:string,default="banana">
2023-01-12 08:11:05.709865: I tensorflow/core/framework/op.cc:132] Op<name=AttrEmptyListDefault; signature= -> ; attr=a:list(float),default=[]>
2023-01-12 08:11:05.709904: I tensorflow/core/framework/op.cc:132] Op<name=AttrEnum; signature= -> ; attr=a:string,allowed=["apples", "oranges"]>
2023-01-12 08:11:05.709940: I tensorflow/core/framework/op.cc:132] Op<name=AttrEnumList; signature= -> ; attr=a:list(string),allowed=["apples", "oranges"]>
2023-01-12 08:11:05.710204: I tensorflow/core/framework/op.cc:132] Op<name=AttrFloat; signature= -> ; attr=a:float>
2023-01-12 08:11:05.710300: I tensorflow/core/framework/op.cc:132] Op<name=AttrListDefault; signature= -> ; attr=a:list(int),default=[5, 15]>
2023-01-12 08:11:05.710341: I tensorflow/core/framework/op.cc:132] Op<name=AttrListMin; signature= -> ; attr=a:list(int),min=2>
2023-01-12 08:11:05.710393: I tensorflow/core/framework/op.cc:132] Op<name=AttrListTypeDefault; signature=a:N*T, b:N*T -> ; attr=T:type,default=DT_INT32; attr=N:int,min=1>
2023-01-12 08:11:05.710425: I tensorflow/core/framework/op.cc:132] Op<name=AttrMin; signature= -> ; attr=a:int,min=5>
2023-01-12 08:11:05.710580: I tensorflow/core/framework/op.cc:132] Op<name=AttrPartialShape; signature= -> ; attr=a:shape>
2023-01-12 08:11:05.710621: I tensorflow/core/framework/op.cc:132] Op<name=AttrPartialShapeList; signature= -> ; attr=a:list(shape)>
2023-01-12 08:11:05.710638: I tensorflow/core/framework/op.cc:132] Op<name=AttrShape; signature= -> ; attr=a:shape>
2023-01-12 08:11:05.710652: I tensorflow/core/framework/op.cc:132] Op<name=AttrShapeList; signature= -> ; attr=a:list(shape)>
2023-01-12 08:11:05.710674: I tensorflow/core/framework/op.cc:132] Op<name=AttrTypeDefault; signature=a:T -> ; attr=T:type,default=DT_INT32>
2023-01-12 08:11:05.711053: I tensorflow/core/framework/op.cc:132] Op<name=AudioMicrofrontend; signature=audio:int16 -> filterbanks:out_type; attr=sample_rate:int,default=16000; attr=window_size:int,default=25; attr=window_step:int,default=10; attr=num_channels:int,default=32; attr=upper_band_limit:float,default=7500; attr=lower_band_limit:float,default=125; attr=smoothing_bits:int,default=10; attr=even_smoothing:float,default=0.025; attr=odd_smoothing:float,default=0.06; attr=min_signal_remaining:float,default=0.05; attr=enable_pcan:bool,default=false; attr=pcan_strength:float,default=0.95; attr=pcan_offset:float,default=80; attr=gain_bits:int,default=21; attr=enable_log:bool,default=true; attr=scale_shift:int,default=6; attr=left_context:int,default=0; attr=right_context:int,default=0; attr=frame_stride:int,default=1; attr=zero_padding:bool,default=false; attr=out_scale:int,default=1; attr=out_type:type,default=DT_UINT16,allowed=[DT_UINT16, DT_FLOAT]>
2023-01-12 08:11:05.711232: I tensorflow/core/framework/op.cc:132] Op<name=AudioSpectrogram; signature=input:float -> spectrogram:float; attr=window_size:int; attr=stride:int; attr=magnitude_squared:bool,default=false>
2023-01-12 08:11:05.711273: I tensorflow/core/framework/op.cc:132] Op<name=AudioSummary; signature=tag:string, tensor:float -> summary:string; attr=sample_rate:float; attr=max_outputs:int,default=3,min=1>
2023-01-12 08:11:05.711316: I tensorflow/core/framework/op.cc:132] Op<name=AudioSummaryV2; signature=tag:string, tensor:float, sample_rate:float -> summary:string; attr=max_outputs:int,default=3,min=1>
2023-01-12 08:11:05.711450: I tensorflow/core/framework/op.cc:132] Op<name=AutoShardDataset; signature=input_dataset:variant, num_workers:int64, index:int64 -> handle:variant; attr=auto_shard_policy:int,default=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=num_replicas:int,default=0>
2023-01-12 08:11:05.711664: I tensorflow/core/framework/op.cc:132] Op<name=AvgPool; signature=value:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.711745: I tensorflow/core/framework/op.cc:132] Op<name=AvgPool3D; signature=input:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.711818: I tensorflow/core/framework/op.cc:132] Op<name=AvgPool3DGrad; signature=orig_input_shape:int32, grad:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.711976: I tensorflow/core/framework/op.cc:132] Op<name=AvgPoolGrad; signature=orig_input_shape:int32, grad:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.712081: I tensorflow/core/framework/op.cc:132] Op<name=B; signature= -> out:float>
2023-01-12 08:11:05.712285: I tensorflow/core/framework/op.cc:132] Op<name=BandedTriangularSolve; signature=matrix:T, rhs:T -> output:T; attr=lower:bool,default=true; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.712400: I tensorflow/core/framework/op.cc:132] Op<name=Barrier; signature= -> handle:Ref(string); attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.712499: I tensorflow/core/framework/op.cc:132] Op<name=BarrierClose; signature=handle:Ref(string) -> ; attr=cancel_pending_enqueues:bool,default=false>
2023-01-12 08:11:05.712607: I tensorflow/core/framework/op.cc:132] Op<name=BarrierIncompleteSize; signature=handle:Ref(string) -> size:int32>
2023-01-12 08:11:05.712730: I tensorflow/core/framework/op.cc:132] Op<name=BarrierInsertMany; signature=handle:Ref(string), keys:string, values:T -> ; attr=T:type; attr=component_index:int>
2023-01-12 08:11:05.712866: I tensorflow/core/framework/op.cc:132] Op<name=BarrierReadySize; signature=handle:Ref(string) -> size:int32>
2023-01-12 08:11:05.712984: I tensorflow/core/framework/op.cc:132] Op<name=BarrierTakeMany; signature=handle:Ref(string), num_elements:int32 -> indices:int64, keys:string, values:; attr=component_types:list(type),min=1; attr=allow_small_batch:bool,default=false; attr=wait_for_incomplete:bool,default=false; attr=timeout_ms:int,default=-1>
2023-01-12 08:11:05.713242: I tensorflow/core/framework/op.cc:132] Op<name=Batch; signature=in_tensors: -> batched_tensors:, batch_index:int64, id:int64; attr=num_batch_threads:int; attr=max_batch_size:int; attr=max_enqueued_batches:int,default=10; attr=batch_timeout_micros:int; attr=allowed_batch_sizes:list(int),default=[]; attr=grad_timeout_micros:int; attr=container:string,default=""; attr=shared_name:string,default=""; attr=batching_queue:string,default=""; attr=T:list(type),min=1; is_distributed_communication=true>
2023-01-12 08:11:05.713730: I tensorflow/core/framework/op.cc:132] Op<name=BatchCholesky; signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.713936: I tensorflow/core/framework/op.cc:132] Op<name=BatchCholeskyGrad; signature=l:T, grad:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.714043: I tensorflow/core/framework/op.cc:132] Op<name=BatchDataset; signature=input_dataset:variant, batch_size:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.714098: I tensorflow/core/framework/op.cc:132] Op<name=BatchDatasetV2; signature=input_dataset:variant, batch_size:int64, drop_remainder:bool -> handle:variant; attr=parallel_copy:bool,default=false; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.714120: I tensorflow/core/framework/op.cc:132] Op<name=BatchFFT; signature=input:complex64 -> output:complex64>
2023-01-12 08:11:05.714139: I tensorflow/core/framework/op.cc:132] Op<name=BatchFFT2D; signature=input:complex64 -> output:complex64>
2023-01-12 08:11:05.714157: I tensorflow/core/framework/op.cc:132] Op<name=BatchFFT3D; signature=input:complex64 -> output:complex64>
2023-01-12 08:11:05.714476: I tensorflow/core/framework/op.cc:132] Op<name=BatchFunction; signature=in_tensors:, captured_tensors: -> out_tensors:; attr=f:func; attr=num_batch_threads:int; attr=max_batch_size:int; attr=batch_timeout_micros:int; attr=max_enqueued_batches:int,default=10; attr=allowed_batch_sizes:list(int),default=[]; attr=container:string,default=""; attr=shared_name:string,default=""; attr=batching_queue:string,default=""; attr=Tin:list(type),min=1; attr=Tcaptured:list(type),min=0; attr=Tout:list(type),min=1; attr=enable_large_batch_splitting:bool,default=false; is_distributed_communication=true>
2023-01-12 08:11:05.714537: I tensorflow/core/framework/op.cc:132] Op<name=BatchIFFT; signature=input:complex64 -> output:complex64>
2023-01-12 08:11:05.714553: I tensorflow/core/framework/op.cc:132] Op<name=BatchIFFT2D; signature=input:complex64 -> output:complex64>
2023-01-12 08:11:05.714568: I tensorflow/core/framework/op.cc:132] Op<name=BatchIFFT3D; signature=input:complex64 -> output:complex64>
2023-01-12 08:11:05.714687: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatMul; signature=x:T, y:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; attr=adj_x:bool,default=false; attr=adj_y:bool,default=false>
2023-01-12 08:11:05.715040: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatMulV2; signature=x:T, y:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; attr=adj_x:bool,default=false; attr=adj_y:bool,default=false>
2023-01-12 08:11:05.715286: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatMulV3; signature=x:Ta, y:Tb -> output:Tout; attr=Ta:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; attr=Tb:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; attr=adj_x:bool,default=false; attr=adj_y:bool,default=false>
2023-01-12 08:11:05.715469: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixBandPart; signature=input:T, num_lower:int64, num_upper:int64 -> band:T; attr=T:type>
2023-01-12 08:11:05.715600: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixDeterminant; signature=input:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.715642: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixDiag; signature=diagonal:T -> output:T; attr=T:type>
2023-01-12 08:11:05.715668: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixDiagPart; signature=input:T -> diagonal:T; attr=T:type>
2023-01-12 08:11:05.715702: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixInverse; signature=input:T -> output:T; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.715730: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixSetDiag; signature=input:T, diagonal:T -> output:T; attr=T:type>
2023-01-12 08:11:05.715772: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixSolve; signature=matrix:T, rhs:T -> output:T; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.716413: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixSolveLs; signature=matrix:T, rhs:T, l2_regularizer:double -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]; attr=fast:bool,default=true>
2023-01-12 08:11:05.716575: I tensorflow/core/framework/op.cc:132] Op<name=BatchMatrixTriangularSolve; signature=matrix:T, rhs:T -> output:T; attr=lower:bool,default=true; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.716692: I tensorflow/core/framework/op.cc:132] Op<name=BatchNormWithGlobalNormalization; signature=t:T, m:T, v:T, beta:T, gamma:T -> result:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=variance_epsilon:float; attr=scale_after_normalization:bool>
2023-01-12 08:11:05.716870: I tensorflow/core/framework/op.cc:132] Op<name=BatchNormWithGlobalNormalizationGrad; signature=t:T, m:T, v:T, gamma:T, backprop:T -> dx:T, dm:T, dv:T, db:T, dg:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=variance_epsilon:float; attr=scale_after_normalization:bool>
2023-01-12 08:11:05.716918: I tensorflow/core/framework/op.cc:132] Op<name=BatchSelfAdjointEig; signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.717036: I tensorflow/core/framework/op.cc:132] Op<name=BatchSelfAdjointEigV2; signature=input:T -> e:T, v:T; attr=compute_v:bool,default=true; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.717078: I tensorflow/core/framework/op.cc:132] Op<name=BatchSvd; signature=input:T -> s:T, u:T, v:T; attr=compute_uv:bool,default=true; attr=full_matrices:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.717106: I tensorflow/core/framework/op.cc:132] Op<name=BatchToSpace; signature=input:T, crops:Tidx -> output:T; attr=T:type; attr=block_size:int,min=2; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.717531: I tensorflow/core/framework/op.cc:132] Op<name=BatchToSpaceND; signature=input:T, block_shape:Tblock_shape, crops:Tcrops -> output:T; attr=T:type; attr=Tblock_shape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tcrops:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.717788: I tensorflow/core/framework/op.cc:132] Op<name=BesselI0; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.717891: I tensorflow/core/framework/op.cc:132] Op<name=BesselI0e; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.717915: I tensorflow/core/framework/op.cc:132] Op<name=BesselI1; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.717941: I tensorflow/core/framework/op.cc:132] Op<name=BesselI1e; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.717974: I tensorflow/core/framework/op.cc:132] Op<name=BesselJ0; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718008: I tensorflow/core/framework/op.cc:132] Op<name=BesselJ1; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718046: I tensorflow/core/framework/op.cc:132] Op<name=BesselK0; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718080: I tensorflow/core/framework/op.cc:132] Op<name=BesselK0e; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718113: I tensorflow/core/framework/op.cc:132] Op<name=BesselK1; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718145: I tensorflow/core/framework/op.cc:132] Op<name=BesselK1e; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718184: I tensorflow/core/framework/op.cc:132] Op<name=BesselY0; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718241: I tensorflow/core/framework/op.cc:132] Op<name=BesselY1; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718287: I tensorflow/core/framework/op.cc:132] Op<name=Betainc; signature=a:T, b:T, x:T -> z:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.718361: I tensorflow/core/framework/op.cc:132] Op<name=BiasAdd; signature=value:T, bias:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]>
2023-01-12 08:11:05.718622: I tensorflow/core/framework/op.cc:132] Op<name=BiasAddGrad; signature=out_backprop:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]>
2023-01-12 08:11:05.718803: I tensorflow/core/framework/op.cc:132] Op<name=BiasAddV1; signature=value:T, bias:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.718893: I tensorflow/core/framework/op.cc:132] Op<name=Binary; signature=a:T, b:T -> out:T; attr=T:type>
2023-01-12 08:11:05.718965: I tensorflow/core/framework/op.cc:132] Op<name=Bincount; signature=arr:int32, size:int32, weights:T -> bins:T; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.719085: I tensorflow/core/framework/op.cc:132] Op<name=Bitcast; signature=input:T -> output:type; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT64, 8575233562720600259, DT_QINT8, DT_QUINT8, DT_QINT16, DT_QUINT16, DT_QINT32]; attr=type:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT64, 8575233562720600259, DT_QINT8, DT_QUINT8, DT_QINT16, DT_QUINT16, DT_QINT32]>
2023-01-12 08:11:05.719135: I tensorflow/core/framework/op.cc:132] Op<name=BitwiseAnd; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]; is_commutative=true>
2023-01-12 08:11:05.719170: I tensorflow/core/framework/op.cc:132] Op<name=BitwiseOr; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]; is_commutative=true>
2023-01-12 08:11:05.719195: I tensorflow/core/framework/op.cc:132] Op<name=BitwiseXor; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]; is_commutative=true>
2023-01-12 08:11:05.719250: I tensorflow/core/framework/op.cc:132] Op<name=BlockLSTM; signature=seq_len_max:int64, x:T, cs_prev:T, h_prev:T, w:T, wci:T, wcf:T, wco:T, b:T -> i:T, cs:T, f:T, o:T, ci:T, co:T, h:T; attr=forget_bias:float,default=1; attr=cell_clip:float,default=3; attr=use_peephole:bool,default=false; attr=T:type,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.722595: I tensorflow/core/framework/op.cc:132] Op<name=BlockLSTMGrad; signature=seq_len_max:int64, x:T, cs_prev:T, h_prev:T, w:T, wci:T, wcf:T, wco:T, b:T, i:T, cs:T, f:T, o:T, ci:T, co:T, h:T, cs_grad:T, h_grad:T -> x_grad:T, cs_prev_grad:T, h_prev_grad:T, w_grad:T, wci_grad:T, wcf_grad:T, wco_grad:T, b_grad:T; attr=use_peephole:bool; attr=T:type,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.722815: I tensorflow/core/framework/op.cc:132] Op<name=BlockLSTMGradV2; signature=seq_len_max:int64, x:T, cs_prev:T, h_prev:T, w:T, wci:T, wcf:T, wco:T, b:T, i:T, cs:T, f:T, o:T, ci:T, co:T, h:T, cs_grad:T, h_grad:T -> x_grad:T, cs_prev_grad:T, h_prev_grad:T, w_grad:T, wci_grad:T, wcf_grad:T, wco_grad:T, b_grad:T; attr=use_peephole:bool; attr=T:type,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.723520: I tensorflow/core/framework/op.cc:132] Op<name=BlockLSTMV2; signature=seq_len_max:int64, x:T, cs_prev:T, h_prev:T, w:T, wci:T, wcf:T, wco:T, b:T -> i:T, cs:T, f:T, o:T, ci:T, co:T, h:T; attr=cell_clip:float,default=0; attr=use_peephole:bool,default=false; attr=T:type,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.724097: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesAggregateStats; signature=node_ids:int32, gradients:float, hessians:float, feature:int32 -> stats_summary:float; attr=max_splits:int,min=1; attr=num_buckets:int,min=1>
2023-01-12 08:11:05.724250: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesBucketize; signature=float_values:num_features*float, bucket_boundaries:num_features*float -> buckets:num_features*int32; attr=num_features:int,min=0>
2023-01-12 08:11:05.724401: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesCalculateBestFeatureSplit; signature=node_id_range:int32, stats_summary:float, l1:float, l2:float, tree_complexity:float, min_node_weight:float -> node_ids:int32, gains:float, feature_dimensions:int32, thresholds:int32, left_node_contribs:float, right_node_contribs:float, split_with_default_directions:string; attr=logits_dimension:int,min=1; attr=split_type:string,default="inequality",allowed=["inequality", "equality"]>
2023-01-12 08:11:05.724511: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesCalculateBestFeatureSplitV2; signature=node_id_range:int32, stats_summaries_list:num_features*float, split_types:string, candidate_feature_ids:int32, l1:float, l2:float, tree_complexity:float, min_node_weight:float -> node_ids:int32, gains:float, feature_ids:int32, feature_dimensions:int32, thresholds:int32, left_node_contribs:float, right_node_contribs:float, split_with_default_directions:string; attr=num_features:int,min=1; attr=logits_dimension:int,min=1>
2023-01-12 08:11:05.724633: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesCalculateBestGainsPerFeature; signature=node_id_range:int32, stats_summary_list:num_features*float, l1:float, l2:float, tree_complexity:float, min_node_weight:float -> node_ids_list:num_features*int32, gains_list:num_features*float, thresholds_list:num_features*int32, left_node_contribs_list:num_features*float, right_node_contribs_list:num_features*float; attr=max_splits:int,min=1; attr=num_features:int,min=1>
2023-01-12 08:11:05.724679: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesCenterBias; signature=tree_ensemble_handle:resource, mean_gradients:float, mean_hessians:float, l1:float, l2:float -> continue_centering:bool; is_stateful=true>
2023-01-12 08:11:05.724938: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesCreateEnsemble; signature=tree_ensemble_handle:resource, stamp_token:int64, tree_ensemble_serialized:string -> ; is_stateful=true>
2023-01-12 08:11:05.725120: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesCreateQuantileStreamResource; signature=quantile_stream_resource_handle:resource, epsilon:float, num_streams:int64 -> ; attr=max_elements:int,default=1099511627776; is_stateful=true>
2023-01-12 08:11:05.725147: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesDeserializeEnsemble; signature=tree_ensemble_handle:resource, stamp_token:int64, tree_ensemble_serialized:string -> ; is_stateful=true>
2023-01-12 08:11:05.725172: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesEnsembleResourceHandleOp; signature= -> resource:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.725192: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesExampleDebugOutputs; signature=tree_ensemble_handle:resource, bucketized_features:num_bucketized_features*int32 -> examples_debug_outputs_serialized:string; attr=num_bucketized_features:int,min=1; attr=logits_dimension:int; is_stateful=true>
2023-01-12 08:11:05.725206: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesFlushQuantileSummaries; signature=quantile_stream_resource_handle:resource -> summaries:num_features*float; attr=num_features:int,min=0; is_stateful=true>
2023-01-12 08:11:05.725221: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesGetEnsembleStates; signature=tree_ensemble_handle:resource -> stamp_token:int64, num_trees:int32, num_finalized_trees:int32, num_attempted_layers:int32, last_layer_nodes_range:int32; is_stateful=true>
2023-01-12 08:11:05.725237: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesMakeQuantileSummaries; signature=float_values:num_features*float, example_weights:float, epsilon:float -> summaries:num_features*float; attr=num_features:int,min=0>
2023-01-12 08:11:05.725254: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesMakeStatsSummary; signature=node_ids:int32, gradients:float, hessians:float, bucketized_features_list:num_features*int32 -> stats_summary:float; attr=max_splits:int,min=1; attr=num_buckets:int,min=1; attr=num_features:int,min=1>
2023-01-12 08:11:05.725275: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesPredict; signature=tree_ensemble_handle:resource, bucketized_features:num_bucketized_features*int32 -> logits:float; attr=num_bucketized_features:int,min=1; attr=logits_dimension:int; is_stateful=true>
2023-01-12 08:11:05.725288: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesQuantileStreamResourceAddSummaries; signature=quantile_stream_resource_handle:resource, summaries:num_features*float -> ; attr=num_features:int,min=0; is_stateful=true>
2023-01-12 08:11:05.725303: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesQuantileStreamResourceDeserialize; signature=quantile_stream_resource_handle:resource, bucket_boundaries:num_streams*float -> ; attr=num_streams:int,min=1; is_stateful=true>
2023-01-12 08:11:05.725317: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesQuantileStreamResourceFlush; signature=quantile_stream_resource_handle:resource, num_buckets:int64 -> ; attr=generate_quantiles:bool,default=false; is_stateful=true>
2023-01-12 08:11:05.725332: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesQuantileStreamResourceGetBucketBoundaries; signature=quantile_stream_resource_handle:resource -> bucket_boundaries:num_features*float; attr=num_features:int,min=0; is_stateful=true>
2023-01-12 08:11:05.725366: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesQuantileStreamResourceHandleOp; signature= -> resource:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.725414: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesSerializeEnsemble; signature=tree_ensemble_handle:resource -> stamp_token:int64, tree_ensemble_serialized:string; is_stateful=true>
2023-01-12 08:11:05.725599: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesSparseAggregateStats; signature=node_ids:int32, gradients:float, hessians:float, feature_indices:int32, feature_values:int32, feature_shape:int32 -> stats_summary_indices:int32, stats_summary_values:float, stats_summary_shape:int32; attr=max_splits:int,min=1; attr=num_buckets:int,min=1>
2023-01-12 08:11:05.725751: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesSparseCalculateBestFeatureSplit; signature=node_id_range:int32, stats_summary_indices:int32, stats_summary_values:float, stats_summary_shape:int32, l1:float, l2:float, tree_complexity:float, min_node_weight:float -> node_ids:int32, gains:float, feature_dimensions:int32, thresholds:int32, left_node_contribs:float, right_node_contribs:float, split_with_default_directions:string; attr=logits_dimension:int,min=1; attr=split_type:string,default="inequality",allowed=["inequality"]>
2023-01-12 08:11:05.725794: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesTrainingPredict; signature=tree_ensemble_handle:resource, cached_tree_ids:int32, cached_node_ids:int32, bucketized_features:num_bucketized_features*int32 -> partial_logits:float, tree_ids:int32, node_ids:int32; attr=num_bucketized_features:int,min=1; attr=logits_dimension:int; is_stateful=true>
2023-01-12 08:11:05.725820: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesUpdateEnsemble; signature=tree_ensemble_handle:resource, feature_ids:int32, node_ids:num_features*int32, gains:num_features*float, thresholds:num_features*int32, left_node_contribs:num_features*float, right_node_contribs:num_features*float, max_depth:int32, learning_rate:float -> ; attr=pruning_mode:int,min=0; attr=num_features:int,min=0; is_stateful=true>
2023-01-12 08:11:05.725849: I tensorflow/core/framework/op.cc:132] Op<name=BoostedTreesUpdateEnsembleV2; signature=tree_ensemble_handle:resource, feature_ids:num_groups*int32, dimension_ids:num_features*int32, node_ids:num_features*int32, gains:num_features*float, thresholds:num_features*int32, left_node_contribs:num_features*float, right_node_contribs:num_features*float, split_types:num_features*string, max_depth:int32, learning_rate:float, pruning_mode:int32 -> ; attr=num_features:int,min=0; attr=logits_dimension:int,default=1; attr=num_groups:int,default=1,min=1; is_stateful=true>
2023-01-12 08:11:05.730386: I tensorflow/core/framework/op.cc:132] Op<name=BroadcastArgs; signature=s0:T, s1:T -> r0:T; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.730683: I tensorflow/core/framework/op.cc:132] Op<name=BroadcastGradientArgs; signature=s0:T, s1:T -> r0:T, r1:T; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.730874: I tensorflow/core/framework/op.cc:132] Op<name=BroadcastTo; signature=input:T, shape:Tidx -> output:T; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.731289: I tensorflow/core/framework/op.cc:132] Op<name=Bucketize; signature=input:T -> output:int32; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]; attr=boundaries:list(float)>
2023-01-12 08:11:05.731507: I tensorflow/core/framework/op.cc:132] Op<name=BytesProducedStatsDataset; signature=input_dataset:variant, tag:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.731611: I tensorflow/core/framework/op.cc:132] Op<name=CSRSparseMatrixComponents; signature=csr_sparse_matrix:variant, index:int32 -> row_ptrs:int32, col_inds:int32, values:type; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.731679: I tensorflow/core/framework/op.cc:132] Op<name=CSRSparseMatrixToDense; signature=sparse_input:variant -> dense_output:type; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.731716: I tensorflow/core/framework/op.cc:132] Op<name=CSRSparseMatrixToSparseTensor; signature=sparse_matrix:variant -> indices:int64, values:type, dense_shape:int64; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.731741: I tensorflow/core/framework/op.cc:132] Op<name=CSVDataset; signature=filenames:string, compression_type:string, buffer_size:int64, header:bool, field_delim:string, use_quote_delim:bool, na_value:string, select_cols:int64, record_defaults: -> handle:variant; attr=output_types:list(type),min=1,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_STRING]; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.732341: I tensorflow/core/framework/op.cc:132] Op<name=CSVDatasetV2; signature=filenames:string, compression_type:string, buffer_size:int64, header:bool, field_delim:string, use_quote_delim:bool, na_value:string, select_cols:int64, record_defaults:, exclude_cols:int64 -> handle:variant; attr=output_types:list(type),min=1,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_STRING]; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.732536: I tensorflow/core/framework/op.cc:132] Op<name=CTCBeamSearchDecoder; signature=inputs:T, sequence_length:int32 -> decoded_indices:top_paths*int64, decoded_values:top_paths*int64, decoded_shape:top_paths*int64, log_probability:T; attr=beam_width:int,min=1; attr=top_paths:int,min=1; attr=merge_repeated:bool,default=true; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.739651: I tensorflow/core/framework/op.cc:132] Op<name=CTCGreedyDecoder; signature=inputs:T, sequence_length:int32 -> decoded_indices:int64, decoded_values:int64, decoded_shape:int64, log_probability:T; attr=merge_repeated:bool,default=false; attr=blank_index:int,default=-1; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.739904: I tensorflow/core/framework/op.cc:132] Op<name=CTCLoss; signature=inputs:T, labels_indices:int64, labels_values:int32, sequence_length:int32 -> loss:T, gradient:T; attr=preprocess_collapse_repeated:bool,default=false; attr=ctc_merge_repeated:bool,default=true; attr=ignore_longer_outputs_than_inputs:bool,default=false; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.740042: I tensorflow/core/framework/op.cc:132] Op<name=CTCLossV2; signature=inputs:float, labels_indices:int64, labels_values:int32, sequence_length:int32 -> loss:float, gradient:float; attr=preprocess_collapse_repeated:bool,default=false; attr=ctc_merge_repeated:bool,default=true; attr=ignore_longer_outputs_than_inputs:bool,default=false>
2023-01-12 08:11:05.740098: I tensorflow/core/framework/op.cc:132] Op<name=CacheDataset; signature=input_dataset:variant, filename:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.740242: I tensorflow/core/framework/op.cc:132] Op<name=CacheDatasetV2; signature=input_dataset:variant, filename:string, cache:resource -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:05.740379: I tensorflow/core/framework/op.cc:132] Op<name=Case; signature=branch_index:int32, input: -> output:; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=branches:list(func),min=1; attr=output_shapes:list(shape),default=[]; is_stateful=true>
2023-01-12 08:11:05.741027: I tensorflow/core/framework/op.cc:132] Op<name=Cast; signature=x:SrcT -> y:DstT; attr=SrcT:type; attr=DstT:type; attr=Truncate:bool,default=false>
2023-01-12 08:11:05.741110: I tensorflow/core/framework/op.cc:132] Op<name=Ceil; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.741175: I tensorflow/core/framework/op.cc:132] Op<name=CheckNumerics; signature=tensor:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=message:string; is_stateful=true>
2023-01-12 08:11:05.741221: I tensorflow/core/framework/op.cc:132] Op<name=CheckNumericsV2; signature=tensor:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=message:string; is_stateful=true>
2023-01-12 08:11:05.741371: I tensorflow/core/framework/op.cc:132] Op<name=Cholesky; signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.741431: I tensorflow/core/framework/op.cc:132] Op<name=CholeskyGrad; signature=l:T, grad:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.741476: I tensorflow/core/framework/op.cc:132] Op<name=ChooseFastestBranchDataset; signature=input_dataset:variant, ratio_numerator:int64, ratio_denominator:int64, other_arguments: -> handle:variant; attr=Targuments:list(type),min=0; attr=num_elements_per_branch:int,min=1; attr=branches:list(func),min=1; attr=other_arguments_lengths:list(int),min=1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.741519: I tensorflow/core/framework/op.cc:132] Op<name=ChooseFastestDataset; signature=input_datasets:N*variant -> handle:variant; attr=N:int,min=2; attr=num_experiments:int; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.741574: I tensorflow/core/framework/op.cc:132] Op<name=ClipByValue; signature=t:T, clip_value_min:T, clip_value_max:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.741591: I tensorflow/core/framework/op.cc:132] Op<name=CloseSummaryWriter; signature=writer:resource -> ; is_stateful=true>
2023-01-12 08:11:05.741604: I tensorflow/core/framework/op.cc:132] Op<name=CollateTPUEmbeddingMemory; signature=memory_configs:N*string -> merged_memory_config:string; attr=N:int,min=1; is_stateful=true>
2023-01-12 08:11:05.741656: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveAllToAllV3; signature=input:T, communicator:resource, group_assignment:int32 -> data:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.741677: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveAssignGroupV2; signature=group_assignment:int32, device_index:int32, base_key:int32 -> group_size:int32, group_key:int32; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.741707: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveBcastRecv; signature= -> data:T; attr=T:type,allowed=[DT_BOOL, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=group_size:int; attr=group_key:int; attr=instance_key:int; attr=shape:shape; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.741750: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveBcastRecvV2; signature=group_size:int32, group_key:int32, instance_key:int32, shape:Tshape -> data:T; attr=T:type,allowed=[DT_BOOL, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.741828: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveBcastSend; signature=input:T -> data:T; attr=T:type,allowed=[DT_BOOL, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=group_size:int; attr=group_key:int; attr=instance_key:int; attr=shape:shape; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.741990: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveBcastSendV2; signature=input:T, group_size:int32, group_key:int32, instance_key:int32 -> data:T; attr=T:type,allowed=[DT_BOOL, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.742095: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveGather; signature=input:T -> data:T; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=group_size:int; attr=group_key:int; attr=instance_key:int; attr=shape:shape; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.742214: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveGatherV2; signature=input:T, group_size:int32, group_key:int32, instance_key:int32, ordering_token:Nordering_token*resource -> data:T; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; attr=Nordering_token:int,default=0,min=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.742480: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveInitializeCommunicator; signature=group_key:int32, rank:int32, group_size:int32 -> communicator:resource; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.742587: I tensorflow/core/framework/op.cc:132] Op<name=CollectivePermute; signature=input:T, source_target_pairs:int32 -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; is_stateful=true>
2023-01-12 08:11:05.742751: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveReduce; signature=input:T -> data:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=group_size:int; attr=group_key:int; attr=instance_key:int; attr=merge_op:string,allowed=["Min", "Max", "Mul", "Add"]; attr=final_op:string,allowed=["Id", "Div"]; attr=subdiv_offsets:list(int); attr=wait_for:list(int),default=[]; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.742910: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveReduceV2; signature=input:T, group_size:int32, group_key:int32, instance_key:int32, ordering_token:Nordering_token*resource -> data:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=merge_op:string,allowed=["Min", "Max", "Mul", "Add"]; attr=final_op:string,allowed=["Id", "Div"]; attr=communication_hint:string,default="auto"; attr=timeout_seconds:float,default=0; attr=Nordering_token:int,default=0,min=0; attr=max_subdivs_per_device:int,default=-1; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.743041: I tensorflow/core/framework/op.cc:132] Op<name=CollectiveReduceV3; signature=input:T, communicator:resource, group_assignment:int32 -> data:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT32, DT_INT64]; attr=reduction:string,allowed=["Min", "Max", "Mul", "Add"]; attr=timeout_seconds:float,default=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:05.743102: I tensorflow/core/framework/op.cc:132] Op<name=CombinedNonMaxSuppression; signature=boxes:float, scores:float, max_output_size_per_class:int32, max_total_size:int32, iou_threshold:float, score_threshold:float -> nmsed_boxes:float, nmsed_scores:float, nmsed_classes:float, valid_detections:int32; attr=pad_per_class:bool,default=false; attr=clip_boxes:bool,default=true>
2023-01-12 08:11:05.743216: I tensorflow/core/framework/op.cc:132] Op<name=Complex; signature=real:T, imag:T -> out:Tout; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tout:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.743355: I tensorflow/core/framework/op.cc:132] Op<name=ComplexAbs; signature=x:T -> y:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.743430: I tensorflow/core/framework/op.cc:132] Op<name=ComplexStruct; signature= -> a:n_a*int32, b:n_b*int64, c:; attr=n_a:int,min=0; attr=n_b:int,min=0; attr=t_c:list(type),min=0>
2023-01-12 08:11:05.743461: I tensorflow/core/framework/op.cc:132] Op<name=CompositeTensorVariantFromComponents; signature=components: -> encoded:variant; attr=metadata:string; attr=Tcomponents:list(type),min=0>
2023-01-12 08:11:05.743532: I tensorflow/core/framework/op.cc:132] Op<name=CompositeTensorVariantToComponents; signature=encoded:variant -> components:; attr=metadata:string; attr=Tcomponents:list(type),min=0>
2023-01-12 08:11:05.743674: I tensorflow/core/framework/op.cc:132] Op<name=CompressElement; signature=components: -> compressed:variant; attr=input_types:list(type),min=1>
2023-01-12 08:11:05.743712: I tensorflow/core/framework/op.cc:132] Op<name=ComputeAccidentalHits; signature=true_classes:int64, sampled_candidates:int64 -> indices:int32, ids:int64, weights:float; attr=num_true:int; attr=seed:int,default=0; attr=seed2:int,default=0>
2023-01-12 08:11:05.743744: I tensorflow/core/framework/op.cc:132] Op<name=ComputeBatchSize; signature=input_dataset:variant -> batch_size:int64>
2023-01-12 08:11:05.743784: I tensorflow/core/framework/op.cc:132] Op<name=Concat; signature=concat_dim:int32, values:N*T -> output:T; attr=N:int,min=2; attr=T:type>
2023-01-12 08:11:05.743812: I tensorflow/core/framework/op.cc:132] Op<name=ConcatOffset; signature=concat_dim:int32, shape:N*int32 -> offset:N*int32; attr=N:int,min=2>
2023-01-12 08:11:05.743837: I tensorflow/core/framework/op.cc:132] Op<name=ConcatV2; signature=values:N*T, axis:Tidx -> output:T; attr=N:int,min=2; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.743980: I tensorflow/core/framework/op.cc:132] Op<name=ConcatenateDataset; signature=input_dataset:variant, another_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.744109: I tensorflow/core/framework/op.cc:132] Op<name=ConditionalAccumulator; signature= -> handle:Ref(string); attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=shape:shape; attr=container:string,default=""; attr=shared_name:string,default=""; attr=reduction_type:string,default="MEAN",allowed=["MEAN", "SUM"]; is_stateful=true>
2023-01-12 08:11:05.744320: I tensorflow/core/framework/op.cc:132] Op<name=ConfigureAndInitializeGlobalTPU; signature= -> output:int32; attr=use_tfrt_host_runtime:bool,default=true; is_stateful=true>
2023-01-12 08:11:05.744366: I tensorflow/core/framework/op.cc:132] Op<name=ConfigureDistributedTPU; signature= -> topology:string; attr=embedding_config:string,default=""; attr=tpu_embedding_config:string,default=""; attr=is_global_init:bool,default=false; attr=enable_whole_mesh_compilations:bool,default=false; attr=compilation_failure_closes_chips:bool,default=true; attr=tpu_cancellation_closes_chips:int,default=0; is_stateful=true>
2023-01-12 08:11:05.744500: I tensorflow/core/framework/op.cc:132] Op<name=ConfigureTPUEmbedding; signature= -> ; attr=config:string; is_stateful=true>
2023-01-12 08:11:05.744540: I tensorflow/core/framework/op.cc:132] Op<name=ConfigureTPUEmbeddingHost; signature=common_config:string, memory_config:string -> network_config:string; attr=config:string; is_stateful=true>
2023-01-12 08:11:05.744565: I tensorflow/core/framework/op.cc:132] Op<name=ConfigureTPUEmbeddingMemory; signature=common_config:string -> memory_config:string; is_stateful=true>
2023-01-12 08:11:05.744607: I tensorflow/core/framework/op.cc:132] Op<name=Conj; signature=input:T -> output:T; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128, DT_VARIANT]>
2023-01-12 08:11:05.744660: I tensorflow/core/framework/op.cc:132] Op<name=ConjugateTranspose; signature=x:T, perm:Tperm -> y:T; attr=T:type; attr=Tperm:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.744743: I tensorflow/core/framework/op.cc:132] Op<name=ConnectTPUEmbeddingHosts; signature=network_configs:N*string -> ; attr=N:int,min=1; is_stateful=true>
2023-01-12 08:11:05.744772: I tensorflow/core/framework/op.cc:132] Op<name=Const; signature= -> output:dtype; attr=value:tensor; attr=dtype:type>
2023-01-12 08:11:05.744884: I tensorflow/core/framework/op.cc:132] Op<name=ConstructionFails; signature= -> >
2023-01-12 08:11:05.744904: I tensorflow/core/framework/op.cc:132] Op<name=ConsumeMutexLock; signature=mutex_lock:variant -> ; is_stateful=true>
2023-01-12 08:11:05.744917: I tensorflow/core/framework/op.cc:132] Op<name=ControlTrigger; signature= -> >
2023-01-12 08:11:05.744986: I tensorflow/core/framework/op.cc:132] Op<name=Conv2D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:05.745059: I tensorflow/core/framework/op.cc:132] Op<name=Conv2DBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:05.745197: I tensorflow/core/framework/op.cc:132] Op<name=Conv2DBackpropInput; signature=input_sizes:int32, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:05.745305: I tensorflow/core/framework/op.cc:132] Op<name=Conv3D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:05.745364: I tensorflow/core/framework/op.cc:132] Op<name=Conv3DBackpropFilter; signature=input:T, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:05.745473: I tensorflow/core/framework/op.cc:132] Op<name=Conv3DBackpropFilterV2; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:05.745536: I tensorflow/core/framework/op.cc:132] Op<name=Conv3DBackpropInput; signature=input:T, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:05.745702: I tensorflow/core/framework/op.cc:132] Op<name=Conv3DBackpropInputV2; signature=input_sizes:Tshape, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.745742: I tensorflow/core/framework/op.cc:132] Op<name=Copy; signature=input:T -> output:T; attr=T:type; attr=tensor_name:string,default=""; attr=debug_ops_spec:list(string),default=[]; allows_uninitialized_input=true>
2023-01-12 08:11:05.745800: I tensorflow/core/framework/op.cc:132] Op<name=CopyHost; signature=input:T -> output:T; attr=T:type; attr=tensor_name:string,default=""; attr=debug_ops_spec:list(string),default=[]; allows_uninitialized_input=true>
2023-01-12 08:11:05.745850: I tensorflow/core/framework/op.cc:132] Op<name=CopyOp; signature=a:T -> b:T; attr=T:type>
2023-01-12 08:11:05.745886: I tensorflow/core/framework/op.cc:132] Op<name=CopyToMesh; signature=input:T -> output:T; attr=layout:string; attr=source_layout:string,default=""; attr=T:type>
2023-01-12 08:11:05.745956: I tensorflow/core/framework/op.cc:132] Op<name=Cos; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.746007: I tensorflow/core/framework/op.cc:132] Op<name=Cosh; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.746060: I tensorflow/core/framework/op.cc:132] Op<name=CountUpTo; signature=ref:Ref(T) -> output:T; attr=limit:int; attr=T:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.746096: I tensorflow/core/framework/op.cc:132] Op<name=CreateSummaryDbWriter; signature=writer:resource, db_uri:string, experiment_name:string, run_name:string, user_name:string -> ; is_stateful=true>
2023-01-12 08:11:05.746130: I tensorflow/core/framework/op.cc:132] Op<name=CreateSummaryFileWriter; signature=writer:resource, logdir:string, max_queue:int32, flush_millis:int32, filename_suffix:string -> ; is_stateful=true>
2023-01-12 08:11:05.746236: I tensorflow/core/framework/op.cc:132] Op<name=CropAndResize; signature=image:T, boxes:float, box_ind:int32, crop_size:int32 -> crops:float; attr=T:type,allowed=[DT_UINT8, DT_UINT16, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=method:string,default="bilinear",allowed=["bilinear", "nearest"]; attr=extrapolation_value:float,default=0>
2023-01-12 08:11:05.746307: I tensorflow/core/framework/op.cc:132] Op<name=CropAndResizeGradBoxes; signature=grads:float, image:T, boxes:float, box_ind:int32 -> output:float; attr=T:type,allowed=[DT_UINT8, DT_UINT16, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=method:string,default="bilinear",allowed=["bilinear"]>
2023-01-12 08:11:05.746368: I tensorflow/core/framework/op.cc:132] Op<name=CropAndResizeGradImage; signature=grads:float, boxes:float, box_ind:int32, image_size:int32 -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE]; attr=method:string,default="bilinear",allowed=["bilinear", "nearest"]>
2023-01-12 08:11:05.746459: I tensorflow/core/framework/op.cc:132] Op<name=Cross; signature=a:T, b:T -> product:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.746515: I tensorflow/core/framework/op.cc:132] Op<name=CrossReplicaSum; signature=input:T, group_assignment:int32 -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT32]; is_stateful=true>
2023-01-12 08:11:05.746956: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNN; signature=input:T, input_h:T, input_c:T, params:T -> output:T, output_h:T, output_c:T, reserve_space:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=is_training:bool,default=true; is_stateful=true>
2023-01-12 08:11:05.747229: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNBackprop; signature=input:T, input_h:T, input_c:T, params:T, output:T, output_h:T, output_c:T, output_backprop:T, output_h_backprop:T, output_c_backprop:T, reserve_space:T -> input_backprop:T, input_h_backprop:T, input_c_backprop:T, params_backprop:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:05.747354: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNBackpropV2; signature=input:T, input_h:T, input_c:T, params:T, output:T, output_h:T, output_c:T, output_backprop:T, output_h_backprop:T, output_c_backprop:T, reserve_space:T, host_reserved:int8 -> input_backprop:T, input_h_backprop:T, input_c_backprop:T, params_backprop:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:05.747682: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNBackpropV3; signature=input:T, input_h:T, input_c:T, params:T, sequence_lengths:int32, output:T, output_h:T, output_c:T, output_backprop:T, output_h_backprop:T, output_c_backprop:T, reserve_space:T, host_reserved:int8 -> input_backprop:T, input_h_backprop:T, input_c_backprop:T, params_backprop:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=num_proj:int,default=0; attr=time_major:bool,default=true; is_stateful=true>
2023-01-12 08:11:05.747918: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNCanonicalToParams; signature=num_layers:int32, num_units:int32, input_size:int32, weights:num_params*T, biases:num_params*T -> params:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=num_params:int,min=1; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0>
2023-01-12 08:11:05.748002: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNCanonicalToParamsV2; signature=num_layers:int32, num_units:int32, input_size:int32, weights:num_params_weights*T, biases:num_params_biases*T -> params:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=num_params_weights:int,min=1; attr=num_params_biases:int,min=1; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=num_proj:int,default=0>
2023-01-12 08:11:05.748068: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNParamsSize; signature=num_layers:int32, num_units:int32, input_size:int32 -> params_size:S; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=num_proj:int,default=0>
2023-01-12 08:11:05.748137: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNParamsToCanonical; signature=num_layers:int32, num_units:int32, input_size:int32, params:T -> weights:num_params*T, biases:num_params*T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=num_params:int,min=1; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0>
2023-01-12 08:11:05.748371: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNParamsToCanonicalV2; signature=num_layers:int32, num_units:int32, input_size:int32, params:T -> weights:num_params_weights*T, biases:num_params_biases*T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=num_params_weights:int,min=1; attr=num_params_biases:int,min=1; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=num_proj:int,default=0>
2023-01-12 08:11:05.748821: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNV2; signature=input:T, input_h:T, input_c:T, params:T -> output:T, output_h:T, output_c:T, reserve_space:T, host_reserved:int8; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=is_training:bool,default=true; is_stateful=true>
2023-01-12 08:11:05.749033: I tensorflow/core/framework/op.cc:132] Op<name=CudnnRNNV3; signature=input:T, input_h:T, input_c:T, params:T, sequence_lengths:int32 -> output:T, output_h:T, output_c:T, reserve_space:T, host_reserved:int8; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=rnn_mode:string,default="lstm",allowed=["rnn_relu", "rnn_tanh", "lstm", "gru"]; attr=input_mode:string,default="linear_input",allowed=["linear_input", "skip_input", "auto_select"]; attr=direction:string,default="unidirectional",allowed=["unidirectional", "bidirectional"]; attr=dropout:float,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=num_proj:int,default=0; attr=is_training:bool,default=true; attr=time_major:bool,default=true; is_stateful=true>
2023-01-12 08:11:05.749320: I tensorflow/core/framework/op.cc:132] Op<name=Cumprod; signature=x:T, axis:Tidx -> out:T; attr=exclusive:bool,default=false; attr=reverse:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.749525: I tensorflow/core/framework/op.cc:132] Op<name=Cumsum; signature=x:T, axis:Tidx -> out:T; attr=exclusive:bool,default=false; attr=reverse:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.749650: I tensorflow/core/framework/op.cc:132] Op<name=CumulativeLogsumexp; signature=x:T, axis:Tidx -> out:T; attr=exclusive:bool,default=false; attr=reverse:bool,default=false; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.749716: I tensorflow/core/framework/op.cc:132] Op<name=CustomAggregator; signature=input:float -> output:float; attr=id:string; is_stateful=true>
2023-01-12 08:11:05.750226: I tensorflow/core/framework/op.cc:132] Op<name=DTensorAllGather; signature=input:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_INT32, DT_UINT32, DT_INT64, DT_BOOL]; attr=input_layout:string; attr=output_layout:string>
2023-01-12 08:11:05.750443: I tensorflow/core/framework/op.cc:132] Op<name=DTensorAllReduce; signature=input:T, group_assignment:int32 -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_INT32, DT_UINT32, DT_INT64, DT_BOOL]; attr=reduce_op:string,allowed=["Min", "Max", "Mul", "Add", "Mean", "Any", "All"]; attr=device_type:string>
2023-01-12 08:11:05.750662: I tensorflow/core/framework/op.cc:132] Op<name=DTensorAllScatter; signature=input:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_INT32, DT_UINT32, DT_INT64, DT_BOOL]; attr=input_layout:string; attr=output_layout:string>
2023-01-12 08:11:05.750738: I tensorflow/core/framework/op.cc:132] Op<name=DTensorReduceScatter; signature=input:T, group_assignment:int32, scatter_dimension:int32 -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_INT32, DT_UINT32, DT_INT64, DT_BOOL]; attr=reduce_op:string,allowed=["Min", "Max", "Mul", "Add", "Mean", "Any", "All"]; attr=device_type:string>
2023-01-12 08:11:05.750779: I tensorflow/core/framework/op.cc:132] Op<name=DTensorRestoreV2; signature=prefix:string, tensor_names:string, shape_and_slices:string -> tensors:; attr=input_shapes:list(shape); attr=input_layouts:list(string); attr=dtypes:list(type),min=1; is_stateful=true>
2023-01-12 08:11:05.750875: I tensorflow/core/framework/op.cc:132] Op<name=DTensorSetGlobalTPUArray; signature=topology:string -> ; is_stateful=true>
2023-01-12 08:11:05.750981: I tensorflow/core/framework/op.cc:132] Op<name=DataFormatDimMap; signature=x:T -> y:T; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=src_format:string,default="NHWC"; attr=dst_format:string,default="NCHW">
2023-01-12 08:11:05.751035: I tensorflow/core/framework/op.cc:132] Op<name=DataFormatVecPermute; signature=x:T -> y:T; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=src_format:string,default="NHWC"; attr=dst_format:string,default="NCHW">
2023-01-12 08:11:05.751234: I tensorflow/core/framework/op.cc:132] Op<name=DataServiceDataset; signature=dataset_id:int64, processing_mode:string, address:string, protocol:string, job_name:string, max_outstanding_requests:int64, iteration_counter:resource -> handle:variant; attr=task_refresh_interval_hint_ms:int,default=-1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=data_transfer_protocol:string,default=""; attr=target_workers:string,default="AUTO"; attr=cross_trainer_cache_options:string,default=""; is_stateful=true>
2023-01-12 08:11:05.754444: I tensorflow/core/framework/op.cc:132] Op<name=DataServiceDatasetV2; signature=dataset_id:int64, processing_mode:string, address:string, protocol:string, job_name:string, consumer_index:int64, num_consumers:int64, max_outstanding_requests:int64, iteration_counter:resource -> handle:variant; attr=task_refresh_interval_hint_ms:int,default=-1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=data_transfer_protocol:string,default=""; attr=target_workers:string,default="AUTO"; attr=cross_trainer_cache_options:string,default=""; is_stateful=true>
2023-01-12 08:11:05.754680: I tensorflow/core/framework/op.cc:132] Op<name=DataServiceDatasetV3; signature=dataset_id:int64, processing_mode:string, address:string, protocol:string, job_name:string, consumer_index:int64, num_consumers:int64, max_outstanding_requests:int64, iteration_counter:resource -> handle:variant; attr=task_refresh_interval_hint_ms:int,default=-1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=data_transfer_protocol:string,default=""; attr=target_workers:string,default="AUTO"; attr=uncompress:bool,default=false; attr=uncompress_fn:func; attr=cross_trainer_cache_options:string,default=""; is_stateful=true>
2023-01-12 08:11:05.754945: I tensorflow/core/framework/op.cc:132] Op<name=DataServiceDatasetV4; signature=dataset_id:string, processing_mode:string, address:string, protocol:string, job_name:string, consumer_index:int64, num_consumers:int64, max_outstanding_requests:int64, iteration_counter:resource -> handle:variant; attr=task_refresh_interval_hint_ms:int,default=-1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=data_transfer_protocol:string,default=""; attr=target_workers:string,default="AUTO"; attr=uncompress:bool,default=false; attr=uncompress_fn:func; attr=cross_trainer_cache_options:string,default=""; is_stateful=true>
2023-01-12 08:11:05.755282: I tensorflow/core/framework/op.cc:132] Op<name=DatasetCardinality; signature=input_dataset:variant -> cardinality:int64>
2023-01-12 08:11:05.755574: I tensorflow/core/framework/op.cc:132] Op<name=DatasetFromGraph; signature=graph_def:string -> handle:variant>
2023-01-12 08:11:05.755796: I tensorflow/core/framework/op.cc:132] Op<name=DatasetToGraph; signature=input_dataset:variant -> graph:string; attr=stateful_whitelist:list(string),default=[],min=0; attr=allow_stateful:bool,default=false; attr=strip_device_assignment:bool,default=false>
2023-01-12 08:11:05.755849: I tensorflow/core/framework/op.cc:132] Op<name=DatasetToGraphV2; signature=input_dataset:variant -> graph:string; attr=external_state_policy:int,default=0; attr=strip_device_assignment:bool,default=false>
2023-01-12 08:11:05.755927: I tensorflow/core/framework/op.cc:132] Op<name=DatasetToSingleElement; signature=dataset:variant -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:05.755963: I tensorflow/core/framework/op.cc:132] Op<name=DatasetToTFRecord; signature=input_dataset:variant, filename:string, compression_type:string -> ; is_stateful=true>
2023-01-12 08:11:05.759330: I tensorflow/core/framework/op.cc:132] Op<name=Dawsn; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.759463: I tensorflow/core/framework/op.cc:132] Op<name=DebugGradientIdentity; signature=input:T -> output:T; attr=T:type; allows_uninitialized_input=true>
2023-01-12 08:11:05.759567: I tensorflow/core/framework/op.cc:132] Op<name=DebugGradientRefIdentity; signature=input:Ref(T) -> output:Ref(T); attr=T:type; allows_uninitialized_input=true>
2023-01-12 08:11:05.759613: I tensorflow/core/framework/op.cc:132] Op<name=DebugIdentity; signature=input:T -> output:T; attr=T:type; attr=device_name:string,default=""; attr=tensor_name:string,default=""; attr=debug_urls:list(string),default=[]; attr=gated_grpc:bool,default=false; allows_uninitialized_input=true>
2023-01-12 08:11:05.759682: I tensorflow/core/framework/op.cc:132] Op<name=DebugIdentityV2; signature=input:T -> output:T; attr=T:type; attr=tfdbg_context_id:string,default=""; attr=op_name:string,default=""; attr=output_slot:int,default=-1; attr=tensor_debug_mode:int,default=-1; attr=debug_urls:list(string),default=[]; attr=circular_buffer_size:int,default=1000; attr=tfdbg_run_id:string,default=""; is_stateful=true>
2023-01-12 08:11:05.759725: I tensorflow/core/framework/op.cc:132] Op<name=DebugNanCount; signature=input:T -> output:int64; attr=T:type; attr=device_name:string,default=""; attr=tensor_name:string,default=""; attr=debug_urls:list(string),default=[]; attr=gated_grpc:bool,default=false; allows_uninitialized_input=true>
2023-01-12 08:11:05.759771: I tensorflow/core/framework/op.cc:132] Op<name=DebugNumericSummary; signature=input:T -> output:double; attr=T:type; attr=device_name:string,default=""; attr=tensor_name:string,default=""; attr=debug_urls:list(string),default=[]; attr=lower_bound:float,default=-inf; attr=upper_bound:float,default=inf; attr=mute_if_healthy:bool,default=false; attr=gated_grpc:bool,default=false; allows_uninitialized_input=true>
2023-01-12 08:11:05.759808: I tensorflow/core/framework/op.cc:132] Op<name=DebugNumericSummaryV2; signature=input:T -> output:output_dtype; attr=output_dtype:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=T:type; attr=tensor_debug_mode:int,default=-1; attr=tensor_id:int,default=-1>
2023-01-12 08:11:05.759848: I tensorflow/core/framework/op.cc:132] Op<name=DecodeAndCropJpeg; signature=contents:string, crop_window:int32 -> image:uint8; attr=channels:int,default=0; attr=ratio:int,default=1; attr=fancy_upscaling:bool,default=true; attr=try_recover_truncated:bool,default=false; attr=acceptable_fraction:float,default=1; attr=dct_method:string,default="">
2023-01-12 08:11:05.759872: I tensorflow/core/framework/op.cc:132] Op<name=DecodeBase64; signature=input:string -> output:string>
2023-01-12 08:11:05.759949: I tensorflow/core/framework/op.cc:132] Op<name=DecodeBmp; signature=contents:string -> image:uint8; attr=channels:int,default=0>
2023-01-12 08:11:05.760067: I tensorflow/core/framework/op.cc:132] Op<name=DecodeCSV; signature=records:string, record_defaults: -> output:; attr=OUT_TYPE:list(type),min=1,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_STRING]; attr=field_delim:string,default=","; attr=use_quote_delim:bool,default=true; attr=na_value:string,default=""; attr=select_cols:list(int),default=[]>
2023-01-12 08:11:05.760105: I tensorflow/core/framework/op.cc:132] Op<name=DecodeCompressed; signature=bytes:string -> output:string; attr=compression_type:string,default="">
2023-01-12 08:11:05.760127: I tensorflow/core/framework/op.cc:132] Op<name=DecodeGif; signature=contents:string -> image:uint8>
2023-01-12 08:11:05.760213: I tensorflow/core/framework/op.cc:132] Op<name=DecodeImage; signature=contents:string -> image:dtype; attr=channels:int,default=0; attr=dtype:type,default=DT_UINT8,allowed=[DT_UINT8, DT_UINT16, DT_FLOAT]; attr=expand_animations:bool,default=true>
2023-01-12 08:11:05.760235: I tensorflow/core/framework/op.cc:132] Op<name=DecodeJSONExample; signature=json_examples:string -> binary_examples:string>
2023-01-12 08:11:05.760393: I tensorflow/core/framework/op.cc:132] Op<name=DecodeJpeg; signature=contents:string -> image:uint8; attr=channels:int,default=0; attr=ratio:int,default=1; attr=fancy_upscaling:bool,default=true; attr=try_recover_truncated:bool,default=false; attr=acceptable_fraction:float,default=1; attr=dct_method:string,default="">
2023-01-12 08:11:05.760494: I tensorflow/core/framework/op.cc:132] Op<name=DecodePaddedRaw; signature=input_bytes:string, fixed_length:int32 -> output:out_type; attr=out_type:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT16, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16]; attr=little_endian:bool,default=true>
2023-01-12 08:11:05.760536: I tensorflow/core/framework/op.cc:132] Op<name=DecodePng; signature=contents:string -> image:dtype; attr=channels:int,default=0; attr=dtype:type,default=DT_UINT8,allowed=[DT_UINT8, DT_UINT16]>
2023-01-12 08:11:05.760788: I tensorflow/core/framework/op.cc:132] Op<name=DecodeProtoV2; signature=bytes:string -> sizes:int32, values:; attr=message_type:string; attr=field_names:list(string); attr=output_types:list(type),min=0; attr=descriptor_source:string,default="local://"; attr=message_format:string,default="binary"; attr=sanitize:bool,default=false>
2023-01-12 08:11:05.760888: I tensorflow/core/framework/op.cc:132] Op<name=DecodeRaw; signature=bytes:string -> output:out_type; attr=out_type:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT16, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_COMPLEX64, DT_COMPLEX128, DT_BOOL, DT_BFLOAT16]; attr=little_endian:bool,default=true>
2023-01-12 08:11:05.760945: I tensorflow/core/framework/op.cc:132] Op<name=DecodeWav; signature=contents:string -> audio:float, sample_rate:int32; attr=desired_channels:int,default=-1; attr=desired_samples:int,default=-1>
2023-01-12 08:11:05.760988: I tensorflow/core/framework/op.cc:132] Op<name=DeepCopy; signature=x:T -> y:T; attr=T:type; is_stateful=true>
2023-01-12 08:11:05.782803: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: -6 kernel_name: "Unknown (from Proto)" tensor { dtype: DT_INT32 shape { } allocation_description { requested_bytes: 4 allocated_bytes: 4 allocator_name: "cpu" allocation_id: 2 has_single_reference: true ptr: 93931476631680 } } }
2023-01-12 08:11:05.783399: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: "cpu" }
2023-01-12 08:11:05.783939: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: -6 kernel_name: "Unknown (from Proto)" tensor { dtype: DT_INT32 shape { } allocation_description { requested_bytes: 4 allocated_bytes: 4 allocator_name: "cpu" allocation_id: 3 has_single_reference: true ptr: 93931476646720 } } }
2023-01-12 08:11:05.784338: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 3 allocator_name: "cpu" }
2023-01-12 08:11:05.785260: I tensorflow/core/framework/op.cc:132] Op<name=DefaultAttrs; signature= -> ; attr=string_val:string,default="abc"; attr=string_list_val:list(string),default=["abc", ""]; attr=int_val:int,default=123; attr=int_list_val:list(int),default=[1, 2, 3]; attr=float_val:float,default=10; attr=float_list_val:list(float),default=[10]; attr=bool_val:bool,default=true; attr=bool_list_val:list(bool),default=[true, false]; attr=type_val:type,default=DT_INT32; attr=type_list_val:list(type),default=[DT_INT32, DT_FLOAT]; attr=shape_val:shape,default=[2,1]; attr=shape_list_val:list(shape),default=[[], [1]]; attr=tensor_val:tensor,default=Tensor<type: int32 shape: [] values: 1>; attr=tensor_list_val:list(tensor),default=[Tensor<type: int32 shape: [] values: 1>]>
2023-01-12 08:11:05.785419: I tensorflow/core/framework/op.cc:132] Op<name=DeleteIterator; signature=handle:resource, deleter:variant -> ; is_stateful=true>
2023-01-12 08:11:05.785474: I tensorflow/core/framework/op.cc:132] Op<name=DeleteMemoryCache; signature=handle:resource, deleter:variant -> ; is_stateful=true>
2023-01-12 08:11:05.785633: I tensorflow/core/framework/op.cc:132] Op<name=DeleteMultiDeviceIterator; signature=multi_device_iterator:resource, iterators:N*resource, deleter:variant -> ; attr=N:int,min=0; is_stateful=true>
2023-01-12 08:11:05.785836: I tensorflow/core/framework/op.cc:132] Op<name=DeleteRandomSeedGenerator; signature=handle:resource, deleter:variant -> ; is_stateful=true>
2023-01-12 08:11:05.785876: I tensorflow/core/framework/op.cc:132] Op<name=DeleteRpcFutureResource; signature=handle:resource, deleter:variant -> ; is_stateful=true>
2023-01-12 08:11:05.785950: I tensorflow/core/framework/op.cc:132] Op<name=DeleteSeedGenerator; signature=handle:resource, deleter:variant -> ; is_stateful=true>
2023-01-12 08:11:05.785991: I tensorflow/core/framework/op.cc:132] Op<name=DeleteSessionTensor; signature=handle:string -> ; is_stateful=true>
2023-01-12 08:11:05.786519: I tensorflow/core/framework/op.cc:132] Op<name=DenseBincount; signature=input:Tidx, size:Tidx, weights:T -> output:T; attr=Tidx:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]; attr=binary_output:bool,default=false>
2023-01-12 08:11:05.786773: I tensorflow/core/framework/op.cc:132] Op<name=DenseCountSparseOutput; signature=values:T, weights:output_type -> output_indices:int64, output_values:output_type, output_dense_shape:int64; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=minlength:int,default=-1,min=-1; attr=maxlength:int,default=-1,min=-1; attr=binary_output:bool; attr=output_type:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.786943: I tensorflow/core/framework/op.cc:132] Op<name=DenseToCSRSparseMatrix; signature=dense_input:T, indices:int64 -> sparse_output:variant; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.787231: I tensorflow/core/framework/op.cc:132] Op<name=DenseToDenseSetOperation; signature=set1:T, set2:T -> result_indices:int64, result_values:T, result_shape:int64; attr=set_operation:string; attr=validate_indices:bool,default=true; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_STRING]>
2023-01-12 08:11:05.787406: I tensorflow/core/framework/op.cc:132] Op<name=DenseToSparseBatchDataset; signature=input_dataset:variant, batch_size:int64, row_shape:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.787842: I tensorflow/core/framework/op.cc:132] Op<name=DenseToSparseSetOperation; signature=set1:T, set2_indices:int64, set2_values:T, set2_shape:int64 -> result_indices:int64, result_values:T, result_shape:int64; attr=set_operation:string; attr=validate_indices:bool,default=true; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_STRING]>
2023-01-12 08:11:05.788022: I tensorflow/core/framework/op.cc:132] Op<name=DepthToSpace; signature=input:T -> output:T; attr=T:type; attr=block_size:int,min=2; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NCHW_VECT_C"]>
2023-01-12 08:11:05.788266: I tensorflow/core/framework/op.cc:132] Op<name=DepthwiseConv2dNative; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:05.788389: I tensorflow/core/framework/op.cc:132] Op<name=DepthwiseConv2dNativeBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:05.788509: I tensorflow/core/framework/op.cc:132] Op<name=DepthwiseConv2dNativeBackpropInput; signature=input_sizes:int32, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:05.788770: I tensorflow/core/framework/op.cc:132] Op<name=Dequantize; signature=input:T, min_range:float, max_range:float -> output:dtype; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=mode:string,default="MIN_COMBINED",allowed=["MIN_COMBINED", "MIN_FIRST", "SCALED"]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1; attr=dtype:type,default=DT_FLOAT,allowed=[DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:05.788843: I tensorflow/core/framework/op.cc:132] Op<name=DeserializeIterator; signature=resource_handle:resource, serialized:variant -> ; is_stateful=true>
2023-01-12 08:11:05.788887: I tensorflow/core/framework/op.cc:132] Op<name=DeserializeManySparse; signature=serialized_sparse:string -> sparse_indices:int64, sparse_values:dtype, sparse_shape:int64; attr=dtype:type>
2023-01-12 08:11:05.788946: I tensorflow/core/framework/op.cc:132] Op<name=DeserializeSparse; signature=serialized_sparse:Tserialized -> sparse_indices:int64, sparse_values:dtype, sparse_shape:int64; attr=dtype:type; attr=Tserialized:type,default=DT_STRING,allowed=[DT_STRING, DT_VARIANT]>
2023-01-12 08:11:05.788996: I tensorflow/core/framework/op.cc:132] Op<name=DestroyResourceOp; signature=resource:resource -> ; attr=ignore_lookup_error:bool,default=true; is_stateful=true>
2023-01-12 08:11:05.789108: I tensorflow/core/framework/op.cc:132] Op<name=DestroyTemporaryVariable; signature=ref:Ref(T) -> value:T; attr=T:type; attr=var_name:string>
2023-01-12 08:11:05.789153: I tensorflow/core/framework/op.cc:132] Op<name=DeviceIndex; signature= -> index:int32; attr=device_names:list(string); is_stateful=true>
2023-01-12 08:11:05.789194: I tensorflow/core/framework/op.cc:132] Op<name=DevicePlacementOp; signature= -> device:string; is_stateful=true>
2023-01-12 08:11:05.789252: I tensorflow/core/framework/op.cc:132] Op<name=Diag; signature=diagonal:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.789284: I tensorflow/core/framework/op.cc:132] Op<name=DiagPart; signature=input:T -> diagonal:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.789306: I tensorflow/core/framework/op.cc:132] Op<name=Digamma; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.789386: I tensorflow/core/framework/op.cc:132] Op<name=Dilation2D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=strides:list(int),min=4; attr=rates:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.789493: I tensorflow/core/framework/op.cc:132] Op<name=Dilation2DBackpropFilter; signature=input:T, filter:T, out_backprop:T -> filter_backprop:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=strides:list(int),min=4; attr=rates:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.789558: I tensorflow/core/framework/op.cc:132] Op<name=Dilation2DBackpropInput; signature=input:T, filter:T, out_backprop:T -> in_backprop:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=strides:list(int),min=4; attr=rates:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.789591: I tensorflow/core/framework/op.cc:132] Op<name=DirectedInterleaveDataset; signature=selector_input_dataset:variant, data_input_datasets:N*variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1; attr=stop_on_empty_dataset:bool,default=false>
2023-01-12 08:11:05.789608: I tensorflow/core/framework/op.cc:132] Op<name=DisableCopyOnRead; signature=resource:resource -> ; is_stateful=true>
2023-01-12 08:11:05.789793: I tensorflow/core/framework/op.cc:132] Op<name=Div; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_UINT32, DT_UINT64, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.789837: I tensorflow/core/framework/op.cc:132] Op<name=DivNoNan; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_BFLOAT16, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.789861: I tensorflow/core/framework/op.cc:132] Op<name=DrawBoundingBoxes; signature=images:T, boxes:float -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF]>
2023-01-12 08:11:05.789880: I tensorflow/core/framework/op.cc:132] Op<name=DrawBoundingBoxesV2; signature=images:T, boxes:float, colors:float -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF]>
2023-01-12 08:11:05.789897: I tensorflow/core/framework/op.cc:132] Op<name=DtypeWithDefaultOp; signature=in:T -> dtype:string; attr=T:type,default=DT_UINT8; is_stateful=true>
2023-01-12 08:11:05.789909: I tensorflow/core/framework/op.cc:132] Op<name=DummyIterationCounter; signature= -> handle:resource; is_stateful=true>
2023-01-12 08:11:05.789965: I tensorflow/core/framework/op.cc:132] Op<name=DummyMemoryCache; signature= -> handle:resource; is_stateful=true>
2023-01-12 08:11:05.790126: I tensorflow/core/framework/op.cc:132] Op<name=DummySeedGenerator; signature= -> handle:resource; is_stateful=true>
2023-01-12 08:11:05.790192: I tensorflow/core/framework/op.cc:132] Op<name=DynamicEnqueueTPUEmbeddingArbitraryTensorBatch; signature=sample_indices_or_row_splits:N*T1, embedding_indices:N*T2, aggregation_weights:N*T3, mode_override:string, device_ordinal:int32 -> ; attr=T1:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T2:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T3:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=N:int,min=1; attr=combiners:list(string),default=[]; is_stateful=true>
2023-01-12 08:11:05.790214: I tensorflow/core/framework/op.cc:132] Op<name=DynamicPartition; signature=data:T, partitions:int32 -> outputs:num_partitions*T; attr=num_partitions:int,min=1; attr=T:type>
2023-01-12 08:11:05.790227: I tensorflow/core/framework/op.cc:132] Op<name=DynamicStitch; signature=indices:N*int32, data:N*T -> merged:T; attr=N:int,min=1; attr=T:type>
2023-01-12 08:11:05.790241: I tensorflow/core/framework/op.cc:132] Op<name=EagerPyFunc; signature=input: -> output:; attr=token:string; attr=is_async:bool,default=false; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; is_stateful=true>
2023-01-12 08:11:05.790255: I tensorflow/core/framework/op.cc:132] Op<name=EditDistance; signature=hypothesis_indices:int64, hypothesis_values:T, hypothesis_shape:int64, truth_indices:int64, truth_values:T, truth_shape:int64 -> output:float; attr=normalize:bool,default=true; attr=T:type>
2023-01-12 08:11:05.790274: I tensorflow/core/framework/op.cc:132] Op<name=Eig; signature=input:T -> e:Tout, v:Tout; attr=compute_v:bool,default=true; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.790286: I tensorflow/core/framework/op.cc:132] Op<name=Einsum; signature=inputs:N*T -> output:T; attr=equation:string; attr=N:int,min=1; attr=T:type>
2023-01-12 08:11:05.790303: I tensorflow/core/framework/op.cc:132] Op<name=Elu; signature=features:T -> activations:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.790320: I tensorflow/core/framework/op.cc:132] Op<name=EluGrad; signature=gradients:T, outputs:T -> backprops:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.790333: I tensorflow/core/framework/op.cc:132] Op<name=Empty; signature=shape:int32 -> output:dtype; attr=dtype:type; attr=init:bool,default=false; is_stateful=true>
2023-01-12 08:11:05.790348: I tensorflow/core/framework/op.cc:132] Op<name=EmptyTensorList; signature=element_shape:shape_type, max_num_elements:int32 -> handle:variant; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.791949: I tensorflow/core/framework/op.cc:132] Op<name=EmptyTensorMap; signature= -> handle:variant>
2023-01-12 08:11:05.792022: I tensorflow/core/framework/op.cc:132] Op<name=EncodeBase64; signature=input:string -> output:string; attr=pad:bool,default=false>
2023-01-12 08:11:05.792106: I tensorflow/core/framework/op.cc:132] Op<name=EncodeJpeg; signature=image:uint8 -> contents:string; attr=format:string,default="",allowed=["", "grayscale", "rgb"]; attr=quality:int,default=95; attr=progressive:bool,default=false; attr=optimize_size:bool,default=false; attr=chroma_downsampling:bool,default=true; attr=density_unit:string,default="in",allowed=["in", "cm"]; attr=x_density:int,default=300; attr=y_density:int,default=300; attr=xmp_metadata:string,default="">
2023-01-12 08:11:05.792233: I tensorflow/core/framework/op.cc:132] Op<name=EncodeJpegVariableQuality; signature=images:uint8, quality:int32 -> contents:string>
2023-01-12 08:11:05.792327: I tensorflow/core/framework/op.cc:132] Op<name=EncodePng; signature=image:T -> contents:string; attr=compression:int,default=-1; attr=T:type,default=DT_UINT8,allowed=[DT_UINT8, DT_UINT16]>
2023-01-12 08:11:05.792437: I tensorflow/core/framework/op.cc:132] Op<name=EncodeProto; signature=sizes:int32, values: -> bytes:string; attr=field_names:list(string); attr=message_type:string; attr=descriptor_source:string,default="local://"; attr=Tinput_types:list(type),min=1>
2023-01-12 08:11:05.792537: I tensorflow/core/framework/op.cc:132] Op<name=EncodeWav; signature=audio:float, sample_rate:int32 -> contents:string>
2023-01-12 08:11:05.792642: I tensorflow/core/framework/op.cc:132] Op<name=EnqueueTPUEmbeddingArbitraryTensorBatch; signature=sample_indices_or_row_splits:N*T1, embedding_indices:N*T2, aggregation_weights:N*T3, mode_override:string -> ; attr=T1:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T2:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T3:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=N:int,min=1; attr=device_ordinal:int,default=-1; attr=combiners:list(string),default=[]; is_stateful=true>
2023-01-12 08:11:05.792673: I tensorflow/core/framework/op.cc:132] Op<name=EnqueueTPUEmbeddingBatch; signature=batch:N*string, mode_override:string -> ; attr=N:int,min=1; attr=device_ordinal:int,default=-1; attr=combiners:list(string),default=[]; is_stateful=true>
2023-01-12 08:11:05.792688: I tensorflow/core/framework/op.cc:132] Op<name=EnqueueTPUEmbeddingIntegerBatch; signature=batch:N*int32, mode_override:string -> ; attr=N:int,min=1; attr=device_ordinal:int,default=-1; is_stateful=true>
2023-01-12 08:11:05.792715: I tensorflow/core/framework/op.cc:132] Op<name=EnqueueTPUEmbeddingRaggedTensorBatch; signature=sample_splits:N*T1, embedding_indices:N*T2, aggregation_weights:N*T3, mode_override:string -> ; attr=T1:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T2:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T3:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=N:int,min=1; attr=device_ordinal:int,default=-1; attr=combiners:list(string),default=[]; attr=table_ids:list(int); attr=max_sequence_lengths:list(int),default=[]; attr=num_features:list(int),default=[]; is_stateful=true>
2023-01-12 08:11:05.792872: I tensorflow/core/framework/op.cc:132] Op<name=EnqueueTPUEmbeddingSparseBatch; signature=sample_indices:N*T1, embedding_indices:N*T2, aggregation_weights:N*T3, mode_override:string -> ; attr=T1:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T2:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T3:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=N:int,min=1; attr=device_ordinal:int,default=-1; attr=combiners:list(string),default=[]; is_stateful=true>
2023-01-12 08:11:05.793035: I tensorflow/core/framework/op.cc:132] Op<name=EnqueueTPUEmbeddingSparseTensorBatch; signature=sample_indices:N*T1, embedding_indices:N*T2, aggregation_weights:N*T3, mode_override:string -> ; attr=T1:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T2:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T3:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=N:int,min=1; attr=device_ordinal:int,default=-1; attr=combiners:list(string),default=[]; attr=table_ids:list(int); attr=max_sequence_lengths:list(int),default=[]; attr=num_features:list(int),default=[]; is_stateful=true>
2023-01-12 08:11:05.793115: I tensorflow/core/framework/op.cc:132] Op<name=EnsureShape; signature=input:T -> output:T; attr=shape:shape; attr=T:type>
2023-01-12 08:11:05.793303: I tensorflow/core/framework/op.cc:132] Op<name=Enter; signature=data:T -> output:T; attr=T:type; attr=frame_name:string; attr=is_constant:bool,default=false; attr=parallel_iterations:int,default=10>
2023-01-12 08:11:05.793398: I tensorflow/core/framework/op.cc:132] Op<name=Equal; signature=x:T, y:T -> z:bool; attr=T:type; attr=incompatible_shape_error:bool,default=true; is_commutative=true>
2023-01-12 08:11:05.793448: I tensorflow/core/framework/op.cc:132] Op<name=Erf; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.793479: I tensorflow/core/framework/op.cc:132] Op<name=Erfc; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.793511: I tensorflow/core/framework/op.cc:132] Op<name=Erfinv; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.793639: I tensorflow/core/framework/op.cc:132] Op<name=EuclideanNorm; signature=input:T, reduction_indices:Tidx -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.793745: I tensorflow/core/framework/op.cc:132] Op<name=ExecuteTPUEmbeddingPartitioner; signature= -> common_config:string; attr=config:string; is_stateful=true>
2023-01-12 08:11:05.793780: I tensorflow/core/framework/op.cc:132] Op<name=Exit; signature=data:T -> output:T; attr=T:type>
2023-01-12 08:11:05.793821: I tensorflow/core/framework/op.cc:132] Op<name=Exp; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.793917: I tensorflow/core/framework/op.cc:132] Op<name=ExpandDims; signature=input:T, dim:Tdim -> output:T; attr=T:type; attr=Tdim:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.793963: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalAssertNextDataset; signature=input_dataset:variant, transformations:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.794056: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalAutoShardDataset; signature=input_dataset:variant, num_workers:int64, index:int64 -> handle:variant; attr=auto_shard_policy:int,default=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.794244: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalBytesProducedStatsDataset; signature=input_dataset:variant, tag:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.794393: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalCSVDataset; signature=filenames:string, compression_type:string, buffer_size:int64, header:bool, field_delim:string, use_quote_delim:bool, na_value:string, select_cols:int64, record_defaults: -> handle:variant; attr=output_types:list(type),min=1,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_STRING]; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.794458: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalChooseFastestDataset; signature=input_datasets:N*variant -> handle:variant; attr=N:int,min=2; attr=num_experiments:int; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.794490: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalDatasetCardinality; signature=input_dataset:variant -> cardinality:int64>
2023-01-12 08:11:05.794522: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalDatasetToTFRecord; signature=input_dataset:variant, filename:string, compression_type:string -> ; is_stateful=true>
2023-01-12 08:11:05.794586: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalDenseToSparseBatchDataset; signature=input_dataset:variant, batch_size:int64, row_shape:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.794672: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalDirectedInterleaveDataset; signature=selector_input_dataset:variant, data_input_datasets:N*variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1>
2023-01-12 08:11:05.794839: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalGroupByReducerDataset; signature=input_dataset:variant, key_func_other_arguments:, init_func_other_arguments:, reduce_func_other_arguments:, finalize_func_other_arguments: -> handle:variant; attr=key_func:func; attr=init_func:func; attr=reduce_func:func; attr=finalize_func:func; attr=Tkey_func_other_arguments:list(type),min=0; attr=Tinit_func_other_arguments:list(type),min=0; attr=Treduce_func_other_arguments:list(type),min=0; attr=Tfinalize_func_other_arguments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.795011: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalGroupByWindowDataset; signature=input_dataset:variant, key_func_other_arguments:, reduce_func_other_arguments:, window_size_func_other_arguments: -> handle:variant; attr=key_func:func; attr=reduce_func:func; attr=window_size_func:func; attr=Tkey_func_other_arguments:list(type),min=0; attr=Treduce_func_other_arguments:list(type),min=0; attr=Twindow_size_func_other_arguments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.795141: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalIgnoreErrorsDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=log_warning:bool,default=false>
2023-01-12 08:11:05.795311: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalIteratorGetDevice; signature=resource:resource -> device:string; is_stateful=true>
2023-01-12 08:11:05.795411: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalLMDBDataset; signature=filenames:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.795442: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalLatencyStatsDataset; signature=input_dataset:variant, tag:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.795474: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalMapAndBatchDataset; signature=input_dataset:variant, other_arguments:, batch_size:int64, num_parallel_calls:int64, drop_remainder:bool -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=preserve_cardinality:bool,default=false>
2023-01-12 08:11:05.795790: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalMapDataset; signature=input_dataset:variant, other_arguments: -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_inter_op_parallelism:bool,default=true; attr=preserve_cardinality:bool,default=false>
2023-01-12 08:11:05.795864: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalMatchingFilesDataset; signature=patterns:string -> handle:variant; is_stateful=true>
2023-01-12 08:11:05.795907: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalMaxIntraOpParallelismDataset; signature=input_dataset:variant, max_intra_op_parallelism:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.795967: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalNonSerializableDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.796042: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalParallelInterleaveDataset; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64, sloppy:bool, buffer_output_elements:int64, prefetch_input_elements:int64 -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.796161: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalParseExampleDataset; signature=input_dataset:variant, num_parallel_calls:int64, dense_defaults: -> handle:variant; attr=sparse_keys:list(string),min=0; attr=dense_keys:list(string),min=0; attr=sparse_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tdense:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=dense_shapes:list(shape),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=sloppy:bool,default=false>
2023-01-12 08:11:05.797159: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalPrivateThreadPoolDataset; signature=input_dataset:variant, num_threads:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.797312: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalRandomDataset; signature=seed:int64, seed2:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.797554: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalRebatchDataset; signature=input_dataset:variant, num_replicas:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_fallback:bool,default=true>
2023-01-12 08:11:05.797634: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalScanDataset; signature=input_dataset:variant, initial_state:, other_arguments: -> handle:variant; attr=f:func; attr=Tstate:list(type),min=1; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=preserve_cardinality:bool,default=false>
2023-01-12 08:11:05.797919: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalSetStatsAggregatorDataset; signature=input_dataset:variant, stats_aggregator:resource, tag:string, counter_prefix:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.798263: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalSleepDataset; signature=input_dataset:variant, sleep_microseconds:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.798485: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalSlidingWindowDataset; signature=input_dataset:variant, window_size:int64, window_shift:int64, window_stride:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.798870: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalSqlDataset; signature=driver_name:string, data_source_name:string, query:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.798989: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalStatsAggregatorHandle; signature= -> handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.799070: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalStatsAggregatorSummary; signature=iterator:resource -> summary:string; is_stateful=true>
2023-01-12 08:11:05.799632: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalTakeWhileDataset; signature=input_dataset:variant, other_arguments: -> handle:variant; attr=predicate:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.799906: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalThreadPoolDataset; signature=input_dataset:variant, thread_pool:resource -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.800284: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalThreadPoolHandle; signature= -> handle:resource; attr=num_threads:int; attr=max_intra_op_parallelism:int,default=1; attr=display_name:string; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.800445: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalUnbatchDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.800529: I tensorflow/core/framework/op.cc:132] Op<name=ExperimentalUniqueDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.800626: I tensorflow/core/framework/op.cc:132] Op<name=Expint; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.800762: I tensorflow/core/framework/op.cc:132] Op<name=Expm1; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.801064: I tensorflow/core/framework/op.cc:132] Op<name=ExtractGlimpse; signature=input:float, size:int32, offsets:float -> glimpse:float; attr=centered:bool,default=true; attr=normalized:bool,default=true; attr=uniform_noise:bool,default=true; attr=noise:string,default="uniform">
2023-01-12 08:11:05.803684: I tensorflow/core/framework/op.cc:132] Op<name=ExtractGlimpseV2; signature=input:float, size:int32, offsets:float -> glimpse:float; attr=centered:bool,default=true; attr=normalized:bool,default=true; attr=uniform_noise:bool,default=true; attr=noise:string,default="uniform">
2023-01-12 08:11:05.804183: I tensorflow/core/framework/op.cc:132] Op<name=ExtractImagePatches; signature=images:T -> patches:T; attr=ksizes:list(int),min=4; attr=strides:list(int),min=4; attr=rates:list(int),min=4; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, 13426711389993069653, DT_UINT32, DT_UINT64, DT_COMPLEX64, DT_COMPLEX128, DT_BOOL]; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.804457: I tensorflow/core/framework/op.cc:132] Op<name=ExtractJpegShape; signature=contents:string -> image_shape:output_type; attr=output_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.804596: I tensorflow/core/framework/op.cc:132] Op<name=ExtractVolumePatches; signature=input:T -> patches:T; attr=ksizes:list(int),min=5; attr=strides:list(int),min=5; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.804699: I tensorflow/core/framework/op.cc:132] Op<name=FFT; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.804905: I tensorflow/core/framework/op.cc:132] Op<name=FFT2D; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.805019: I tensorflow/core/framework/op.cc:132] Op<name=FFT3D; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.805282: I tensorflow/core/framework/op.cc:132] Op<name=FIFOQueue; signature= -> handle:Ref(string); attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.805455: I tensorflow/core/framework/op.cc:132] Op<name=FIFOQueueV2; signature= -> handle:resource; attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.805489: I tensorflow/core/framework/op.cc:132] Op<name=Fact; signature= -> fact:string>
2023-01-12 08:11:05.805525: I tensorflow/core/framework/op.cc:132] Op<name=FakeParam; signature= -> output:dtype; attr=dtype:type; attr=shape:shape>
2023-01-12 08:11:05.805606: I tensorflow/core/framework/op.cc:132] Op<name=FakeQuantWithMinMaxArgs; signature=inputs:float -> outputs:float; attr=min:float,default=-6; attr=max:float,default=6; attr=num_bits:int,default=8; attr=narrow_range:bool,default=false>
2023-01-12 08:11:05.805669: I tensorflow/core/framework/op.cc:132] Op<name=FakeQuantWithMinMaxArgsGradient; signature=gradients:float, inputs:float -> backprops:float; attr=min:float,default=-6; attr=max:float,default=6; attr=num_bits:int,default=8; attr=narrow_range:bool,default=false>
2023-01-12 08:11:05.805705: I tensorflow/core/framework/op.cc:132] Op<name=FakeQuantWithMinMaxVars; signature=inputs:float, min:float, max:float -> outputs:float; attr=num_bits:int,default=8; attr=narrow_range:bool,default=false>
2023-01-12 08:11:05.805749: I tensorflow/core/framework/op.cc:132] Op<name=FakeQuantWithMinMaxVarsGradient; signature=gradients:float, inputs:float, min:float, max:float -> backprops_wrt_input:float, backprop_wrt_min:float, backprop_wrt_max:float; attr=num_bits:int,default=8; attr=narrow_range:bool,default=false>
2023-01-12 08:11:05.805779: I tensorflow/core/framework/op.cc:132] Op<name=FakeQuantWithMinMaxVarsPerChannel; signature=inputs:float, min:float, max:float -> outputs:float; attr=num_bits:int,default=8; attr=narrow_range:bool,default=false>
2023-01-12 08:11:05.805822: I tensorflow/core/framework/op.cc:132] Op<name=FakeQuantWithMinMaxVarsPerChannelGradient; signature=gradients:float, inputs:float, min:float, max:float -> backprops_wrt_input:float, backprop_wrt_min:float, backprop_wrt_max:float; attr=num_bits:int,default=8; attr=narrow_range:bool,default=false>
2023-01-12 08:11:05.805852: I tensorflow/core/framework/op.cc:132] Op<name=FakeQueue; signature=resource:resource -> handle:Ref(string); is_stateful=true>
2023-01-12 08:11:05.805978: I tensorflow/core/framework/op.cc:132] Op<name=FileSystemSetConfiguration; signature=scheme:string, key:string, value:string -> ; is_stateful=true>
2023-01-12 08:11:05.806144: I tensorflow/core/framework/op.cc:132] Op<name=Fill; signature=dims:index_type, value:T -> output:T; attr=T:type; attr=index_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.806378: I tensorflow/core/framework/op.cc:132] Op<name=FilterByLastComponentDataset; signature=input_dataset:variant -> output:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.806713: I tensorflow/core/framework/op.cc:132] Op<name=FilterDataset; signature=input_dataset:variant, other_arguments: -> handle:variant; attr=predicate:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.806906: I tensorflow/core/framework/op.cc:132] Op<name=FinalizeDataset; signature=input_dataset:variant -> handle:variant; attr=has_captured_ref:bool,default=false; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.807006: I tensorflow/core/framework/op.cc:132] Op<name=FinalizeTPUEmbedding; signature=common_config:string, memory_config:string -> ; is_stateful=true>
2023-01-12 08:11:05.807066: I tensorflow/core/framework/op.cc:132] Op<name=Fingerprint; signature=data:T, method:string -> fingerprint:uint8; attr=T:type>
2023-01-12 08:11:05.807141: I tensorflow/core/framework/op.cc:132] Op<name=FiveFloatOutputs; signature= -> a:float, b:float, c:float, d:float, e:float>
2023-01-12 08:11:05.807237: I tensorflow/core/framework/op.cc:132] Op<name=FixedLengthRecordDataset; signature=filenames:string, header_bytes:int64, record_bytes:int64, footer_bytes:int64, buffer_size:int64 -> handle:variant; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:05.807340: I tensorflow/core/framework/op.cc:132] Op<name=FixedLengthRecordDatasetV2; signature=filenames:string, header_bytes:int64, record_bytes:int64, footer_bytes:int64, buffer_size:int64, compression_type:string -> handle:variant; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:05.807676: I tensorflow/core/framework/op.cc:132] Op<name=FixedLengthRecordReader; signature= -> reader_handle:Ref(string); attr=header_bytes:int,default=0; attr=record_bytes:int; attr=footer_bytes:int,default=0; attr=hop_bytes:int,default=0; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.807797: I tensorflow/core/framework/op.cc:132] Op<name=FixedLengthRecordReaderV2; signature= -> reader_handle:resource; attr=header_bytes:int,default=0; attr=record_bytes:int; attr=footer_bytes:int,default=0; attr=hop_bytes:int,default=0; attr=container:string,default=""; attr=shared_name:string,default=""; attr=encoding:string,default=""; is_stateful=true>
2023-01-12 08:11:05.807959: I tensorflow/core/framework/op.cc:132] Op<name=FixedUnigramCandidateSampler; signature=true_classes:int64 -> sampled_candidates:int64, true_expected_count:float, sampled_expected_count:float; attr=num_true:int,min=1; attr=num_sampled:int,min=1; attr=unique:bool; attr=range_max:int,min=1; attr=vocab_file:string,default=""; attr=distortion:float,default=1; attr=num_reserved_ids:int,default=0; attr=num_shards:int,default=1,min=1; attr=shard:int,default=0,min=0; attr=unigrams:list(float),default=[]; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:05.808303: I tensorflow/core/framework/op.cc:132] Op<name=FlatMapDataset; signature=input_dataset:variant, other_arguments: -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.808410: I tensorflow/core/framework/op.cc:132] Op<name=FloatInput; signature=a:float -> >
2023-01-12 08:11:05.808484: I tensorflow/core/framework/op.cc:132] Op<name=FloatOutput; signature= -> a:float>
2023-01-12 08:11:05.808583: I tensorflow/core/framework/op.cc:132] Op<name=FloatOutputStringOutput; signature= -> a:float, b:string>
2023-01-12 08:11:05.808708: I tensorflow/core/framework/op.cc:132] Op<name=Floor; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.808817: I tensorflow/core/framework/op.cc:132] Op<name=FloorDiv; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_UINT32, DT_UINT64, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.808924: I tensorflow/core/framework/op.cc:132] Op<name=FloorMod; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64, DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.809002: I tensorflow/core/framework/op.cc:132] Op<name=FlushSummaryWriter; signature=writer:resource -> ; is_stateful=true>
2023-01-12 08:11:05.809178: I tensorflow/core/framework/op.cc:132] Op<name=Foo1; signature=a:float, b:int32, c:int32 -> d:float, e:int32>
2023-01-12 08:11:05.809282: I tensorflow/core/framework/op.cc:132] Op<name=Foo2; signature=a:float, b:string, c:string -> d:float, e:int32>
2023-01-12 08:11:05.809456: I tensorflow/core/framework/op.cc:132] Op<name=Foo3; signature=a:float, b:string, c:float -> d:float, e:int32>
2023-01-12 08:11:05.809543: I tensorflow/core/framework/op.cc:132] Op<name=For; signature=start:int32, limit:int32, delta:int32, input: -> output:; attr=T:list(type),min=0; attr=body:func>
2023-01-12 08:11:05.809676: I tensorflow/core/framework/op.cc:132] Op<name=FractionalAvgPool; signature=value:T -> output:T, row_pooling_sequence:int64, col_pooling_sequence:int64; attr=pooling_ratio:list(float),min=4; attr=pseudo_random:bool,default=false; attr=overlapping:bool,default=false; attr=deterministic:bool,default=false; attr=seed:int,default=0; attr=seed2:int,default=0; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.809861: I tensorflow/core/framework/op.cc:132] Op<name=FractionalAvgPoolGrad; signature=orig_input_tensor_shape:int64, out_backprop:T, row_pooling_sequence:int64, col_pooling_sequence:int64 -> output:T; attr=overlapping:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.810003: I tensorflow/core/framework/op.cc:132] Op<name=FractionalMaxPool; signature=value:T -> output:T, row_pooling_sequence:int64, col_pooling_sequence:int64; attr=pooling_ratio:list(float),min=4; attr=pseudo_random:bool,default=false; attr=overlapping:bool,default=false; attr=deterministic:bool,default=false; attr=seed:int,default=0; attr=seed2:int,default=0; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.810058: I tensorflow/core/framework/op.cc:132] Op<name=FractionalMaxPoolGrad; signature=orig_input:T, orig_output:T, out_backprop:T, row_pooling_sequence:int64, col_pooling_sequence:int64 -> output:T; attr=overlapping:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.810105: I tensorflow/core/framework/op.cc:132] Op<name=FresnelCos; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.810264: I tensorflow/core/framework/op.cc:132] Op<name=FresnelSin; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.810414: I tensorflow/core/framework/op.cc:132] Op<name=FuncAttr; signature= -> ; attr=f:func>
2023-01-12 08:11:05.810487: I tensorflow/core/framework/op.cc:132] Op<name=FuncListAttr; signature= -> ; attr=f:list(func)>
2023-01-12 08:11:05.810704: I tensorflow/core/framework/op.cc:132] Op<name=FusedBatchNorm; signature=x:T, scale:T, offset:T, mean:T, variance:T -> y:T, batch_mean:T, batch_variance:T, reserve_space_1:T, reserve_space_2:T; attr=T:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=exponential_avg_factor:float,default=1; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:05.810903: I tensorflow/core/framework/op.cc:132] Op<name=FusedBatchNormGrad; signature=y_backprop:T, x:T, scale:T, reserve_space_1:T, reserve_space_2:T -> x_backprop:T, scale_backprop:T, offset_backprop:T, reserve_space_3:T, reserve_space_4:T; attr=T:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:05.811019: I tensorflow/core/framework/op.cc:132] Op<name=FusedBatchNormGradV2; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_3:U, reserve_space_4:U; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:05.811168: I tensorflow/core/framework/op.cc:132] Op<name=FusedBatchNormGradV3; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_4:U, reserve_space_5:U; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NDHWC", "NCDHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:05.811412: I tensorflow/core/framework/op.cc:132] Op<name=FusedBatchNormV2; signature=x:T, scale:U, offset:U, mean:U, variance:U -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=exponential_avg_factor:float,default=1; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:05.811607: I tensorflow/core/framework/op.cc:132] Op<name=FusedBatchNormV3; signature=x:T, scale:U, offset:U, mean:U, variance:U -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=exponential_avg_factor:float,default=1; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NDHWC", "NCDHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:05.811817: I tensorflow/core/framework/op.cc:132] Op<name=FusedPadConv2D; signature=input:T, paddings:int32, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=mode:string,allowed=["REFLECT", "SYMMETRIC"]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.812256: I tensorflow/core/framework/op.cc:132] Op<name=FusedResizeAndPadConv2D; signature=input:T, size:int32, paddings:int32, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=resize_align_corners:bool,default=false; attr=mode:string,allowed=["REFLECT", "SYMMETRIC"]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:05.812352: I tensorflow/core/framework/op.cc:132] Op<name=GRUBlockCell; signature=x:T, h_prev:T, w_ru:T, w_c:T, b_ru:T, b_c:T -> r:T, u:T, c:T, h:T; attr=T:type,allowed=[DT_FLOAT]>
2023-01-12 08:11:05.812443: I tensorflow/core/framework/op.cc:132] Op<name=GRUBlockCellGrad; signature=x:T, h_prev:T, w_ru:T, w_c:T, b_ru:T, b_c:T, r:T, u:T, c:T, d_h:T -> d_x:T, d_h_prev:T, d_c_bar:T, d_r_bar_u_bar:T; attr=T:type,allowed=[DT_FLOAT]>
2023-01-12 08:11:05.812827: I tensorflow/core/framework/op.cc:132] Op<name=Gather; signature=params:Tparams, indices:Tindices -> output:Tparams; attr=validate_indices:bool,default=true; attr=Tparams:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.812996: I tensorflow/core/framework/op.cc:132] Op<name=GatherNd; signature=params:Tparams, indices:Tindices -> output:Tparams; attr=Tparams:type; attr=Tindices:type,allowed=[DT_INT16, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.813183: I tensorflow/core/framework/op.cc:132] Op<name=GatherV2; signature=params:Tparams, indices:Tindices, axis:Taxis -> output:Tparams; attr=batch_dims:int,default=0; attr=Tparams:type; attr=Tindices:type,allowed=[DT_INT16, DT_INT32, DT_INT64]; attr=Taxis:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.813268: I tensorflow/core/framework/op.cc:132] Op<name=GenerateBoundingBoxProposals; signature=scores:float, bbox_deltas:float, image_info:float, anchors:float, nms_threshold:float, pre_nms_topn:int32, min_size:float -> rois:float, roi_probabilities:float; attr=post_nms_topn:int,default=300>
2023-01-12 08:11:05.813375: I tensorflow/core/framework/op.cc:132] Op<name=GenerateVocabRemapping; signature=new_vocab_file:string, old_vocab_file:string -> remapping:int64, num_present:int32; attr=new_vocab_offset:int,min=0; attr=num_new_vocab:int,min=0; attr=old_vocab_size:int,default=-1,min=-1>
2023-01-12 08:11:05.813485: I tensorflow/core/framework/op.cc:132] Op<name=GeneratorDataset; signature=init_func_other_args:, next_func_other_args:, finalize_func_other_args: -> handle:variant; attr=init_func:func; attr=next_func:func; attr=finalize_func:func; attr=Tinit_func_args:list(type),min=0; attr=Tnext_func_args:list(type),min=0; attr=Tfinalize_func_args:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:05.813540: I tensorflow/core/framework/op.cc:132] Op<name=GetDeadline; signature= -> deadline_from_epoch_micros:int64>
2023-01-12 08:11:05.813615: I tensorflow/core/framework/op.cc:132] Op<name=GetElementAtIndex; signature=dataset:variant, index:int64 -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.813688: I tensorflow/core/framework/op.cc:132] Op<name=GetOptions; signature=input_dataset:variant -> serialized_options:string>
2023-01-12 08:11:05.813738: I tensorflow/core/framework/op.cc:132] Op<name=GetSessionHandle; signature=value:T -> handle:string; attr=T:type; is_stateful=true>
2023-01-12 08:11:05.847531: I tensorflow/core/framework/op.cc:132] Op<name=GetSessionHandleV2; signature=value:T -> handle:resource; attr=T:type; is_stateful=true>
2023-01-12 08:11:05.868623: I tensorflow/core/framework/op.cc:132] Op<name=GetSessionTensor; signature=handle:string -> value:dtype; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:05.868731: I tensorflow/core/framework/op.cc:132] Op<name=GraphDefVersion; signature= -> version:int32; is_stateful=true>
2023-01-12 08:11:05.868897: I tensorflow/core/framework/op.cc:132] Op<name=Greater; signature=x:T, y:T -> z:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.870012: I tensorflow/core/framework/op.cc:132] Op<name=GreaterEqual; signature=x:T, y:T -> z:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.870246: I tensorflow/core/framework/op.cc:132] Op<name=GroupByReducerDataset; signature=input_dataset:variant, key_func_other_arguments:, init_func_other_arguments:, reduce_func_other_arguments:, finalize_func_other_arguments: -> handle:variant; attr=key_func:func; attr=init_func:func; attr=reduce_func:func; attr=finalize_func:func; attr=Tkey_func_other_arguments:list(type),min=0; attr=Tinit_func_other_arguments:list(type),min=0; attr=Treduce_func_other_arguments:list(type),min=0; attr=Tfinalize_func_other_arguments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.870370: I tensorflow/core/framework/op.cc:132] Op<name=GroupByWindowDataset; signature=input_dataset:variant, key_func_other_arguments:, reduce_func_other_arguments:, window_size_func_other_arguments: -> handle:variant; attr=key_func:func; attr=reduce_func:func; attr=window_size_func:func; attr=Tkey_func_other_arguments:list(type),min=0; attr=Treduce_func_other_arguments:list(type),min=0; attr=Twindow_size_func_other_arguments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.870574: I tensorflow/core/framework/op.cc:132] Op<name=GuaranteeConst; signature=input:T -> output:T; attr=T:type; is_stateful=true>
2023-01-12 08:11:05.870743: I tensorflow/core/framework/op.cc:132] Op<name=HSVToRGB; signature=images:T -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.870951: I tensorflow/core/framework/op.cc:132] Op<name=HashTable; signature= -> table_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; is_stateful=true>
2023-01-12 08:11:05.871070: I tensorflow/core/framework/op.cc:132] Op<name=HashTableV2; signature= -> table_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; is_stateful=true>
2023-01-12 08:11:05.871236: I tensorflow/core/framework/op.cc:132] Op<name=HistogramFixedWidth; signature=values:T, value_range:T, nbins:int32 -> out:dtype; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]; attr=dtype:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.871298: I tensorflow/core/framework/op.cc:132] Op<name=HistogramSummary; signature=tag:string, values:T -> summary:string; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.871371: I tensorflow/core/framework/op.cc:132] Op<name=HostConst; signature= -> output:dtype; attr=value:tensor; attr=dtype:type>
2023-01-12 08:11:05.871426: I tensorflow/core/framework/op.cc:132] Op<name=IFFT; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.871545: I tensorflow/core/framework/op.cc:132] Op<name=IFFT2D; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.871686: I tensorflow/core/framework/op.cc:132] Op<name=IFFT3D; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.873233: I tensorflow/core/framework/op.cc:132] Op<name=IRFFT; signature=input:Tcomplex, fft_length:int32 -> output:Treal; attr=Treal:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.873981: I tensorflow/core/framework/op.cc:132] Op<name=IRFFT2D; signature=input:Tcomplex, fft_length:int32 -> output:Treal; attr=Treal:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.875613: I tensorflow/core/framework/op.cc:132] Op<name=IRFFT3D; signature=input:Tcomplex, fft_length:int32 -> output:Treal; attr=Treal:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.875814: I tensorflow/core/framework/op.cc:132] Op<name=Identity; signature=input:T -> output:T; attr=T:type>
2023-01-12 08:11:05.875874: I tensorflow/core/framework/op.cc:132] Op<name=IdentityN; signature=input: -> output:; attr=T:list(type),min=1>
2023-01-12 08:11:05.875927: I tensorflow/core/framework/op.cc:132] Op<name=IdentityReader; signature= -> reader_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.875968: I tensorflow/core/framework/op.cc:132] Op<name=IdentityReaderV2; signature= -> reader_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.876235: I tensorflow/core/framework/op.cc:132] Op<name=If; signature=cond:Tcond, input: -> output:; attr=Tcond:type; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=then_branch:func; attr=else_branch:func; attr=output_shapes:list(shape),default=[]; is_stateful=true>
2023-01-12 08:11:05.876400: I tensorflow/core/framework/op.cc:132] Op<name=Igamma; signature=a:T, x:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.876547: I tensorflow/core/framework/op.cc:132] Op<name=IgammaGradA; signature=a:T, x:T -> z:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.876897: I tensorflow/core/framework/op.cc:132] Op<name=Igammac; signature=a:T, x:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.876978: I tensorflow/core/framework/op.cc:132] Op<name=IgnoreErrorsDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=log_warning:bool,default=false>
2023-01-12 08:11:05.878971: I tensorflow/core/framework/op.cc:132] Op<name=Imag; signature=input:T -> output:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.880735: I tensorflow/core/framework/op.cc:132] Op<name=ImageProjectiveTransformV2; signature=images:dtype, transforms:float, output_shape:int32 -> transformed_images:dtype; attr=dtype:type,allowed=[DT_UINT8, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=interpolation:string; attr=fill_mode:string,default="CONSTANT">
2023-01-12 08:11:05.880940: I tensorflow/core/framework/op.cc:132] Op<name=ImageProjectiveTransformV3; signature=images:dtype, transforms:float, output_shape:int32, fill_value:float -> transformed_images:dtype; attr=dtype:type,allowed=[DT_UINT8, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=interpolation:string; attr=fill_mode:string,default="CONSTANT">
2023-01-12 08:11:05.887226: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: -6 kernel_name: "Unknown (from Proto)" tensor { dtype: DT_UINT8 shape { dim { size: 4 } } allocation_description { requested_bytes: 4 allocated_bytes: 4 allocator_name: "cpu" allocation_id: 4 has_single_reference: true ptr: 93931476565184 } } }
2023-01-12 08:11:05.887675: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: "cpu" }
2023-01-12 08:11:05.887812: I tensorflow/core/framework/op.cc:132] Op<name=ImageSummary; signature=tag:string, tensor:T -> summary:string; attr=max_images:int,default=3,min=1; attr=T:type,default=DT_FLOAT,allowed=[DT_UINT8, DT_FLOAT, DT_HALF, DT_DOUBLE]; attr=bad_color:tensor,default=Tensor<type: uint8 shape: [4] values: 255 0 0...>>
2023-01-12 08:11:05.887859: I tensorflow/core/framework/op.cc:132] Op<name=ImmutableConst; signature= -> tensor:dtype; attr=dtype:type; attr=shape:shape; attr=memory_region_name:string>
2023-01-12 08:11:05.887879: I tensorflow/core/framework/op.cc:132] Op<name=ImportEvent; signature=writer:resource, event:string -> ; is_stateful=true>
2023-01-12 08:11:05.887900: I tensorflow/core/framework/op.cc:132] Op<name=InPolymorphicTwice; signature=a:N*T, b:M*T -> ; attr=T:type,default=DT_INT32; attr=N:int,min=0; attr=M:int,min=0>
2023-01-12 08:11:05.888230: I tensorflow/core/framework/op.cc:132] Op<name=InTopK; signature=predictions:float, targets:T -> precision:bool; attr=k:int; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.888350: I tensorflow/core/framework/op.cc:132] Op<name=InTopKV2; signature=predictions:float, targets:T, k:T -> precision:bool; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.888383: I tensorflow/core/framework/op.cc:132] Op<name=InfeedDequeue; signature= -> output:dtype; attr=dtype:type; attr=shape:shape; is_stateful=true>
2023-01-12 08:11:05.888406: I tensorflow/core/framework/op.cc:132] Op<name=InfeedDequeueTuple; signature= -> outputs:; attr=dtypes:list(type),min=1; attr=shapes:list(shape); is_stateful=true>
2023-01-12 08:11:05.888440: I tensorflow/core/framework/op.cc:132] Op<name=InfeedEnqueue; signature=input:dtype -> ; attr=dtype:type; attr=shape:shape,default=[]; attr=layout:list(int),default=[]; attr=device_ordinal:int,default=-1; is_stateful=true>
2023-01-12 08:11:05.888462: I tensorflow/core/framework/op.cc:132] Op<name=InfeedEnqueuePrelinearizedBuffer; signature=input:variant -> ; attr=device_ordinal:int,default=-1>
2023-01-12 08:11:05.888493: I tensorflow/core/framework/op.cc:132] Op<name=InfeedEnqueueTuple; signature=inputs: -> ; attr=dtypes:list(type),min=1; attr=shapes:list(shape); attr=layouts:list(int),default=[]; attr=device_ordinal:int,default=-1; is_stateful=true>
2023-01-12 08:11:05.888522: I tensorflow/core/framework/op.cc:132] Op<name=InitializeTable; signature=table_handle:Ref(string), keys:Tkey, values:Tval -> ; attr=Tkey:type; attr=Tval:type>
2023-01-12 08:11:05.888546: I tensorflow/core/framework/op.cc:132] Op<name=InitializeTableFromDataset; signature=table_handle:resource, dataset:variant -> ; is_stateful=true>
2023-01-12 08:11:05.888579: I tensorflow/core/framework/op.cc:132] Op<name=InitializeTableFromTextFile; signature=table_handle:Ref(string), filename:string -> ; attr=key_index:int,min=-2; attr=value_index:int,min=-2; attr=vocab_size:int,default=-1,min=-1; attr=delimiter:string,default="\t"; attr=offset:int,default=0>
2023-01-12 08:11:05.888612: I tensorflow/core/framework/op.cc:132] Op<name=InitializeTableFromTextFileV2; signature=table_handle:resource, filename:string -> ; attr=key_index:int,min=-2; attr=value_index:int,min=-2; attr=vocab_size:int,default=-1,min=-1; attr=delimiter:string,default="\t"; attr=offset:int,default=0; is_stateful=true>
2023-01-12 08:11:05.888642: I tensorflow/core/framework/op.cc:132] Op<name=InitializeTableV2; signature=table_handle:resource, keys:Tkey, values:Tval -> ; attr=Tkey:type; attr=Tval:type; is_stateful=true>
2023-01-12 08:11:05.888665: I tensorflow/core/framework/op.cc:132] Op<name=InplaceAdd; signature=x:T, i:int32, v:T -> y:T; attr=T:type>
2023-01-12 08:11:05.888688: I tensorflow/core/framework/op.cc:132] Op<name=InplaceSub; signature=x:T, i:int32, v:T -> y:T; attr=T:type>
2023-01-12 08:11:05.888709: I tensorflow/core/framework/op.cc:132] Op<name=InplaceUpdate; signature=x:T, i:int32, v:T -> y:T; attr=T:type>
2023-01-12 08:11:05.888727: I tensorflow/core/framework/op.cc:132] Op<name=Int64Output; signature= -> out:int64>
2023-01-12 08:11:05.888809: I tensorflow/core/framework/op.cc:132] Op<name=IntAttr; signature= -> out:int64; attr=foo:int,default=1>
2023-01-12 08:11:05.888960: I tensorflow/core/framework/op.cc:132] Op<name=IntInput; signature=a:int32 -> >
2023-01-12 08:11:05.889068: I tensorflow/core/framework/op.cc:132] Op<name=IntInputFloatInput; signature=a:int32, b:float -> >
2023-01-12 08:11:05.889220: I tensorflow/core/framework/op.cc:132] Op<name=IntInputIntOutput; signature=a:int32 -> b:int32>
2023-01-12 08:11:05.889468: I tensorflow/core/framework/op.cc:132] Op<name=IntOutput; signature= -> a:int32>
2023-01-12 08:11:05.889561: I tensorflow/core/framework/op.cc:132] Op<name=IntOutputFloatOutput; signature= -> a:int32, b:float>
2023-01-12 08:11:05.889623: I tensorflow/core/framework/op.cc:132] Op<name=InterleaveDataset; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64 -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.889686: I tensorflow/core/framework/op.cc:132] Op<name=Inv; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.889735: I tensorflow/core/framework/op.cc:132] Op<name=InvGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.889775: I tensorflow/core/framework/op.cc:132] Op<name=Invert; signature=x:T -> y:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.889811: I tensorflow/core/framework/op.cc:132] Op<name=InvertPermutation; signature=x:T -> y:T; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.889854: I tensorflow/core/framework/op.cc:132] Op<name=IsBoostedTreesEnsembleInitialized; signature=tree_ensemble_handle:resource -> is_initialized:bool; is_stateful=true>
2023-01-12 08:11:05.889882: I tensorflow/core/framework/op.cc:132] Op<name=IsBoostedTreesQuantileStreamResourceInitialized; signature=quantile_stream_resource_handle:resource -> is_initialized:bool; is_stateful=true>
2023-01-12 08:11:05.889924: I tensorflow/core/framework/op.cc:132] Op<name=IsFinite; signature=x:T -> y:bool; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.889966: I tensorflow/core/framework/op.cc:132] Op<name=IsInf; signature=x:T -> y:bool; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.890112: I tensorflow/core/framework/op.cc:132] Op<name=IsNan; signature=x:T -> y:bool; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.890207: I tensorflow/core/framework/op.cc:132] Op<name=IsResourceHandleRefCounting; signature=handle:resource -> result:bool; is_stateful=true>
2023-01-12 08:11:05.890317: I tensorflow/core/framework/op.cc:132] Op<name=IsTPUEmbeddingInitialized; signature= -> is_tpu_embedding_initialized:bool; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.890412: I tensorflow/core/framework/op.cc:132] Op<name=IsTensorFloat32Enabled; signature= -> enabled:bool; is_stateful=true>
2023-01-12 08:11:05.890498: I tensorflow/core/framework/op.cc:132] Op<name=IsVariableInitialized; signature=ref:Ref(dtype) -> is_initialized:bool; attr=dtype:type; allows_uninitialized_input=true>
2023-01-12 08:11:05.890623: I tensorflow/core/framework/op.cc:132] Op<name=IsotonicRegression; signature=input:T -> output:output_dtype, segments:int32; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=output_dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.890733: I tensorflow/core/framework/op.cc:132] Op<name=Iterator; signature= -> handle:resource; attr=shared_name:string; attr=container:string; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.890834: I tensorflow/core/framework/op.cc:132] Op<name=IteratorFromStringHandle; signature=string_handle:string -> resource_handle:resource; attr=output_types:list(type),default=[],min=0; attr=output_shapes:list(shape),default=[],min=0; is_stateful=true>
2023-01-12 08:11:05.890945: I tensorflow/core/framework/op.cc:132] Op<name=IteratorFromStringHandleV2; signature=string_handle:string -> resource_handle:resource; attr=output_types:list(type),default=[],min=0; attr=output_shapes:list(shape),default=[],min=0; is_stateful=true>
2023-01-12 08:11:05.891048: I tensorflow/core/framework/op.cc:132] Op<name=IteratorGetDevice; signature=resource:resource -> device:string; is_stateful=true>
2023-01-12 08:11:05.891151: I tensorflow/core/framework/op.cc:132] Op<name=IteratorGetNext; signature=iterator:resource -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.891245: I tensorflow/core/framework/op.cc:132] Op<name=IteratorGetNextAsOptional; signature=iterator:resource -> optional:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.891287: I tensorflow/core/framework/op.cc:132] Op<name=IteratorGetNextSync; signature=iterator:resource -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.891317: I tensorflow/core/framework/op.cc:132] Op<name=IteratorToStringHandle; signature=resource_handle:resource -> string_handle:string; is_stateful=true>
2023-01-12 08:11:05.891351: I tensorflow/core/framework/op.cc:132] Op<name=IteratorV2; signature= -> handle:resource; attr=shared_name:string; attr=container:string; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.891377: I tensorflow/core/framework/op.cc:132] Op<name=KMC2ChainInitialization; signature=distances:float, seed:int64 -> index:int64>
2023-01-12 08:11:05.891399: I tensorflow/core/framework/op.cc:132] Op<name=KernelLabel; signature= -> result:string>
2023-01-12 08:11:05.891421: I tensorflow/core/framework/op.cc:132] Op<name=KernelLabelRequired; signature=input:int32 -> result:string>
2023-01-12 08:11:05.891448: I tensorflow/core/framework/op.cc:132] Op<name=KmeansPlusPlusInitialization; signature=points:float, num_to_sample:int64, seed:int64, num_retries_per_sample:int64 -> samples:float>
2023-01-12 08:11:05.891479: I tensorflow/core/framework/op.cc:132] Op<name=KthOrderStatistic; signature=input:float -> output:float; attr=k:int>
2023-01-12 08:11:05.891535: I tensorflow/core/framework/op.cc:132] Op<name=L2Loss; signature=t:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.891632: I tensorflow/core/framework/op.cc:132] Op<name=LMDBDataset; signature=filenames:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.891693: I tensorflow/core/framework/op.cc:132] Op<name=LMDBReader; signature= -> reader_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.891810: I tensorflow/core/framework/op.cc:132] Op<name=LRN; signature=input:T -> output:T; attr=depth_radius:int,default=5; attr=bias:float,default=1; attr=alpha:float,default=1; attr=beta:float,default=0.5; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:05.891965: I tensorflow/core/framework/op.cc:132] Op<name=LRNGrad; signature=input_grads:T, input_image:T, output_image:T -> output:T; attr=depth_radius:int,default=5; attr=bias:float,default=1; attr=alpha:float,default=1; attr=beta:float,default=0.5; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:05.892103: I tensorflow/core/framework/op.cc:132] Op<name=LSTMBlockCell; signature=x:T, cs_prev:T, h_prev:T, w:T, wci:T, wcf:T, wco:T, b:T -> i:T, cs:T, f:T, o:T, ci:T, co:T, h:T; attr=forget_bias:float,default=1; attr=cell_clip:float,default=3; attr=use_peephole:bool,default=false; attr=T:type,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.892241: I tensorflow/core/framework/op.cc:132] Op<name=LSTMBlockCellGrad; signature=x:T, cs_prev:T, h_prev:T, w:T, wci:T, wcf:T, wco:T, b:T, i:T, cs:T, f:T, o:T, ci:T, co:T, cs_grad:T, h_grad:T -> cs_prev_grad:T, dicfo:T, wci_grad:T, wcf_grad:T, wco_grad:T; attr=use_peephole:bool; attr=T:type,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.892354: I tensorflow/core/framework/op.cc:132] Op<name=LatencyStatsDataset; signature=input_dataset:variant, tag:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.892692: I tensorflow/core/framework/op.cc:132] Op<name=LeakyRelu; signature=features:T -> activations:T; attr=alpha:float,default=0.2; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.893003: I tensorflow/core/framework/op.cc:132] Op<name=LeakyReluGrad; signature=gradients:T, features:T -> backprops:T; attr=alpha:float,default=0.2; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.893155: I tensorflow/core/framework/op.cc:132] Op<name=LearnedUnigramCandidateSampler; signature=true_classes:int64 -> sampled_candidates:int64, true_expected_count:float, sampled_expected_count:float; attr=num_true:int,min=1; attr=num_sampled:int,min=1; attr=unique:bool; attr=range_max:int,min=1; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:05.893238: I tensorflow/core/framework/op.cc:132] Op<name=LeftShift; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.893396: I tensorflow/core/framework/op.cc:132] Op<name=LegacyParallelInterleaveDatasetV2; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64, buffer_output_elements:int64, prefetch_input_elements:int64 -> handle:variant; attr=f:func; attr=deterministic:string,default="default"; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:05.893554: I tensorflow/core/framework/op.cc:132] Op<name=Less; signature=x:T, y:T -> z:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.893625: I tensorflow/core/framework/op.cc:132] Op<name=LessEqual; signature=x:T, y:T -> z:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.893717: I tensorflow/core/framework/op.cc:132] Op<name=Lgamma; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.893888: I tensorflow/core/framework/op.cc:132] Op<name=LinSpace; signature=start:T, stop:T, num:Tidx -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.893934: I tensorflow/core/framework/op.cc:132] Op<name=ListDataset; signature=tensors: -> handle:variant; attr=Tinput_types:list(type),min=1; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:05.893972: I tensorflow/core/framework/op.cc:132] Op<name=ListDiff; signature=x:T, y:T -> out:T, idx:out_idx; attr=T:type; attr=out_idx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.894186: I tensorflow/core/framework/op.cc:132] Op<name=ListInput; signature=a:N*T -> ; attr=N:int,min=1; attr=T:type>
2023-01-12 08:11:05.894259: I tensorflow/core/framework/op.cc:132] Op<name=ListOutput; signature= -> a:; attr=T:list(type),min=1>
2023-01-12 08:11:05.894524: I tensorflow/core/framework/op.cc:132] Op<name=LoadAllTPUEmbeddingParameters; signature=parameters:NumTables*float, auxiliary1:NumTables*float, auxiliary2:NumTables*float, auxiliary3:NumTables*float, auxiliary4:NumTables*float, auxiliary5:NumTables*float, auxiliary6:NumTables*float, auxiliary7:NumTables*float -> ; attr=NumTables:int,min=1; attr=config:string; attr=num_shards:int; attr=shard_id:int; is_stateful=true>
2023-01-12 08:11:05.894746: I tensorflow/core/framework/op.cc:132] Op<name=LoadAndRemapMatrix; signature=ckpt_path:string, old_tensor_name:string, row_remapping:int64, col_remapping:int64, initializing_values:float -> output_matrix:float; attr=num_rows:int,min=0; attr=num_cols:int,min=1; attr=max_rows_in_memory:int,default=-1; is_stateful=true>
2023-01-12 08:11:05.895118: I tensorflow/core/framework/op.cc:132] Op<name=LoadDataset; signature=path:string, reader_func_other_args: -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=compression:string,default=""; attr=reader_func:func; attr=Treader_func_args:list(type),min=0; is_stateful=true>
2023-01-12 08:11:05.895361: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingADAMParameters; signature=parameters:float, momenta:float, velocities:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895421: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingAdadeltaParameters; signature=parameters:float, accumulators:float, updates:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895454: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingAdagradMomentumParameters; signature=parameters:float, accumulators:float, momenta:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895631: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingAdagradParameters; signature=parameters:float, accumulators:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895691: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingCenteredRMSPropParameters; signature=parameters:float, ms:float, mom:float, mg:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895721: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingFTRLParameters; signature=parameters:float, accumulators:float, linears:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895745: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingFrequencyEstimatorParameters; signature=parameters:float, last_hit_step:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895769: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingMDLAdagradLightParameters; signature=parameters:float, accumulators:float, weights:float, benefits:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895793: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingMomentumParameters; signature=parameters:float, momenta:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.895820: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingProximalAdagradParameters; signature=parameters:float, accumulators:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.896199: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingProximalYogiParameters; signature=parameters:float, v:float, m:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.896369: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingRMSPropParameters; signature=parameters:float, ms:float, mom:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.896441: I tensorflow/core/framework/op.cc:132] Op<name=LoadTPUEmbeddingStochasticGradientDescentParameters; signature=parameters:float -> ; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:05.896518: I tensorflow/core/framework/op.cc:132] Op<name=Log; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.896576: I tensorflow/core/framework/op.cc:132] Op<name=Log1p; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.896623: I tensorflow/core/framework/op.cc:132] Op<name=LogMatrixDeterminant; signature=input:T -> sign:T, log_abs_determinant:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.896670: I tensorflow/core/framework/op.cc:132] Op<name=LogSoftmax; signature=logits:T -> logsoftmax:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.896733: I tensorflow/core/framework/op.cc:132] Op<name=LogUniformCandidateSampler; signature=true_classes:int64 -> sampled_candidates:int64, true_expected_count:float, sampled_expected_count:float; attr=num_true:int,min=1; attr=num_sampled:int,min=1; attr=unique:bool; attr=range_max:int,min=1; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:05.896775: I tensorflow/core/framework/op.cc:132] Op<name=LogicalAnd; signature=x:bool, y:bool -> z:bool; is_commutative=true>
2023-01-12 08:11:05.896866: I tensorflow/core/framework/op.cc:132] Op<name=LogicalNot; signature=x:bool -> y:bool>
2023-01-12 08:11:05.896914: I tensorflow/core/framework/op.cc:132] Op<name=LogicalOr; signature=x:bool, y:bool -> z:bool; is_commutative=true>
2023-01-12 08:11:05.896994: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableExport; signature=table_handle:Ref(string) -> keys:Tkeys, values:Tvalues; attr=Tkeys:type; attr=Tvalues:type>
2023-01-12 08:11:05.897222: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableExportV2; signature=table_handle:resource -> keys:Tkeys, values:Tvalues; attr=Tkeys:type; attr=Tvalues:type; is_stateful=true>
2023-01-12 08:11:05.897264: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableFind; signature=table_handle:Ref(string), keys:Tin, default_value:Tout -> values:Tout; attr=Tin:type; attr=Tout:type>
2023-01-12 08:11:05.897532: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableFindV2; signature=table_handle:resource, keys:Tin, default_value:Tout -> values:Tout; attr=Tin:type; attr=Tout:type; is_stateful=true>
2023-01-12 08:11:05.897657: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableImport; signature=table_handle:Ref(string), keys:Tin, values:Tout -> ; attr=Tin:type; attr=Tout:type>
2023-01-12 08:11:05.897769: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableImportV2; signature=table_handle:resource, keys:Tin, values:Tout -> ; attr=Tin:type; attr=Tout:type; is_stateful=true>
2023-01-12 08:11:05.897879: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableInsert; signature=table_handle:Ref(string), keys:Tin, values:Tout -> ; attr=Tin:type; attr=Tout:type>
2023-01-12 08:11:05.897994: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableInsertV2; signature=table_handle:resource, keys:Tin, values:Tout -> ; attr=Tin:type; attr=Tout:type; is_stateful=true>
2023-01-12 08:11:05.898040: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableRemoveV2; signature=table_handle:resource, keys:Tin -> ; attr=Tin:type; is_stateful=true>
2023-01-12 08:11:05.898072: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableSize; signature=table_handle:Ref(string) -> size:int64>
2023-01-12 08:11:05.898101: I tensorflow/core/framework/op.cc:132] Op<name=LookupTableSizeV2; signature=table_handle:resource -> size:int64; is_stateful=true>
2023-01-12 08:11:05.898138: I tensorflow/core/framework/op.cc:132] Op<name=LoopCond; signature=input:bool -> output:bool>
2023-01-12 08:11:05.898210: I tensorflow/core/framework/op.cc:132] Op<name=LowerBound; signature=sorted_inputs:T, values:T -> output:out_type; attr=T:type; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.898344: I tensorflow/core/framework/op.cc:132] Op<name=Lu; signature=input:T -> lu:T, p:output_idx_type; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]; attr=output_idx_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.898472: I tensorflow/core/framework/op.cc:132] Op<name=MakeIterator; signature=dataset:variant, iterator:resource -> ; is_stateful=true>
2023-01-12 08:11:05.898523: I tensorflow/core/framework/op.cc:132] Op<name=MakeUnique; signature=input:float -> output:float>
2023-01-12 08:11:05.898571: I tensorflow/core/framework/op.cc:132] Op<name=MakeWeakResourceHandle; signature=handle:resource -> dup:resource; is_stateful=true>
2023-01-12 08:11:05.898658: I tensorflow/core/framework/op.cc:132] Op<name=MapAndBatchDataset; signature=input_dataset:variant, other_arguments:, batch_size:int64, num_parallel_calls:int64, drop_remainder:bool -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=preserve_cardinality:bool,default=false; attr=metadata:string,default="">
2023-01-12 08:11:05.898761: I tensorflow/core/framework/op.cc:132] Op<name=MapClear; signature= -> ; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.898932: I tensorflow/core/framework/op.cc:132] Op<name=MapDataset; signature=input_dataset:variant, other_arguments: -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_inter_op_parallelism:bool,default=true; attr=preserve_cardinality:bool,default=false; attr=metadata:string,default="">
2023-01-12 08:11:05.899101: I tensorflow/core/framework/op.cc:132] Op<name=MapDefun; signature=arguments:, captured_inputs: -> output:; attr=Targuments:list(type),min=1; attr=Tcaptured:list(type),default=[],min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=f:func; attr=max_intra_op_parallelism:int,default=1>
2023-01-12 08:11:05.899188: I tensorflow/core/framework/op.cc:132] Op<name=MapIncompleteSize; signature= -> size:int32; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.899263: I tensorflow/core/framework/op.cc:132] Op<name=MapPeek; signature=key:int64, indices:int32 -> values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.899319: I tensorflow/core/framework/op.cc:132] Op<name=MapSize; signature= -> size:int32; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.899365: I tensorflow/core/framework/op.cc:132] Op<name=MapStage; signature=key:int64, indices:int32, values: -> ; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=fake_dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.899552: I tensorflow/core/framework/op.cc:132] Op<name=MapUnstage; signature=key:int64, indices:int32 -> values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.899687: I tensorflow/core/framework/op.cc:132] Op<name=MapUnstageNoKey; signature=indices:int32 -> key:int64, values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.899919: I tensorflow/core/framework/op.cc:132] Op<name=MatMul; signature=a:T, b:T -> product:T; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.899975: I tensorflow/core/framework/op.cc:132] Op<name=MatchingFiles; signature=pattern:string -> filenames:string>
2023-01-12 08:11:05.899997: I tensorflow/core/framework/op.cc:132] Op<name=MatchingFilesDataset; signature=patterns:string -> handle:variant; is_stateful=true>
2023-01-12 08:11:05.900031: I tensorflow/core/framework/op.cc:132] Op<name=MatrixBandPart; signature=input:T, num_lower:Tindex, num_upper:Tindex -> band:T; attr=T:type; attr=Tindex:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.900091: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDeterminant; signature=input:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.900128: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDiag; signature=diagonal:T -> output:T; attr=T:type>
2023-01-12 08:11:05.900150: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDiagPart; signature=input:T -> diagonal:T; attr=T:type>
2023-01-12 08:11:05.900170: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDiagPartV2; signature=input:T, k:int32, padding_value:T -> diagonal:T; attr=T:type>
2023-01-12 08:11:05.900324: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDiagPartV3; signature=input:T, k:int32, padding_value:T -> diagonal:T; attr=T:type; attr=align:string,default="RIGHT_LEFT",allowed=["LEFT_RIGHT", "RIGHT_LEFT", "LEFT_LEFT", "RIGHT_RIGHT"]>
2023-01-12 08:11:05.900420: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDiagV2; signature=diagonal:T, k:int32, num_rows:int32, num_cols:int32, padding_value:T -> output:T; attr=T:type>
2023-01-12 08:11:05.900732: I tensorflow/core/framework/op.cc:132] Op<name=MatrixDiagV3; signature=diagonal:T, k:int32, num_rows:int32, num_cols:int32, padding_value:T -> output:T; attr=T:type; attr=align:string,default="RIGHT_LEFT",allowed=["LEFT_RIGHT", "RIGHT_LEFT", "LEFT_LEFT", "RIGHT_RIGHT"]>
2023-01-12 08:11:05.900851: I tensorflow/core/framework/op.cc:132] Op<name=MatrixExponential; signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.900905: I tensorflow/core/framework/op.cc:132] Op<name=MatrixInverse; signature=input:T -> output:T; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.900957: I tensorflow/core/framework/op.cc:132] Op<name=MatrixLogarithm; signature=input:T -> output:T; attr=T:type,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.900990: I tensorflow/core/framework/op.cc:132] Op<name=MatrixSetDiag; signature=input:T, diagonal:T -> output:T; attr=T:type>
2023-01-12 08:11:05.901023: I tensorflow/core/framework/op.cc:132] Op<name=MatrixSetDiagV2; signature=input:T, diagonal:T, k:int32 -> output:T; attr=T:type>
2023-01-12 08:11:05.901147: I tensorflow/core/framework/op.cc:132] Op<name=MatrixSetDiagV3; signature=input:T, diagonal:T, k:int32 -> output:T; attr=T:type; attr=align:string,default="RIGHT_LEFT",allowed=["LEFT_RIGHT", "RIGHT_LEFT", "LEFT_LEFT", "RIGHT_RIGHT"]>
2023-01-12 08:11:05.901397: I tensorflow/core/framework/op.cc:132] Op<name=MatrixSolve; signature=matrix:T, rhs:T -> output:T; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.901481: I tensorflow/core/framework/op.cc:132] Op<name=MatrixSolveLs; signature=matrix:T, rhs:T, l2_regularizer:double -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]; attr=fast:bool,default=true>
2023-01-12 08:11:05.901595: I tensorflow/core/framework/op.cc:132] Op<name=MatrixSquareRoot; signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.901658: I tensorflow/core/framework/op.cc:132] Op<name=MatrixTriangularSolve; signature=matrix:T, rhs:T -> output:T; attr=lower:bool,default=true; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.901769: I tensorflow/core/framework/op.cc:132] Op<name=Max; signature=input:T, reduction_indices:Tidx -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 12026250066093653660, DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.901859: I tensorflow/core/framework/op.cc:132] Op<name=MaxIntraOpParallelismDataset; signature=input_dataset:variant, max_intra_op_parallelism:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.901937: I tensorflow/core/framework/op.cc:132] Op<name=MaxPool; signature=input:T -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_UINT8, DT_INT16, DT_INT8, DT_UINT16, DT_QINT8]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NCHW_VECT_C"]>
2023-01-12 08:11:05.901997: I tensorflow/core/framework/op.cc:132] Op<name=MaxPool3D; signature=input:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:05.902039: I tensorflow/core/framework/op.cc:132] Op<name=MaxPool3DGrad; signature=orig_input:TInput, orig_output:TInput, grad:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=TInput:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:05.902077: I tensorflow/core/framework/op.cc:132] Op<name=MaxPool3DGradGrad; signature=orig_input:T, orig_output:T, grad:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902173: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolGrad; signature=orig_input:T, orig_output:T, grad:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902425: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolGradGrad; signature=orig_input:T, orig_output:T, grad:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902677: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolGradGradV2; signature=orig_input:T, orig_output:T, grad:T, ksize:int32, strides:int32 -> output:T; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902757: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolGradGradWithArgmax; signature=input:T, grad:T, argmax:Targmax -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=include_batch_in_index:bool,default=false; attr=Targmax:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902825: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolGradV2; signature=orig_input:T, orig_output:T, grad:T, ksize:int32, strides:int32 -> output:T; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902891: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolGradWithArgmax; signature=input:T, grad:T, argmax:Targmax -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=include_batch_in_index:bool,default=false; attr=Targmax:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.902948: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolV2; signature=input:T, ksize:int32, strides:int32 -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_UINT8, DT_INT16, DT_INT8, DT_UINT16, DT_QINT8]; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NCHW_VECT_C"]>
2023-01-12 08:11:05.903085: I tensorflow/core/framework/op.cc:132] Op<name=MaxPoolWithArgmax; signature=input:T -> output:T, argmax:Targmax; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=Targmax:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=padding:string,allowed=["SAME", "VALID"]; attr=include_batch_in_index:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.903681: I tensorflow/core/framework/op.cc:132] Op<name=Maximum; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_UINT32, DT_INT64, DT_UINT64]>
2023-01-12 08:11:05.903897: I tensorflow/core/framework/op.cc:132] Op<name=Mean; signature=input:T, reduction_indices:Tidx -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.903974: I tensorflow/core/framework/op.cc:132] Op<name=Merge; signature=inputs:N*T -> output:T, value_index:int32; attr=T:type; attr=N:int,min=1>
2023-01-12 08:11:05.904012: I tensorflow/core/framework/op.cc:132] Op<name=MergeSummary; signature=inputs:N*string -> summary:string; attr=N:int,min=1>
2023-01-12 08:11:05.904045: I tensorflow/core/framework/op.cc:132] Op<name=MergeV2Checkpoints; signature=checkpoint_prefixes:string, destination_prefix:string -> ; attr=delete_old_dirs:bool,default=true; attr=allow_missing_files:bool,default=false; is_stateful=true>
2023-01-12 08:11:05.904171: I tensorflow/core/framework/op.cc:132] Op<name=Mfcc; signature=spectrogram:float, sample_rate:int32 -> output:float; attr=upper_frequency_limit:float,default=4000; attr=lower_frequency_limit:float,default=20; attr=filterbank_channel_count:int,default=40; attr=dct_coefficient_count:int,default=13>
2023-01-12 08:11:05.904437: I tensorflow/core/framework/op.cc:132] Op<name=Min; signature=input:T, reduction_indices:Tidx -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 12026250066093653660, DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:05.904620: I tensorflow/core/framework/op.cc:132] Op<name=Minimum; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_UINT32, DT_INT64, DT_UINT64]>
2023-01-12 08:11:05.904733: I tensorflow/core/framework/op.cc:132] Op<name=MirrorPad; signature=input:T, paddings:Tpaddings -> output:T; attr=T:type; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=mode:string,allowed=["REFLECT", "SYMMETRIC"]>
2023-01-12 08:11:05.904834: I tensorflow/core/framework/op.cc:132] Op<name=MirrorPadGrad; signature=input:T, paddings:Tpaddings -> output:T; attr=T:type; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=mode:string,allowed=["REFLECT", "SYMMETRIC"]>
2023-01-12 08:11:05.904873: I tensorflow/core/framework/op.cc:132] Op<name=MixedStruct; signature= -> a:n_a*int32, b:float; attr=n_a:int,min=0>
2023-01-12 08:11:05.904943: I tensorflow/core/framework/op.cc:132] Op<name=MlirPassthroughOp; signature=inputs: -> outputs:; attr=mlir_module:string; attr=Tinputs:list(type),min=0; attr=Toutputs:list(type),min=0>
2023-01-12 08:11:05.904995: I tensorflow/core/framework/op.cc:132] Op<name=Mod; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_HALF, DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.905023: I tensorflow/core/framework/op.cc:132] Op<name=ModelDataset; signature=input_dataset:variant -> handle:variant; attr=algorithm:int,default=0; attr=cpu_budget:int,default=0; attr=ram_budget:int,default=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.906296: I tensorflow/core/framework/op.cc:132] Op<name=Mul; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_UINT32, DT_UINT64, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; is_commutative=true>
2023-01-12 08:11:05.906415: I tensorflow/core/framework/op.cc:132] Op<name=MulNoNan; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.906535: I tensorflow/core/framework/op.cc:132] Op<name=MultiDeviceIterator; signature= -> handle:resource; attr=devices:list(string),min=1; attr=shared_name:string; attr=container:string; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.906588: I tensorflow/core/framework/op.cc:132] Op<name=MultiDeviceIteratorFromStringHandle; signature=string_handle:string -> multi_device_iterator:resource; attr=output_types:list(type),default=[],min=0; attr=output_shapes:list(shape),default=[],min=0; is_stateful=true>
2023-01-12 08:11:05.906669: I tensorflow/core/framework/op.cc:132] Op<name=MultiDeviceIteratorGetNextFromShard; signature=multi_device_iterator:resource, shard_num:int32, incarnation_id:int64 -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:05.906748: I tensorflow/core/framework/op.cc:132] Op<name=MultiDeviceIteratorInit; signature=dataset:variant, multi_device_iterator:resource, max_buffer_size:int64 -> incarnation_id:int64; is_stateful=true>
2023-01-12 08:11:05.906803: I tensorflow/core/framework/op.cc:132] Op<name=MultiDeviceIteratorToStringHandle; signature=multi_device_iterator:resource -> string_handle:string; is_stateful=true>
2023-01-12 08:11:05.906900: I tensorflow/core/framework/op.cc:132] Op<name=Multinomial; signature=logits:T, num_samples:int32 -> output:output_dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=output_dtype:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:05.907160: I tensorflow/core/framework/op.cc:132] Op<name=MutableDenseHashTable; signature=empty_key:key_dtype -> table_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; attr=value_shape:shape,default=[]; attr=initial_num_buckets:int,default=131072; attr=max_load_factor:float,default=0.8; is_stateful=true>
2023-01-12 08:11:05.907319: I tensorflow/core/framework/op.cc:132] Op<name=MutableDenseHashTableV2; signature=empty_key:key_dtype, deleted_key:key_dtype -> table_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; attr=value_shape:shape,default=[]; attr=initial_num_buckets:int,default=131072; attr=max_load_factor:float,default=0.8; is_stateful=true>
2023-01-12 08:11:05.907579: I tensorflow/core/framework/op.cc:132] Op<name=MutableHashTable; signature= -> table_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; is_stateful=true>
2023-01-12 08:11:05.907782: I tensorflow/core/framework/op.cc:132] Op<name=MutableHashTableOfTensors; signature= -> table_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; attr=value_shape:shape,default=[]; is_stateful=true>
2023-01-12 08:11:05.907955: I tensorflow/core/framework/op.cc:132] Op<name=MutableHashTableOfTensorsV2; signature= -> table_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; attr=value_shape:shape,default=[]; is_stateful=true>
2023-01-12 08:11:05.908181: I tensorflow/core/framework/op.cc:132] Op<name=MutableHashTableV2; signature= -> table_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=use_node_name_sharing:bool,default=false; attr=key_dtype:type; attr=value_dtype:type; is_stateful=true>
2023-01-12 08:11:05.908322: I tensorflow/core/framework/op.cc:132] Op<name=MutexLock; signature=mutex:resource -> mutex_lock:variant; is_stateful=true>
2023-01-12 08:11:05.908464: I tensorflow/core/framework/op.cc:132] Op<name=MutexV2; signature= -> resource:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.908514: I tensorflow/core/framework/op.cc:132] Op<name=NInPolymorphicTwice; signature=a:N*T, b:N*T -> ; attr=T:type; attr=N:int,min=0>
2023-01-12 08:11:05.908551: I tensorflow/core/framework/op.cc:132] Op<name=NInTwice; signature=a:N*int32, b:N*string -> ; attr=N:int,min=0>
2023-01-12 08:11:05.908580: I tensorflow/core/framework/op.cc:132] Op<name=NInTwoTypeVariables; signature=a:N*S, b:N*T -> ; attr=S:type; attr=T:type; attr=N:int,min=0>
2023-01-12 08:11:05.908602: I tensorflow/core/framework/op.cc:132] Op<name=NIntsIn; signature=a:N*int32 -> ; attr=N:int,min=2>
2023-01-12 08:11:05.908690: I tensorflow/core/framework/op.cc:132] Op<name=NIntsOut; signature= -> a:N*int32; attr=N:int,min=2>
2023-01-12 08:11:05.908800: I tensorflow/core/framework/op.cc:132] Op<name=NIntsOutDefault; signature= -> a:N*int32; attr=N:int,default=3,min=2>
2023-01-12 08:11:05.908928: I tensorflow/core/framework/op.cc:132] Op<name=NPolymorphicIn; signature=a:N*T -> ; attr=T:type; attr=N:int,min=2>
2023-01-12 08:11:05.908997: I tensorflow/core/framework/op.cc:132] Op<name=NPolymorphicOut; signature= -> a:N*T; attr=T:type; attr=N:int,min=2>
2023-01-12 08:11:05.909059: I tensorflow/core/framework/op.cc:132] Op<name=NPolymorphicOutDefault; signature= -> a:N*T; attr=T:type,default=DT_BOOL; attr=N:int,default=2,min=2>
2023-01-12 08:11:05.909116: I tensorflow/core/framework/op.cc:132] Op<name=NPolymorphicRestrictIn; signature=a:N*T -> ; attr=T:type,allowed=[DT_STRING, DT_BOOL]; attr=N:int,min=2>
2023-01-12 08:11:05.909175: I tensorflow/core/framework/op.cc:132] Op<name=NPolymorphicRestrictOut; signature= -> a:N*T; attr=T:type,allowed=[DT_STRING, DT_BOOL]; attr=N:int,min=2>
2023-01-12 08:11:05.909221: I tensorflow/core/framework/op.cc:132] Op<name=Namespace>TestStringOutput; signature=input:float -> output1:float, output2:string>
2023-01-12 08:11:05.909279: I tensorflow/core/framework/op.cc:132] Op<name=NcclAllReduce; signature=input:T -> data:T; attr=reduction:string,allowed=["min", "max", "prod", "sum"]; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=num_devices:int; attr=shared_name:string; is_stateful=true>
2023-01-12 08:11:05.909415: I tensorflow/core/framework/op.cc:132] Op<name=NcclBroadcast; signature=input:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=shape:shape; is_stateful=true>
2023-01-12 08:11:05.909483: I tensorflow/core/framework/op.cc:132] Op<name=NcclReduce; signature=input:num_devices*T -> data:T; attr=reduction:string,allowed=["min", "max", "prod", "sum"]; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=num_devices:int,min=1; is_stateful=true>
2023-01-12 08:11:05.909535: I tensorflow/core/framework/op.cc:132] Op<name=Ndtri; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:05.909582: I tensorflow/core/framework/op.cc:132] Op<name=NearestNeighbors; signature=points:float, centers:float, k:int64 -> nearest_center_indices:int64, nearest_center_distances:float>
2023-01-12 08:11:05.909683: I tensorflow/core/framework/op.cc:132] Op<name=Neg; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:05.909724: I tensorflow/core/framework/op.cc:132] Op<name=NegTrain; signature=w_in:Ref(float), w_out:Ref(float), examples:int32, labels:int32, lr:float -> ; attr=vocab_count:list(int); attr=num_negative_samples:int; is_stateful=true>
2023-01-12 08:11:05.909777: I tensorflow/core/framework/op.cc:132] Op<name=NextAfter; signature=x1:T, x2:T -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_DOUBLE, DT_FLOAT]>
2023-01-12 08:11:05.909812: I tensorflow/core/framework/op.cc:132] Op<name=NextIteration; signature=data:T -> output:T; attr=T:type>
2023-01-12 08:11:05.909881: I tensorflow/core/framework/op.cc:132] Op<name=NoOp; signature= -> >
2023-01-12 08:11:05.909916: I tensorflow/core/framework/op.cc:132] Op<name=NonDeterministicInts; signature=shape:shape_dtype -> output:dtype; attr=dtype:type,default=DT_INT64; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:05.909981: I tensorflow/core/framework/op.cc:132] Op<name=NonMaxSuppression; signature=boxes:float, scores:float, max_output_size:int32 -> selected_indices:int32; attr=iou_threshold:float,default=0.5>
2023-01-12 08:11:05.910115: I tensorflow/core/framework/op.cc:132] Op<name=NonMaxSuppressionV2; signature=boxes:T, scores:T, max_output_size:int32, iou_threshold:T_threshold -> selected_indices:int32; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]; attr=T_threshold:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.910200: I tensorflow/core/framework/op.cc:132] Op<name=NonMaxSuppressionV3; signature=boxes:T, scores:T, max_output_size:int32, iou_threshold:T_threshold, score_threshold:T_threshold -> selected_indices:int32; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]; attr=T_threshold:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]>
2023-01-12 08:11:05.910285: I tensorflow/core/framework/op.cc:132] Op<name=NonMaxSuppressionV4; signature=boxes:T, scores:T, max_output_size:int32, iou_threshold:T_threshold, score_threshold:T_threshold -> selected_indices:int32, valid_outputs:int32; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]; attr=T_threshold:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]; attr=pad_to_max_output_size:bool,default=false>
2023-01-12 08:11:05.910360: I tensorflow/core/framework/op.cc:132] Op<name=NonMaxSuppressionV5; signature=boxes:T, scores:T, max_output_size:int32, iou_threshold:T, score_threshold:T, soft_nms_sigma:T -> selected_indices:int32, selected_scores:T, valid_outputs:int32; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_FLOAT]; attr=pad_to_max_output_size:bool,default=false>
2023-01-12 08:11:05.910487: I tensorflow/core/framework/op.cc:132] Op<name=NonMaxSuppressionWithOverlaps; signature=overlaps:float, scores:float, max_output_size:int32, overlap_threshold:float, score_threshold:float -> selected_indices:int32>
2023-01-12 08:11:05.910754: I tensorflow/core/framework/op.cc:132] Op<name=NonSerializableDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.910805: I tensorflow/core/framework/op.cc:132] Op<name=None; signature= -> >
2023-01-12 08:11:05.910861: I tensorflow/core/framework/op.cc:132] Op<name=NotEqual; signature=x:T, y:T -> z:bool; attr=T:type; attr=incompatible_shape_error:bool,default=true; is_commutative=true>
2023-01-12 08:11:05.911070: I tensorflow/core/framework/op.cc:132] Op<name=NthElement; signature=input:T, n:int32 -> values:T; attr=reverse:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:05.911230: I tensorflow/core/framework/op.cc:132] Op<name=Old; signature= -> >
2023-01-12 08:11:05.911383: I tensorflow/core/framework/op.cc:132] Op<name=OneHot; signature=indices:TI, depth:int32, on_value:T, off_value:T -> output:T; attr=axis:int,default=-1; attr=T:type; attr=TI:type,default=DT_INT64,allowed=[DT_UINT8, DT_INT8, DT_INT32, DT_INT64]>
2023-01-12 08:11:05.911518: I tensorflow/core/framework/op.cc:132] Op<name=OneShotIterator; signature= -> handle:resource; attr=dataset_factory:func; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:05.911633: I tensorflow/core/framework/op.cc:132] Op<name=OnesLike; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, 4053465685252612840, DT_INT64, DT_UINT64, DT_COMPLEX64, DT_COMPLEX128, DT_BOOL]>
2023-01-12 08:11:05.911728: I tensorflow/core/framework/op.cc:132] Op<name=OpWithDefaultAttr; signature= -> a:int32; attr=default_float:float,default=123>
2023-01-12 08:11:05.911759: I tensorflow/core/framework/op.cc:132] Op<name=OpWithFutureDefaultAttr; signature= -> >
2023-01-12 08:11:05.911807: I tensorflow/core/framework/op.cc:132] Op<name=OptimizeDataset; signature=input_dataset:variant, optimizations:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=optimization_configs:list(string),default=[]>
2023-01-12 08:11:05.911891: I tensorflow/core/framework/op.cc:132] Op<name=OptimizeDatasetV2; signature=input_dataset:variant, optimizations_enabled:string, optimizations_disabled:string, optimizations_default:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=optimization_configs:list(string),default=[]>
2023-01-12 08:11:05.911943: I tensorflow/core/framework/op.cc:132] Op<name=OptionalFromValue; signature=components: -> optional:variant; attr=Toutput_types:list(type),min=1>
2023-01-12 08:11:05.911978: I tensorflow/core/framework/op.cc:132] Op<name=OptionalGetValue; signature=optional:variant -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:05.912010: I tensorflow/core/framework/op.cc:132] Op<name=OptionalHasValue; signature=optional:variant -> has_value:bool>
2023-01-12 08:11:05.912034: I tensorflow/core/framework/op.cc:132] Op<name=OptionalNone; signature= -> optional:variant>
2023-01-12 08:11:05.912065: I tensorflow/core/framework/op.cc:132] Op<name=OptionsDataset; signature=input_dataset:variant -> handle:variant; attr=serialized_options:string; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.293442: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapClear; signature= -> ; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.293724: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapIncompleteSize; signature= -> size:int32; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.293866: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapPeek; signature=key:int64, indices:int32 -> values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.293964: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapSize; signature= -> size:int32; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.294050: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapStage; signature=key:int64, indices:int32, values: -> ; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=fake_dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.294130: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapUnstage; signature=key:int64, indices:int32 -> values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.294210: I tensorflow/core/framework/op.cc:132] Op<name=OrderedMapUnstageNoKey; signature=indices:int32 -> key:int64, values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.294506: I tensorflow/core/framework/op.cc:132] Op<name=OutT; signature= -> a:T; attr=T:type>
2023-01-12 08:11:06.294610: I tensorflow/core/framework/op.cc:132] Op<name=OutTypeList; signature= -> out:; attr=T:list(type),min=0>
2023-01-12 08:11:06.294729: I tensorflow/core/framework/op.cc:132] Op<name=OutTypeListRestrict; signature= -> out:; attr=t:list(type),min=1,allowed=[DT_STRING, DT_BOOL]>
2023-01-12 08:11:06.294945: I tensorflow/core/framework/op.cc:132] Op<name=OutfeedDequeue; signature= -> output:dtype; attr=dtype:type; attr=shape:shape; attr=device_ordinal:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.295265: I tensorflow/core/framework/op.cc:132] Op<name=OutfeedDequeueTuple; signature= -> outputs:; attr=dtypes:list(type),min=1; attr=shapes:list(shape); attr=device_ordinal:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.295379: I tensorflow/core/framework/op.cc:132] Op<name=OutfeedDequeueTupleV2; signature=device_ordinal:int32 -> outputs:; attr=dtypes:list(type),min=1; attr=shapes:list(shape); is_stateful=true>
2023-01-12 08:11:06.295465: I tensorflow/core/framework/op.cc:132] Op<name=OutfeedDequeueV2; signature=device_ordinal:int32 -> output:dtype; attr=dtype:type; attr=shape:shape; is_stateful=true>
2023-01-12 08:11:06.295632: I tensorflow/core/framework/op.cc:132] Op<name=OutfeedEnqueue; signature=input:dtype -> ; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:06.295751: I tensorflow/core/framework/op.cc:132] Op<name=OutfeedEnqueueTuple; signature=inputs: -> ; attr=dtypes:list(type),min=1; is_stateful=true>
2023-01-12 08:11:06.295866: I tensorflow/core/framework/op.cc:132] Op<name=Pack; signature=values:N*T -> output:T; attr=N:int,min=1; attr=T:type; attr=axis:int,default=0>
2023-01-12 08:11:06.296066: I tensorflow/core/framework/op.cc:132] Op<name=Pad; signature=input:T, paddings:Tpaddings -> output:T; attr=T:type; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.296237: I tensorflow/core/framework/op.cc:132] Op<name=PadV2; signature=input:T, paddings:Tpaddings, constant_values:T -> output:T; attr=T:type; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.296371: I tensorflow/core/framework/op.cc:132] Op<name=PaddedBatchDataset; signature=input_dataset:variant, batch_size:int64, padded_shapes:N*int64, padding_values: -> handle:variant; attr=Toutput_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.303816: I tensorflow/core/framework/op.cc:132] Op<name=PaddedBatchDatasetV2; signature=input_dataset:variant, batch_size:int64, padded_shapes:N*int64, padding_values:, drop_remainder:bool -> handle:variant; attr=parallel_copy:bool,default=false; attr=Toutput_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.304006: I tensorflow/core/framework/op.cc:132] Op<name=PaddingFIFOQueue; signature= -> handle:Ref(string); attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.304227: I tensorflow/core/framework/op.cc:132] Op<name=PaddingFIFOQueueV2; signature= -> handle:resource; attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.304359: I tensorflow/core/framework/op.cc:132] Op<name=ParallelBatchDataset; signature=input_dataset:variant, batch_size:int64, num_parallel_calls:int64, drop_remainder:bool -> handle:variant; attr=parallel_copy:bool,default=false; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=deterministic:string,default="default"; attr=metadata:string,default="">
2023-01-12 08:11:06.304535: I tensorflow/core/framework/op.cc:132] Op<name=ParallelConcat; signature=values:N*T -> output:T; attr=N:int,min=1; attr=T:type; attr=shape:shape>
2023-01-12 08:11:06.304686: I tensorflow/core/framework/op.cc:132] Op<name=ParallelDynamicStitch; signature=indices:N*int32, data:N*T -> merged:T; attr=N:int,min=1; attr=T:type>
2023-01-12 08:11:06.304857: I tensorflow/core/framework/op.cc:132] Op<name=ParallelFilterDataset; signature=input_dataset:variant, other_arguments:, num_parallel_calls:int64 -> handle:variant; attr=predicate:func; attr=deterministic:string,default="default"; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.305116: I tensorflow/core/framework/op.cc:132] Op<name=ParallelInterleaveDataset; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64, sloppy:bool, buffer_output_elements:int64, prefetch_input_elements:int64 -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.305299: I tensorflow/core/framework/op.cc:132] Op<name=ParallelInterleaveDatasetV2; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64, num_parallel_calls:int64 -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=sloppy:bool,default=false; attr=metadata:string,default="">
2023-01-12 08:11:06.305479: I tensorflow/core/framework/op.cc:132] Op<name=ParallelInterleaveDatasetV3; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64, num_parallel_calls:int64 -> handle:variant; attr=f:func; attr=deterministic:string,default="default"; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.305670: I tensorflow/core/framework/op.cc:132] Op<name=ParallelInterleaveDatasetV4; signature=input_dataset:variant, other_arguments:, cycle_length:int64, block_length:int64, buffer_output_elements:int64, prefetch_input_elements:int64, num_parallel_calls:int64 -> handle:variant; attr=f:func; attr=deterministic:string,default="default"; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.305843: I tensorflow/core/framework/op.cc:132] Op<name=ParallelMapDataset; signature=input_dataset:variant, other_arguments:, num_parallel_calls:int32 -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_inter_op_parallelism:bool,default=true; attr=sloppy:bool,default=false; attr=preserve_cardinality:bool,default=false; attr=metadata:string,default="">
2023-01-12 08:11:06.305965: I tensorflow/core/framework/op.cc:132] Op<name=ParallelMapDatasetV2; signature=input_dataset:variant, other_arguments:, num_parallel_calls:int64 -> handle:variant; attr=f:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_inter_op_parallelism:bool,default=true; attr=deterministic:string,default="default"; attr=preserve_cardinality:bool,default=false; attr=metadata:string,default="">
2023-01-12 08:11:06.306237: I tensorflow/core/framework/op.cc:132] Op<name=ParameterizedTruncatedNormal; signature=shape:T, means:dtype, stdevs:dtype, minvals:dtype, maxvals:dtype -> output:dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=dtype:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.306498: I tensorflow/core/framework/op.cc:132] Op<name=ParseExample; signature=serialized:string, names:string, sparse_keys:Nsparse*string, dense_keys:Ndense*string, dense_defaults: -> sparse_indices:Nsparse*int64, sparse_values:, sparse_shapes:Nsparse*int64, dense_values:; attr=Nsparse:int,min=0; attr=Ndense:int,min=0; attr=sparse_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tdense:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=dense_shapes:list(shape),min=0>
2023-01-12 08:11:06.306734: I tensorflow/core/framework/op.cc:132] Op<name=ParseExampleDataset; signature=input_dataset:variant, num_parallel_calls:int64, dense_defaults: -> handle:variant; attr=sparse_keys:list(string),min=0; attr=dense_keys:list(string),min=0; attr=sparse_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tdense:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=dense_shapes:list(shape),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=sloppy:bool,default=false; attr=ragged_keys:list(string),default=[],min=0; attr=ragged_value_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=ragged_split_types:list(type),default=[],min=0,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.307152: I tensorflow/core/framework/op.cc:132] Op<name=ParseExampleDatasetV2; signature=input_dataset:variant, num_parallel_calls:int64, dense_defaults: -> handle:variant; attr=sparse_keys:list(string),min=0; attr=dense_keys:list(string),min=0; attr=sparse_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tdense:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=dense_shapes:list(shape),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=deterministic:string,default="default"; attr=ragged_keys:list(string),default=[],min=0; attr=ragged_value_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=ragged_split_types:list(type),default=[],min=0,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.307426: I tensorflow/core/framework/op.cc:132] Op<name=ParseExampleV2; signature=serialized:string, names:string, sparse_keys:string, dense_keys:string, ragged_keys:string, dense_defaults: -> sparse_indices:num_sparse*int64, sparse_values:, sparse_shapes:num_sparse*int64, dense_values:, ragged_values:, ragged_row_splits:; attr=Tdense:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=num_sparse:int,min=0; attr=sparse_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=ragged_value_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=ragged_split_types:list(type),min=0,allowed=[DT_INT32, DT_INT64]; attr=dense_shapes:list(shape),min=0>
2023-01-12 08:11:06.307639: I tensorflow/core/framework/op.cc:132] Op<name=ParseSequenceExample; signature=serialized:string, debug_name:string, context_dense_defaults: -> context_sparse_indices:Ncontext_sparse*int64, context_sparse_values:, context_sparse_shapes:Ncontext_sparse*int64, context_dense_values:, feature_list_sparse_indices:Nfeature_list_sparse*int64, feature_list_sparse_values:, feature_list_sparse_shapes:Nfeature_list_sparse*int64, feature_list_dense_values:, feature_list_dense_lengths:Nfeature_list_dense*int64; attr=feature_list_dense_missing_assumed_empty:list(string),min=0; attr=context_sparse_keys:list(string),min=0; attr=context_dense_keys:list(string),min=0; attr=feature_list_sparse_keys:list(string),min=0; attr=feature_list_dense_keys:list(string),min=0; attr=Ncontext_sparse:int,default=0,min=0; attr=Ncontext_dense:int,default=0,min=0; attr=Nfeature_list_sparse:int,default=0,min=0; attr=Nfeature_list_dense:int,default=0,min=0; attr=context_sparse_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tcontext_dense:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_dense_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=context_dense_shapes:list(shape),default=[],min=0; attr=feature_list_sparse_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_dense_shapes:list(shape),default=[],min=0>
2023-01-12 08:11:06.307948: I tensorflow/core/framework/op.cc:132] Op<name=ParseSequenceExampleV2; signature=serialized:string, debug_name:string, context_sparse_keys:string, context_dense_keys:string, context_ragged_keys:string, feature_list_sparse_keys:string, feature_list_dense_keys:string, feature_list_ragged_keys:string, feature_list_dense_missing_assumed_empty:bool, context_dense_defaults: -> context_sparse_indices:Ncontext_sparse*int64, context_sparse_values:, context_sparse_shapes:Ncontext_sparse*int64, context_dense_values:, context_ragged_values:, context_ragged_row_splits:, feature_list_sparse_indices:Nfeature_list_sparse*int64, feature_list_sparse_values:, feature_list_sparse_shapes:Nfeature_list_sparse*int64, feature_list_dense_values:, feature_list_dense_lengths:Nfeature_list_dense*int64, feature_list_ragged_values:, feature_list_ragged_outer_splits:, feature_list_ragged_inner_splits:; attr=Ncontext_sparse:int,default=0,min=0; attr=Tcontext_dense:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=context_sparse_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=context_ragged_value_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=context_ragged_split_types:list(type),default=[],min=0,allowed=[DT_INT32, DT_INT64]; attr=context_dense_shapes:list(shape),default=[],min=0; attr=Nfeature_list_sparse:int,default=0,min=0; attr=Nfeature_list_dense:int,default=0,min=0; attr=feature_list_dense_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_sparse_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_ragged_value_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_ragged_split_types:list(type),default=[],min=0,allowed=[DT_INT32, DT_INT64]; attr=feature_list_dense_shapes:list(shape),default=[],min=0>
2023-01-12 08:11:06.308163: I tensorflow/core/framework/op.cc:132] Op<name=ParseSingleExample; signature=serialized:string, dense_defaults: -> sparse_indices:num_sparse*int64, sparse_values:, sparse_shapes:num_sparse*int64, dense_values:; attr=num_sparse:int,min=0; attr=sparse_keys:list(string),min=0; attr=dense_keys:list(string),min=0; attr=sparse_types:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tdense:list(type),min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=dense_shapes:list(shape),min=0>
2023-01-12 08:11:06.308292: I tensorflow/core/framework/op.cc:132] Op<name=ParseSingleSequenceExample; signature=serialized:string, feature_list_dense_missing_assumed_empty:string, context_sparse_keys:Ncontext_sparse*string, context_dense_keys:Ncontext_dense*string, feature_list_sparse_keys:Nfeature_list_sparse*string, feature_list_dense_keys:Nfeature_list_dense*string, context_dense_defaults:, debug_name:string -> context_sparse_indices:Ncontext_sparse*int64, context_sparse_values:, context_sparse_shapes:Ncontext_sparse*int64, context_dense_values:, feature_list_sparse_indices:Nfeature_list_sparse*int64, feature_list_sparse_values:, feature_list_sparse_shapes:Nfeature_list_sparse*int64, feature_list_dense_values:; attr=Ncontext_sparse:int,default=0,min=0; attr=Ncontext_dense:int,default=0,min=0; attr=Nfeature_list_sparse:int,default=0,min=0; attr=Nfeature_list_dense:int,default=0,min=0; attr=context_sparse_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=Tcontext_dense:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_dense_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=context_dense_shapes:list(shape),default=[],min=0; attr=feature_list_sparse_types:list(type),default=[],min=0,allowed=[DT_FLOAT, DT_INT64, DT_STRING]; attr=feature_list_dense_shapes:list(shape),default=[],min=0>
2023-01-12 08:11:06.308324: I tensorflow/core/framework/op.cc:132] Op<name=ParseTensor; signature=serialized:string -> output:out_type; attr=out_type:type>
2023-01-12 08:11:06.308350: I tensorflow/core/framework/op.cc:132] Op<name=PartitionedCall; signature=args: -> output:; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=f:func; attr=config:string,default=""; attr=config_proto:string,default=""; attr=executor_type:string,default="">
2023-01-12 08:11:06.308378: I tensorflow/core/framework/op.cc:132] Op<name=Placeholder; signature= -> output:dtype; attr=dtype:type; attr=shape:shape,default=<unknown>>
2023-01-12 08:11:06.308393: I tensorflow/core/framework/op.cc:132] Op<name=PlaceholderV2; signature= -> output:dtype; attr=dtype:type; attr=shape:shape>
2023-01-12 08:11:06.308409: I tensorflow/core/framework/op.cc:132] Op<name=PlaceholderWithDefault; signature=input:dtype -> output:dtype; attr=dtype:type; attr=shape:shape>
2023-01-12 08:11:06.308494: I tensorflow/core/framework/op.cc:132] Op<name=Polygamma; signature=a:T, x:T -> z:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.308543: I tensorflow/core/framework/op.cc:132] Op<name=Polymorphic; signature=a:T -> out:T; attr=T:type>
2023-01-12 08:11:06.308567: I tensorflow/core/framework/op.cc:132] Op<name=PolymorphicDefaultOut; signature= -> out:T; attr=T:type,default=DT_STRING>
2023-01-12 08:11:06.308585: I tensorflow/core/framework/op.cc:132] Op<name=PolymorphicOut; signature= -> out:T; attr=T:type>
2023-01-12 08:11:06.308621: I tensorflow/core/framework/op.cc:132] Op<name=PopulationCount; signature=x:T -> y:uint8; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.308656: I tensorflow/core/framework/op.cc:132] Op<name=Pow; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT, DT_HALF, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.308690: I tensorflow/core/framework/op.cc:132] Op<name=PrefetchDataset; signature=input_dataset:variant, buffer_size:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=slack_period:int,default=0; attr=legacy_autotune:bool,default=true; attr=buffer_size_min:int,default=0; attr=metadata:string,default="">
2023-01-12 08:11:06.308724: I tensorflow/core/framework/op.cc:132] Op<name=Prelinearize; signature=input:dtype -> output:variant; attr=dtype:type; attr=shape:shape,default=[]; attr=layout:list(int),default=[]>
2023-01-12 08:11:06.308749: I tensorflow/core/framework/op.cc:132] Op<name=PrelinearizeTuple; signature=inputs: -> output:variant; attr=dtypes:list(type),min=1; attr=shapes:list(shape); attr=layouts:list(int),default=[]>
2023-01-12 08:11:06.308770: I tensorflow/core/framework/op.cc:132] Op<name=PreventGradient; signature=input:T -> output:T; attr=T:type; attr=message:string,default="">
2023-01-12 08:11:06.308794: I tensorflow/core/framework/op.cc:132] Op<name=Print; signature=input:T, data: -> output:T; attr=T:type; attr=U:list(type),min=0; attr=message:string,default=""; attr=first_n:int,default=-1; attr=summarize:int,default=3; is_stateful=true>
2023-01-12 08:11:06.308817: I tensorflow/core/framework/op.cc:132] Op<name=PrintV2; signature=input:string -> ; attr=output_stream:string,default="stderr"; attr=end:string,default="\n"; is_stateful=true>
2023-01-12 08:11:06.308842: I tensorflow/core/framework/op.cc:132] Op<name=PriorityQueue; signature= -> handle:Ref(string); attr=component_types:list(type),default=[],min=0; attr=shapes:list(shape),min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.308870: I tensorflow/core/framework/op.cc:132] Op<name=PriorityQueueV2; signature= -> handle:resource; attr=component_types:list(type),default=[],min=0; attr=shapes:list(shape),min=0; attr=capacity:int,default=-1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.308893: I tensorflow/core/framework/op.cc:132] Op<name=PrivateThreadPoolDataset; signature=input_dataset:variant, num_threads:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.308968: I tensorflow/core/framework/op.cc:132] Op<name=Prod; signature=input:T, reduction_indices:Tidx -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.309051: I tensorflow/core/framework/op.cc:132] Op<name=PyFunc; signature=input: -> output:; attr=token:string; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; is_stateful=true>
2023-01-12 08:11:06.309141: I tensorflow/core/framework/op.cc:132] Op<name=PyFuncStateless; signature=input: -> output:; attr=token:string; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0>
2023-01-12 08:11:06.309191: I tensorflow/core/framework/op.cc:132] Op<name=Qr; signature=input:T -> q:T, r:T; attr=full_matrices:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.310194: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeAndDequantize; signature=input:T -> output:T; attr=signed_input:bool,default=true; attr=num_bits:int,default=8; attr=range_given:bool,default=false; attr=input_min:float,default=0; attr=input_max:float,default=0; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.311047: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeAndDequantizeV2; signature=input:T, input_min:T, input_max:T -> output:T; attr=signed_input:bool,default=true; attr=num_bits:int,default=8; attr=range_given:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=round_mode:string,default="HALF_TO_EVEN",allowed=["HALF_TO_EVEN", "HALF_UP"]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1>
2023-01-12 08:11:06.311138: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeAndDequantizeV3; signature=input:T, input_min:T, input_max:T, num_bits:int32 -> output:T; attr=signed_input:bool,default=true; attr=range_given:bool,default=true; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1>
2023-01-12 08:11:06.311190: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeAndDequantizeV4; signature=input:T, input_min:T, input_max:T -> output:T; attr=signed_input:bool,default=true; attr=num_bits:int,default=8; attr=range_given:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=round_mode:string,default="HALF_TO_EVEN",allowed=["HALF_TO_EVEN", "HALF_UP"]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1>
2023-01-12 08:11:06.311331: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeAndDequantizeV4Grad; signature=gradients:T, input:T, input_min:T, input_max:T -> input_backprop:T, input_min_backprop:T, input_max_backprop:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=axis:int,default=-1>
2023-01-12 08:11:06.311445: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeDownAndShrinkRange; signature=input:Tinput, input_min:float, input_max:float -> output:out_type, output_min:float, output_max:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.311549: I tensorflow/core/framework/op.cc:132] Op<name=QuantizeV2; signature=input:float, min_range:float, max_range:float -> output:T, output_min:float, output_max:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=mode:string,default="MIN_COMBINED",allowed=["MIN_COMBINED", "MIN_FIRST", "SCALED"]; attr=round_mode:string,default="HALF_AWAY_FROM_ZERO",allowed=["HALF_AWAY_FROM_ZERO", "HALF_TO_EVEN"]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1; attr=ensure_minimum_range:float,default=0.01>
2023-01-12 08:11:06.311685: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedAdd; signature=x:T1, y:T2, min_x:float, max_x:float, min_y:float, max_y:float -> z:Toutput, min_z:float, max_z:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.311805: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedAvgPool; signature=input:T, min_input:float, max_input:float -> output:T, min_output:float, max_output:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=ksize:list(int); attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:06.311927: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedBatchNormWithGlobalNormalization; signature=t:Tinput, t_min:float, t_max:float, m:Tinput, m_min:float, m_max:float, v:Tinput, v_min:float, v_max:float, beta:Tinput, beta_min:float, beta_max:float, gamma:Tinput, gamma_min:float, gamma_max:float -> result:out_type, result_min:float, result_max:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=variance_epsilon:float; attr=scale_after_normalization:bool>
2023-01-12 08:11:06.312125: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedBiasAdd; signature=input:T1, bias:T2, min_input:float, max_input:float, min_bias:float, max_bias:float -> output:out_type, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.312234: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConcat; signature=concat_dim:int32, values:N*T, input_mins:N*float, input_maxes:N*float -> output:T, output_min:float, output_max:float; attr=N:int,min=2; attr=T:type>
2023-01-12 08:11:06.312274: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConcatV2; signature=values:N*T, axis:Tidx, input_mins:N*float, input_maxes:N*float -> output:T, output_min:float, output_max:float; attr=N:int,min=2; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.312326: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2D; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:06.312406: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DAndRelu; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.312472: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.312742: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DAndRequantize; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.312861: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DPerChannel; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:06.313004: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBias; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.313135: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBiasAndRelu; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.313441: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBiasAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.314504: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBiasAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=out_type:type,default=DT_QINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.314639: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBiasSignedSumAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float, summand:Tsummand, min_summand:float, max_summand:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Tsummand:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.314994: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBiasSumAndRelu; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float, summand:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.315213: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedConv2DWithBiasSumAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float, summand:Tsummand, min_summand:float, max_summand:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Tsummand:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.315386: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedDepthwiseConv2D; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:06.315531: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedDepthwiseConv2DWithBias; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:06.315803: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedDepthwiseConv2DWithBiasAndRelu; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.315955: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:06.316220: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedInstanceNorm; signature=x:T, x_min:float, x_max:float -> y:T, y_min:float, y_max:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=output_range_given:bool,default=false; attr=given_y_min:float,default=0; attr=given_y_max:float,default=0; attr=variance_epsilon:float,default=1e-05; attr=min_separation:float,default=0.001>
2023-01-12 08:11:06.316376: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMatMul; signature=a:T1, b:T2, min_a:float, max_a:float, min_b:float, max_b:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=Tactivation:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.316530: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMatMulWithBias; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]>
2023-01-12 08:11:06.316700: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMatMulWithBiasAndDequantize; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float, min_freezed_output:float, max_freezed_output:float -> out:Toutput; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,allowed=[DT_FLOAT]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]>
2023-01-12 08:11:06.317004: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMatMulWithBiasAndRelu; signature=a:T1, b:T2, bias:float, min_a:float, max_a:float, min_b:float, max_b:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]>
2023-01-12 08:11:06.317527: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMatMulWithBiasAndReluAndRequantize; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float, min_freezed_output:float, max_freezed_output:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]>
2023-01-12 08:11:06.318033: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMatMulWithBiasAndRequantize; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float, min_freezed_output:float, max_freezed_output:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]>
2023-01-12 08:11:06.318108: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMaxPool; signature=input:T, min_input:float, max_input:float -> output:T, min_output:float, max_output:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=ksize:list(int); attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:06.318158: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedMul; signature=x:T1, y:T2, min_x:float, max_x:float, min_y:float, max_y:float -> z:Toutput, min_z:float, max_z:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.318201: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedRelu; signature=features:Tinput, min_features:float, max_features:float -> activations:out_type, min_activations:float, max_activations:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.318246: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedRelu6; signature=features:Tinput, min_features:float, max_features:float -> activations:out_type, min_activations:float, max_activations:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.318329: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedReluX; signature=features:Tinput, max_value:float, min_features:float, max_features:float -> activations:out_type, min_activations:float, max_activations:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.318369: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedReshape; signature=tensor:T, shape:Tshape, input_min:float, input_max:float -> output:T, output_min:float, output_max:float; attr=T:type; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.318408: I tensorflow/core/framework/op.cc:132] Op<name=QuantizedResizeBilinear; signature=images:T, size:int32, min:float, max:float -> resized_images:T, out_min:float, out_max:float; attr=T:type,allowed=[DT_QUINT8, DT_QINT32, DT_FLOAT]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.318434: I tensorflow/core/framework/op.cc:132] Op<name=QueueClose; signature=handle:Ref(string) -> ; attr=cancel_pending_enqueues:bool,default=false>
2023-01-12 08:11:06.318455: I tensorflow/core/framework/op.cc:132] Op<name=QueueCloseV2; signature=handle:resource -> ; attr=cancel_pending_enqueues:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.318480: I tensorflow/core/framework/op.cc:132] Op<name=QueueDequeue; signature=handle:Ref(string) -> components:; attr=component_types:list(type),min=1; attr=timeout_ms:int,default=-1>
2023-01-12 08:11:06.318508: I tensorflow/core/framework/op.cc:132] Op<name=QueueDequeueMany; signature=handle:Ref(string), n:int32 -> components:; attr=component_types:list(type),min=1; attr=timeout_ms:int,default=-1>
2023-01-12 08:11:06.318573: I tensorflow/core/framework/op.cc:132] Op<name=QueueDequeueManyV2; signature=handle:resource, n:int32 -> components:; attr=component_types:list(type),min=1; attr=timeout_ms:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.318622: I tensorflow/core/framework/op.cc:132] Op<name=QueueDequeueUpTo; signature=handle:Ref(string), n:int32 -> components:; attr=component_types:list(type),min=1; attr=timeout_ms:int,default=-1>
2023-01-12 08:11:06.318655: I tensorflow/core/framework/op.cc:132] Op<name=QueueDequeueUpToV2; signature=handle:resource, n:int32 -> components:; attr=component_types:list(type),min=1; attr=timeout_ms:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.318698: I tensorflow/core/framework/op.cc:132] Op<name=QueueDequeueV2; signature=handle:resource -> components:; attr=component_types:list(type),min=1; attr=timeout_ms:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.318753: I tensorflow/core/framework/op.cc:132] Op<name=QueueEnqueue; signature=handle:Ref(string), components: -> ; attr=Tcomponents:list(type),min=1; attr=timeout_ms:int,default=-1>
2023-01-12 08:11:06.318807: I tensorflow/core/framework/op.cc:132] Op<name=QueueEnqueueMany; signature=handle:Ref(string), components: -> ; attr=Tcomponents:list(type),min=1; attr=timeout_ms:int,default=-1>
2023-01-12 08:11:06.318879: I tensorflow/core/framework/op.cc:132] Op<name=QueueEnqueueManyV2; signature=handle:resource, components: -> ; attr=Tcomponents:list(type),min=1; attr=timeout_ms:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.318946: I tensorflow/core/framework/op.cc:132] Op<name=QueueEnqueueV2; signature=handle:resource, components: -> ; attr=Tcomponents:list(type),min=1; attr=timeout_ms:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.319081: I tensorflow/core/framework/op.cc:132] Op<name=QueueIsClosed; signature=handle:Ref(string) -> is_closed:bool>
2023-01-12 08:11:06.319139: I tensorflow/core/framework/op.cc:132] Op<name=QueueIsClosedV2; signature=handle:resource -> is_closed:bool; is_stateful=true>
2023-01-12 08:11:06.319189: I tensorflow/core/framework/op.cc:132] Op<name=QueueSize; signature=handle:Ref(string) -> size:int32>
2023-01-12 08:11:06.319234: I tensorflow/core/framework/op.cc:132] Op<name=QueueSizeV2; signature=handle:resource -> size:int32; is_stateful=true>
2023-01-12 08:11:06.319300: I tensorflow/core/framework/op.cc:132] Op<name=RFFT; signature=input:Treal, fft_length:int32 -> output:Tcomplex; attr=Treal:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.319394: I tensorflow/core/framework/op.cc:132] Op<name=RFFT2D; signature=input:Treal, fft_length:int32 -> output:Tcomplex; attr=Treal:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.319885: I tensorflow/core/framework/op.cc:132] Op<name=RFFT3D; signature=input:Treal, fft_length:int32 -> output:Tcomplex; attr=Treal:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.319965: I tensorflow/core/framework/op.cc:132] Op<name=RGBToHSV; signature=images:T -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.320018: I tensorflow/core/framework/op.cc:132] Op<name=RaggedBincount; signature=splits:int64, values:Tidx, size:Tidx, weights:T -> output:T; attr=Tidx:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]; attr=binary_output:bool,default=false>
2023-01-12 08:11:06.320138: I tensorflow/core/framework/op.cc:132] Op<name=RaggedCountSparseOutput; signature=splits:int64, values:T, weights:output_type -> output_indices:int64, output_values:output_type, output_dense_shape:int64; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=minlength:int,default=-1,min=-1; attr=maxlength:int,default=-1,min=-1; attr=binary_output:bool; attr=output_type:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.320250: I tensorflow/core/framework/op.cc:132] Op<name=RaggedCross; signature=ragged_values:, ragged_row_splits:, sparse_indices:Nsparse*int64, sparse_values:, sparse_shape:Nsparse*int64, dense_inputs: -> output_values:out_values_type, output_row_splits:out_row_splits_type; attr=Nsparse:int,min=0; attr=input_order:string; attr=hashed_output:bool; attr=num_buckets:int,min=0; attr=hash_key:int; attr=ragged_values_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=ragged_splits_types:list(type),min=0,allowed=[DT_INT32, DT_INT64]; attr=sparse_values_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=dense_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=out_values_type:type,allowed=[DT_INT64, DT_STRING]; attr=out_row_splits_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.320334: I tensorflow/core/framework/op.cc:132] Op<name=RaggedGather; signature=params_nested_splits:PARAMS_RAGGED_RANK*Tsplits, params_dense_values:Tvalues, indices:Tindices -> output_nested_splits:OUTPUT_RAGGED_RANK*Tsplits, output_dense_values:Tvalues; attr=Tvalues:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=PARAMS_RAGGED_RANK:int,min=1; attr=OUTPUT_RAGGED_RANK:int,min=0>
2023-01-12 08:11:06.320408: I tensorflow/core/framework/op.cc:132] Op<name=RaggedRange; signature=starts:T, limits:T, deltas:T -> rt_nested_splits:Tsplits, rt_dense_values:T; attr=T:type,default=DT_INT32,allowed=[DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.320486: I tensorflow/core/framework/op.cc:132] Op<name=RaggedTensorFromVariant; signature=encoded_ragged:variant -> output_nested_splits:output_ragged_rank*Tsplits, output_dense_values:Tvalues; attr=input_ragged_rank:int,min=-1; attr=output_ragged_rank:int,min=0; attr=Tvalues:type; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.320559: I tensorflow/core/framework/op.cc:132] Op<name=RaggedTensorToSparse; signature=rt_nested_splits:RAGGED_RANK*Tsplits, rt_dense_values:T -> sparse_indices:int64, sparse_values:T, sparse_dense_shape:int64; attr=RAGGED_RANK:int,min=1; attr=T:type; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.320781: I tensorflow/core/framework/op.cc:132] Op<name=RaggedTensorToTensor; signature=shape:Tshape, values:T, default_value:T, row_partition_tensors:num_row_partition_tensors*Tindex -> result:T; attr=T:type; attr=Tindex:type,allowed=[DT_INT64, DT_INT32]; attr=Tshape:type,allowed=[DT_INT64, DT_INT32]; attr=num_row_partition_tensors:int,min=1; attr=row_partition_types:list(string)>
2023-01-12 08:11:06.320891: I tensorflow/core/framework/op.cc:132] Op<name=RaggedTensorToVariant; signature=rt_nested_splits:RAGGED_RANK*Tsplits, rt_dense_values:Tvalues -> encoded_ragged:variant; attr=RAGGED_RANK:int,min=0; attr=Tvalues:type; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=batched_input:bool>
2023-01-12 08:11:06.320973: I tensorflow/core/framework/op.cc:132] Op<name=RaggedTensorToVariantGradient; signature=encoded_ragged_grad:variant, row_splits:Tsplits, dense_values_shape:int32 -> dense_values_grad:Tvalues; attr=Tvalues:type; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.321041: I tensorflow/core/framework/op.cc:132] Op<name=RandomCrop; signature=image:T, size:int64 -> output:T; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:06.321409: I tensorflow/core/framework/op.cc:132] Op<name=RandomDataset; signature=seed:int64, seed2:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.321596: I tensorflow/core/framework/op.cc:132] Op<name=RandomGamma; signature=shape:S, alpha:T -> output:T; attr=seed:int,default=0; attr=seed2:int,default=0; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; is_stateful=true>
2023-01-12 08:11:06.321664: I tensorflow/core/framework/op.cc:132] Op<name=RandomGammaGrad; signature=alpha:T, sample:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.321719: I tensorflow/core/framework/op.cc:132] Op<name=RandomIndexShuffle; signature=index:dtype, seed:Tseed, max_index:dtype -> output:dtype; attr=rounds:int,default=4; attr=dtype:type,allowed=[DT_INT32, DT_UINT32, DT_INT64, DT_UINT64]; attr=Tseed:type,allowed=[DT_INT32, DT_UINT32, DT_INT64, DT_UINT64]>
2023-01-12 08:11:06.321754: I tensorflow/core/framework/op.cc:132] Op<name=RandomPoisson; signature=shape:S, rate:dtype -> output:dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=dtype:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; is_stateful=true>
2023-01-12 08:11:06.321823: I tensorflow/core/framework/op.cc:132] Op<name=RandomPoissonV2; signature=shape:S, rate:R -> output:dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=R:type,default=DT_DOUBLE,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=dtype:type,default=DT_INT64,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.321905: I tensorflow/core/framework/op.cc:132] Op<name=RandomShuffle; signature=value:T -> output:T; attr=seed:int,default=0; attr=seed2:int,default=0; attr=T:type; is_stateful=true>
2023-01-12 08:11:06.322032: I tensorflow/core/framework/op.cc:132] Op<name=RandomShuffleQueue; signature= -> handle:Ref(string); attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=min_after_dequeue:int,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.322267: I tensorflow/core/framework/op.cc:132] Op<name=RandomShuffleQueueV2; signature= -> handle:resource; attr=component_types:list(type),min=1; attr=shapes:list(shape),default=[],min=0; attr=capacity:int,default=-1; attr=min_after_dequeue:int,default=0; attr=seed:int,default=0; attr=seed2:int,default=0; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.322430: I tensorflow/core/framework/op.cc:132] Op<name=RandomStandardNormal; signature=shape:T -> output:dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=dtype:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.322683: I tensorflow/core/framework/op.cc:132] Op<name=RandomUniform; signature=shape:T -> output:dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=dtype:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.322801: I tensorflow/core/framework/op.cc:132] Op<name=RandomUniformInt; signature=shape:T, minval:Tout, maxval:Tout -> output:Tout; attr=seed:int,default=0; attr=seed2:int,default=0; attr=Tout:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.322972: I tensorflow/core/framework/op.cc:132] Op<name=Range; signature=start:Tidx, limit:Tidx, delta:Tidx -> output:Tidx; attr=Tidx:type,default=DT_INT32,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT16, DT_UINT32]>
2023-01-12 08:11:06.326625: I tensorflow/core/framework/op.cc:132] Op<name=RangeDataset; signature=start:int64, stop:int64, step:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; attr=replicate_on_split:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.326762: I tensorflow/core/framework/op.cc:132] Op<name=Rank; signature=input:T -> output:int32; attr=T:type>
2023-01-12 08:11:06.326807: I tensorflow/core/framework/op.cc:132] Op<name=ReadFile; signature=filename:string -> contents:string>
2023-01-12 08:11:06.326839: I tensorflow/core/framework/op.cc:132] Op<name=ReadVariableOp; signature=resource:resource -> value:dtype; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:06.326880: I tensorflow/core/framework/op.cc:132] Op<name=ReadVariableXlaSplitND; signature=resource:resource -> outputs:N*T; attr=T:type; attr=N:int,min=1; attr=num_splits:list(int); attr=paddings:list(int),default=[]; is_stateful=true>
2023-01-12 08:11:06.326924: I tensorflow/core/framework/op.cc:132] Op<name=ReaderNumRecordsProduced; signature=reader_handle:Ref(string) -> records_produced:int64>
2023-01-12 08:11:06.326971: I tensorflow/core/framework/op.cc:132] Op<name=ReaderNumRecordsProducedV2; signature=reader_handle:resource -> records_produced:int64; is_stateful=true>
2023-01-12 08:11:06.327034: I tensorflow/core/framework/op.cc:132] Op<name=ReaderNumWorkUnitsCompleted; signature=reader_handle:Ref(string) -> units_completed:int64>
2023-01-12 08:11:06.327123: I tensorflow/core/framework/op.cc:132] Op<name=ReaderNumWorkUnitsCompletedV2; signature=reader_handle:resource -> units_completed:int64; is_stateful=true>
2023-01-12 08:11:06.327215: I tensorflow/core/framework/op.cc:132] Op<name=ReaderRead; signature=reader_handle:Ref(string), queue_handle:Ref(string) -> key:string, value:string>
2023-01-12 08:11:06.327261: I tensorflow/core/framework/op.cc:132] Op<name=ReaderReadUpTo; signature=reader_handle:Ref(string), queue_handle:Ref(string), num_records:int64 -> keys:string, values:string>
2023-01-12 08:11:06.327307: I tensorflow/core/framework/op.cc:132] Op<name=ReaderReadUpToV2; signature=reader_handle:resource, queue_handle:resource, num_records:int64 -> keys:string, values:string; is_stateful=true>
2023-01-12 08:11:06.327347: I tensorflow/core/framework/op.cc:132] Op<name=ReaderReadV2; signature=reader_handle:resource, queue_handle:resource -> key:string, value:string; is_stateful=true>
2023-01-12 08:11:06.327378: I tensorflow/core/framework/op.cc:132] Op<name=ReaderReset; signature=reader_handle:Ref(string) -> >
2023-01-12 08:11:06.327427: I tensorflow/core/framework/op.cc:132] Op<name=ReaderResetV2; signature=reader_handle:resource -> ; is_stateful=true>
2023-01-12 08:11:06.327568: I tensorflow/core/framework/op.cc:132] Op<name=ReaderRestoreState; signature=reader_handle:Ref(string), state:string -> >
2023-01-12 08:11:06.327625: I tensorflow/core/framework/op.cc:132] Op<name=ReaderRestoreStateV2; signature=reader_handle:resource, state:string -> ; is_stateful=true>
2023-01-12 08:11:06.327658: I tensorflow/core/framework/op.cc:132] Op<name=ReaderSerializeState; signature=reader_handle:Ref(string) -> state:string>
2023-01-12 08:11:06.327684: I tensorflow/core/framework/op.cc:132] Op<name=ReaderSerializeStateV2; signature=reader_handle:resource -> state:string; is_stateful=true>
2023-01-12 08:11:06.327734: I tensorflow/core/framework/op.cc:132] Op<name=Real; signature=input:T -> output:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.327779: I tensorflow/core/framework/op.cc:132] Op<name=RealDiv; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_UINT32, DT_UINT64, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.335643: I tensorflow/core/framework/op.cc:132] Op<name=RebatchDataset; signature=input_dataset:variant, num_replicas:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_fallback:bool,default=true>
2023-01-12 08:11:06.335729: I tensorflow/core/framework/op.cc:132] Op<name=RebatchDatasetV2; signature=input_dataset:variant, batch_sizes:int64, drop_remainder:bool -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.335804: I tensorflow/core/framework/op.cc:132] Op<name=Reciprocal; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.335947: I tensorflow/core/framework/op.cc:132] Op<name=ReciprocalGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.336113: I tensorflow/core/framework/op.cc:132] Op<name=RecordInput; signature= -> records:string; attr=file_pattern:string; attr=file_random_seed:int,default=301; attr=file_shuffle_shift_ratio:float,default=0; attr=file_buffer_size:int,default=10000; attr=file_parallelism:int,default=16; attr=batch_size:int,default=32; attr=compression_type:string,default=""; is_stateful=true>
2023-01-12 08:11:06.336253: I tensorflow/core/framework/op.cc:132] Op<name=Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:06.336315: I tensorflow/core/framework/op.cc:132] Op<name=RecvTPUEmbeddingActivations; signature= -> outputs:num_outputs*float; attr=num_outputs:int,min=1; attr=config:string; is_stateful=true>
2023-01-12 08:11:06.336366: I tensorflow/core/framework/op.cc:132] Op<name=ReduceDataset; signature=input_dataset:variant, initial_state:, other_arguments: -> components:; attr=f:func; attr=Tstate:list(type),min=1; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=use_inter_op_parallelism:bool,default=true; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.336410: I tensorflow/core/framework/op.cc:132] Op<name=ReduceJoin; signature=inputs:string, reduction_indices:int32 -> output:string; attr=keep_dims:bool,default=false; attr=separator:string,default="">
2023-01-12 08:11:06.336449: I tensorflow/core/framework/op.cc:132] Op<name=RefEnter; signature=data:Ref(T) -> output:Ref(T); attr=T:type; attr=frame_name:string; attr=is_constant:bool,default=false; attr=parallel_iterations:int,default=10>
2023-01-12 08:11:06.336481: I tensorflow/core/framework/op.cc:132] Op<name=RefExit; signature=data:Ref(T) -> output:Ref(T); attr=T:type>
2023-01-12 08:11:06.336515: I tensorflow/core/framework/op.cc:132] Op<name=RefIdentity; signature=input:Ref(T) -> output:Ref(T); attr=T:type; allows_uninitialized_input=true>
2023-01-12 08:11:06.336621: I tensorflow/core/framework/op.cc:132] Op<name=RefIn; signature=a:Ref(T) -> ; attr=T:type>
2023-01-12 08:11:06.336917: I tensorflow/core/framework/op.cc:132] Op<name=RefInputFloatInput; signature=a:Ref(float), b:float -> >
2023-01-12 08:11:06.337012: I tensorflow/core/framework/op.cc:132] Op<name=RefInputFloatInputIntOutput; signature=a:Ref(float), b:float -> c:int32>
2023-01-12 08:11:06.337073: I tensorflow/core/framework/op.cc:132] Op<name=RefInputIntInput; signature=a:Ref(int32), b:int32 -> >
2023-01-12 08:11:06.337148: I tensorflow/core/framework/op.cc:132] Op<name=RefMerge; signature=inputs:Ref(N*T) -> output:Ref(T), value_index:int32; attr=T:type; attr=N:int,min=1>
2023-01-12 08:11:06.337239: I tensorflow/core/framework/op.cc:132] Op<name=RefNextIteration; signature=data:Ref(T) -> output:Ref(T); attr=T:type>
2023-01-12 08:11:06.337286: I tensorflow/core/framework/op.cc:132] Op<name=RefOut; signature= -> a:Ref(T); attr=T:type>
2023-01-12 08:11:06.337413: I tensorflow/core/framework/op.cc:132] Op<name=RefOutput; signature= -> a:Ref(int32)>
2023-01-12 08:11:06.340734: I tensorflow/core/framework/op.cc:132] Op<name=RefOutputFloatOutput; signature= -> a:Ref(float), b:float>
2023-01-12 08:11:06.340830: I tensorflow/core/framework/op.cc:132] Op<name=RefSelect; signature=index:int32, inputs:Ref(N*T) -> output:Ref(T); attr=T:type; attr=N:int,min=1>
2023-01-12 08:11:06.340866: I tensorflow/core/framework/op.cc:132] Op<name=RefSwitch; signature=data:Ref(T), pred:bool -> output_false:Ref(T), output_true:Ref(T); attr=T:type; allows_uninitialized_input=true>
2023-01-12 08:11:06.340893: I tensorflow/core/framework/op.cc:132] Op<name=RegexFullMatch; signature=input:string, pattern:string -> output:bool>
2023-01-12 08:11:06.340980: I tensorflow/core/framework/op.cc:132] Op<name=RegexReplace; signature=input:string, pattern:string, rewrite:string -> output:string; attr=replace_global:bool,default=true>
2023-01-12 08:11:06.341114: I tensorflow/core/framework/op.cc:132] Op<name=RegisterDataset; signature=dataset:variant, address:string, protocol:string -> dataset_id:int64; attr=external_state_policy:int; attr=element_spec:string,default=""; attr=metadata:string,default="">
2023-01-12 08:11:06.341191: I tensorflow/core/framework/op.cc:132] Op<name=RegisterDatasetV2; signature=dataset:variant, address:string, protocol:string -> dataset_id:string; attr=external_state_policy:int; attr=element_spec:string,default=""; attr=requested_dataset_id:string,default=""; attr=metadata:string,default="">
2023-01-12 08:11:06.341370: I tensorflow/core/framework/op.cc:132] Op<name=Relayout; signature=input:T -> output:T; attr=layout:string; attr=T:type>
2023-01-12 08:11:06.341434: I tensorflow/core/framework/op.cc:132] Op<name=Relu; signature=features:T -> activations:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64, DT_QINT8]>
2023-01-12 08:11:06.341541: I tensorflow/core/framework/op.cc:132] Op<name=Relu6; signature=features:T -> activations:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.341601: I tensorflow/core/framework/op.cc:132] Op<name=Relu6Grad; signature=gradients:T, features:T -> backprops:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.341652: I tensorflow/core/framework/op.cc:132] Op<name=ReluGrad; signature=gradients:T, features:T -> backprops:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.341685: I tensorflow/core/framework/op.cc:132] Op<name=RemoteCall; signature=target:string, args: -> output:; attr=Tin:list(type),min=1; attr=Tout:list(type),min=1; attr=f:func; is_stateful=true>
2023-01-12 08:11:06.341718: I tensorflow/core/framework/op.cc:132] Op<name=RepeatDataset; signature=input_dataset:variant, count:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.341811: I tensorflow/core/framework/op.cc:132] Op<name=RequantizationRange; signature=input:Tinput, input_min:float, input_max:float -> output_min:float, output_max:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.341872: I tensorflow/core/framework/op.cc:132] Op<name=RequantizationRangePerChannel; signature=input:T, input_min:float, input_max:float -> output_min:float, output_max:float; attr=T:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=clip_value_max:float>
2023-01-12 08:11:06.341969: I tensorflow/core/framework/op.cc:132] Op<name=Requantize; signature=input:Tinput, input_min:float, input_max:float, requested_output_min:float, requested_output_max:float -> output:out_type, output_min:float, output_max:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.342035: I tensorflow/core/framework/op.cc:132] Op<name=RequantizePerChannel; signature=input:T, input_min:float, input_max:float, requested_output_min:float, requested_output_max:float -> output:out_type, output_min:float, output_max:float; attr=T:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]>
2023-01-12 08:11:06.342076: I tensorflow/core/framework/op.cc:132] Op<name=RequiresOlderGraphVersion; signature= -> version:int32; is_stateful=true>
2023-01-12 08:11:06.342107: I tensorflow/core/framework/op.cc:132] Op<name=ReservedAttr; signature= -> ; attr=range:int>
2023-01-12 08:11:06.342135: I tensorflow/core/framework/op.cc:132] Op<name=ReservedInput; signature=input:int32 -> >
2023-01-12 08:11:06.342272: I tensorflow/core/framework/op.cc:132] Op<name=Reshape; signature=tensor:T, shape:Tshape -> output:T; attr=T:type; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.342334: I tensorflow/core/framework/op.cc:132] Op<name=ResizeArea; signature=images:T, size:int32 -> resized_images:float; attr=T:type,allowed=[DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_BFLOAT16]; attr=align_corners:bool,default=false>
2023-01-12 08:11:06.342378: I tensorflow/core/framework/op.cc:132] Op<name=ResizeBicubic; signature=images:T, size:int32 -> resized_images:float; attr=T:type,allowed=[DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_BFLOAT16]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.342418: I tensorflow/core/framework/op.cc:132] Op<name=ResizeBicubicGrad; signature=grads:float, original_image:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.342461: I tensorflow/core/framework/op.cc:132] Op<name=ResizeBilinear; signature=images:T, size:int32 -> resized_images:float; attr=T:type,allowed=[DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_INT64, DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_BFLOAT16]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.342501: I tensorflow/core/framework/op.cc:132] Op<name=ResizeBilinearGrad; signature=grads:float, original_image:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_BFLOAT16, DT_HALF, DT_DOUBLE]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.342613: I tensorflow/core/framework/op.cc:132] Op<name=ResizeNearestNeighbor; signature=images:T, size:int32 -> resized_images:T; attr=T:type,allowed=[DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_INT64, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_BFLOAT16]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.342691: I tensorflow/core/framework/op.cc:132] Op<name=ResizeNearestNeighborGrad; signature=grads:T, size:int32 -> output:T; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_INT32, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_BFLOAT16]; attr=align_corners:bool,default=false; attr=half_pixel_centers:bool,default=false>
2023-01-12 08:11:06.342787: I tensorflow/core/framework/op.cc:132] Op<name=ResourceAccumulatorApplyGradient; signature=handle:resource, local_step:int64, gradient:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; is_stateful=true>
2023-01-12 08:11:06.342847: I tensorflow/core/framework/op.cc:132] Op<name=ResourceAccumulatorNumAccumulated; signature=handle:resource -> num_accumulated:int32; is_stateful=true>
2023-01-12 08:11:06.342907: I tensorflow/core/framework/op.cc:132] Op<name=ResourceAccumulatorSetGlobalStep; signature=handle:resource, new_global_step:int64 -> ; is_stateful=true>
2023-01-12 08:11:06.342959: I tensorflow/core/framework/op.cc:132] Op<name=ResourceAccumulatorTakeGradient; signature=handle:resource, num_required:int32 -> average:dtype; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; is_stateful=true>
2023-01-12 08:11:06.343090: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdaMax; signature=var:resource, m:resource, v:resource, beta1_power:T, lr:T, beta1:T, beta2:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.343247: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdadelta; signature=var:resource, accum:resource, accum_update:resource, lr:T, rho:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.343452: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdagrad; signature=var:resource, accum:resource, lr:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.343834: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdagradDA; signature=var:resource, gradient_accumulator:resource, gradient_squared_accumulator:resource, grad:T, lr:T, l1:T, l2:T, global_step:int64 -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.344035: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdagradV2; signature=var:resource, accum:resource, lr:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.344218: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdam; signature=var:resource, m:resource, v:resource, beta1_power:T, beta2_power:T, lr:T, beta1:T, beta2:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.344360: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAdamWithAmsgrad; signature=var:resource, m:resource, v:resource, vhat:resource, beta1_power:T, beta2_power:T, lr:T, beta1:T, beta2:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.344671: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyAddSign; signature=var:resource, m:resource, lr:T, alpha:T, sign_decay:T, beta:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.344890: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyCenteredRMSProp; signature=var:resource, mg:resource, ms:resource, mom:resource, lr:T, rho:T, momentum:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345013: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyFtrl; signature=var:resource, accum:resource, linear:resource, grad:T, lr:T, l1:T, l2:T, lr_power:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345117: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyFtrlV2; signature=var:resource, accum:resource, linear:resource, grad:T, lr:T, l1:T, l2:T, l2_shrinkage:T, lr_power:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345206: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyGradientDescent; signature=var:resource, alpha:T, delta:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345291: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyKerasMomentum; signature=var:resource, accum:resource, lr:T, grad:T, momentum:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345517: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyMomentum; signature=var:resource, accum:resource, lr:T, grad:T, momentum:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345682: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyPowerSign; signature=var:resource, m:resource, lr:T, logbase:T, sign_decay:T, beta:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.345870: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyProximalAdagrad; signature=var:resource, accum:resource, lr:T, l1:T, l2:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.346026: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyProximalGradientDescent; signature=var:resource, alpha:T, l1:T, l2:T, delta:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.346109: I tensorflow/core/framework/op.cc:132] Op<name=ResourceApplyRMSProp; signature=var:resource, ms:resource, mom:resource, lr:T, rho:T, momentum:T, epsilon:T, grad:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.346211: I tensorflow/core/framework/op.cc:132] Op<name=ResourceConditionalAccumulator; signature= -> handle:resource; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=shape:shape; attr=container:string,default=""; attr=shared_name:string,default=""; attr=reduction_type:string,default="MEAN",allowed=["MEAN", "SUM"]; is_stateful=true>
2023-01-12 08:11:06.346280: I tensorflow/core/framework/op.cc:132] Op<name=ResourceCountUpTo; signature=resource:resource -> output:T; attr=limit:int; attr=T:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.346310: I tensorflow/core/framework/op.cc:132] Op<name=ResourceCreateOp; signature=resource:resource -> ; is_stateful=true>
2023-01-12 08:11:06.346574: I tensorflow/core/framework/op.cc:132] Op<name=ResourceGather; signature=resource:resource, indices:Tindices -> output:dtype; attr=batch_dims:int,default=0; attr=validate_indices:bool,default=true; attr=dtype:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.346747: I tensorflow/core/framework/op.cc:132] Op<name=ResourceGatherNd; signature=resource:resource, indices:Tindices -> output:dtype; attr=dtype:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.346825: I tensorflow/core/framework/op.cc:132] Op<name=ResourceInitializedOp; signature=resource:resource -> initialized:bool; is_stateful=true>
2023-01-12 08:11:06.346946: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterAdd; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347130: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterDiv; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347307: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterMax; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347391: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterMin; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347477: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterMul; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347536: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterNdAdd; signature=ref:resource, indices:Tindices, updates:T -> ; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.347588: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterNdMax; signature=ref:resource, indices:Tindices, updates:T -> ; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.347624: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterNdMin; signature=ref:resource, indices:Tindices, updates:T -> ; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.347668: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterNdSub; signature=ref:resource, indices:Tindices, updates:T -> ; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.347714: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterNdUpdate; signature=ref:resource, indices:Tindices, updates:T -> ; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.347775: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterSub; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347823: I tensorflow/core/framework/op.cc:132] Op<name=ResourceScatterUpdate; signature=resource:resource, indices:Tindices, updates:dtype -> ; attr=dtype:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.347896: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyAdadelta; signature=var:resource, accum:resource, accum_update:resource, lr:T, rho:T, epsilon:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.347978: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyAdagrad; signature=var:resource, accum:resource, lr:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.348059: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyAdagradDA; signature=var:resource, gradient_accumulator:resource, gradient_squared_accumulator:resource, grad:T, indices:Tindices, lr:T, l1:T, l2:T, global_step:int64 -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348140: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyAdagradV2; signature=var:resource, accum:resource, lr:T, epsilon:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true; is_stateful=true>
2023-01-12 08:11:06.348219: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyCenteredRMSProp; signature=var:resource, mg:resource, ms:resource, mom:resource, lr:T, rho:T, momentum:T, epsilon:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348296: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyFtrl; signature=var:resource, accum:resource, linear:resource, grad:T, indices:Tindices, lr:T, l1:T, l2:T, lr_power:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348377: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyFtrlV2; signature=var:resource, accum:resource, linear:resource, grad:T, indices:Tindices, lr:T, l1:T, l2:T, l2_shrinkage:T, lr_power:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348450: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyKerasMomentum; signature=var:resource, accum:resource, lr:T, grad:T, indices:Tindices, momentum:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348579: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyMomentum; signature=var:resource, accum:resource, lr:T, grad:T, indices:Tindices, momentum:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348760: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyProximalAdagrad; signature=var:resource, accum:resource, lr:T, l1:T, l2:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.348942: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyProximalGradientDescent; signature=var:resource, alpha:T, l1:T, l2:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.349020: I tensorflow/core/framework/op.cc:132] Op<name=ResourceSparseApplyRMSProp; signature=var:resource, ms:resource, mom:resource, lr:T, rho:T, momentum:T, epsilon:T, grad:T, indices:Tindices -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.349097: I tensorflow/core/framework/op.cc:132] Op<name=ResourceStridedSliceAssign; signature=ref:resource, begin:Index, end:Index, strides:Index, value:T -> ; attr=T:type; attr=Index:type,allowed=[DT_INT32, DT_INT64]; attr=begin_mask:int,default=0; attr=end_mask:int,default=0; attr=ellipsis_mask:int,default=0; attr=new_axis_mask:int,default=0; attr=shrink_axis_mask:int,default=0; is_stateful=true>
2023-01-12 08:11:06.349136: I tensorflow/core/framework/op.cc:132] Op<name=ResourceUsingOp; signature=resource:resource -> ; is_stateful=true>
2023-01-12 08:11:06.349223: I tensorflow/core/framework/op.cc:132] Op<name=Restore; signature=file_pattern:string, tensor_name:string -> tensor:dt; attr=dt:type; attr=preferred_shard:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.349267: I tensorflow/core/framework/op.cc:132] Op<name=RestoreSlice; signature=file_pattern:string, tensor_name:string, shape_and_slice:string -> tensor:dt; attr=dt:type; attr=preferred_shard:int,default=-1; is_stateful=true>
2023-01-12 08:11:06.349330: I tensorflow/core/framework/op.cc:132] Op<name=RestoreV2; signature=prefix:string, tensor_names:string, shape_and_slices:string -> tensors:; attr=dtypes:list(type),min=1; is_stateful=true>
2023-01-12 08:11:06.349375: I tensorflow/core/framework/op.cc:132] Op<name=Restrict; signature=a:T -> out:T; attr=T:type,allowed=[DT_STRING, DT_BOOL]>
2023-01-12 08:11:06.349423: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveAllTPUEmbeddingParameters; signature= -> parameters:NumTables*float, auxiliary1:NumTables*float, auxiliary2:NumTables*float, auxiliary3:NumTables*float, auxiliary4:NumTables*float, auxiliary5:NumTables*float, auxiliary6:NumTables*float, auxiliary7:NumTables*float; attr=NumTables:int,min=1; attr=config:string; attr=num_shards:int; attr=shard_id:int; is_stateful=true>
2023-01-12 08:11:06.349471: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingADAMParameters; signature= -> parameters:float, momenta:float, velocities:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349539: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingAdadeltaParameters; signature= -> parameters:float, accumulators:float, updates:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349587: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingAdagradMomentumParameters; signature= -> parameters:float, accumulators:float, momenta:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349633: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingAdagradParameters; signature= -> parameters:float, accumulators:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349697: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingCenteredRMSPropParameters; signature= -> parameters:float, ms:float, mom:float, mg:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349746: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingFTRLParameters; signature= -> parameters:float, accumulators:float, linears:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349793: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingFrequencyEstimatorParameters; signature= -> parameters:float, last_hit_step:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349859: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingMDLAdagradLightParameters; signature= -> parameters:float, accumulators:float, weights:float, benefits:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349908: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingMomentumParameters; signature= -> parameters:float, momenta:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349952: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingProximalAdagradParameters; signature= -> parameters:float, accumulators:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.349990: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingProximalYogiParameters; signature= -> parameters:float, v:float, m:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.350020: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingRMSPropParameters; signature= -> parameters:float, ms:float, mom:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.350041: I tensorflow/core/framework/op.cc:132] Op<name=RetrieveTPUEmbeddingStochasticGradientDescentParameters; signature= -> parameters:float; attr=table_id:int,default=-1; attr=table_name:string,default=""; attr=num_shards:int; attr=shard_id:int; attr=config:string,default=""; is_stateful=true>
2023-01-12 08:11:06.350074: I tensorflow/core/framework/op.cc:132] Op<name=Reverse; signature=tensor:T, dims:bool -> output:T; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_UINT32, 15741007897756916787, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128, DT_STRING]>
2023-01-12 08:11:06.350100: I tensorflow/core/framework/op.cc:132] Op<name=ReverseSequence; signature=input:T, seq_lengths:Tlen -> output:T; attr=seq_dim:int; attr=batch_dim:int,default=0; attr=T:type; attr=Tlen:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.350199: I tensorflow/core/framework/op.cc:132] Op<name=ReverseV2; signature=tensor:T, axis:Tidx -> output:T; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, 5951096766385938332, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128, DT_STRING]>
2023-01-12 08:11:06.350323: I tensorflow/core/framework/op.cc:132] Op<name=RewriteDataset; signature=input_dataset:variant, rewrite_name:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.353330: I tensorflow/core/framework/op.cc:132] Op<name=RightShift; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.353612: I tensorflow/core/framework/op.cc:132] Op<name=Rint; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.353836: I tensorflow/core/framework/op.cc:132] Op<name=RiscAbs; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.354045: I tensorflow/core/framework/op.cc:132] Op<name=RiscAdd; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; is_commutative=true; is_aggregate=true>
2023-01-12 08:11:06.354172: I tensorflow/core/framework/op.cc:132] Op<name=RiscBinaryArithmetic; signature=x:T, y:T -> z:T; attr=op_type:string,allowed=["ADD", "SUB", "MUL", "DIV", "REM", "MIN", "POW"]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.354460: I tensorflow/core/framework/op.cc:132] Op<name=RiscBinaryComparison; signature=x:T, y:T -> z:bool; attr=op_type:string,allowed=["EQ", "NE", "GE", "GT", "LE", "LT"]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.354685: I tensorflow/core/framework/op.cc:132] Op<name=RiscBitcast; signature=x:SrcT -> y:DstT; attr=SrcT:type; attr=DstT:type>
2023-01-12 08:11:06.354993: I tensorflow/core/framework/op.cc:132] Op<name=RiscBroadcast; signature=input:T, shape:Tidx -> output:T; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.355323: I tensorflow/core/framework/op.cc:132] Op<name=RiscCast; signature=x:SrcT -> y:DstT; attr=SrcT:type; attr=DstT:type>
2023-01-12 08:11:06.355470: I tensorflow/core/framework/op.cc:132] Op<name=RiscCeil; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.355575: I tensorflow/core/framework/op.cc:132] Op<name=RiscCholesky; signature=input:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.355673: I tensorflow/core/framework/op.cc:132] Op<name=RiscConcat; signature=values:N*T, axis:Tidx -> output:T; attr=N:int,min=2; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.355784: I tensorflow/core/framework/op.cc:132] Op<name=RiscCondition; signature=pred:bool, input_true:SrcT, input_false:SrcT -> output:DstT; attr=func_true:func; attr=func_false:func; attr=SrcT:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=DstT:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.355921: I tensorflow/core/framework/op.cc:132] Op<name=RiscConv; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:06.356037: I tensorflow/core/framework/op.cc:132] Op<name=RiscCos; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.356410: I tensorflow/core/framework/op.cc:132] Op<name=RiscDiv; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.356537: I tensorflow/core/framework/op.cc:132] Op<name=RiscDot; signature=a:T, b:T -> product:T; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.356773: I tensorflow/core/framework/op.cc:132] Op<name=RiscExp; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.356866: I tensorflow/core/framework/op.cc:132] Op<name=RiscFft; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.357027: I tensorflow/core/framework/op.cc:132] Op<name=RiscFloor; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357132: I tensorflow/core/framework/op.cc:132] Op<name=RiscGather; signature=params:Tparams, indices:Tindices, axis:Taxis -> output:Tparams; attr=batch_dims:int,default=0; attr=Tparams:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Taxis:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.357185: I tensorflow/core/framework/op.cc:132] Op<name=RiscImag; signature=input:T -> output:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357221: I tensorflow/core/framework/op.cc:132] Op<name=RiscIsFinite; signature=x:T -> y:bool; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357257: I tensorflow/core/framework/op.cc:132] Op<name=RiscLog; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357284: I tensorflow/core/framework/op.cc:132] Op<name=RiscLogicalAnd; signature=x:bool, y:bool -> z:bool>
2023-01-12 08:11:06.357306: I tensorflow/core/framework/op.cc:132] Op<name=RiscLogicalNot; signature=x:bool -> z:bool>
2023-01-12 08:11:06.357329: I tensorflow/core/framework/op.cc:132] Op<name=RiscLogicalOr; signature=x:bool, y:bool -> z:bool>
2023-01-12 08:11:06.357454: I tensorflow/core/framework/op.cc:132] Op<name=RiscMax; signature=x:T, y:T -> max:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357647: I tensorflow/core/framework/op.cc:132] Op<name=RiscMin; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357814: I tensorflow/core/framework/op.cc:132] Op<name=RiscMul; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.357981: I tensorflow/core/framework/op.cc:132] Op<name=RiscNeg; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.358154: I tensorflow/core/framework/op.cc:132] Op<name=RiscPad; signature=input:T, paddings:Tpaddings, constant_values:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.358355: I tensorflow/core/framework/op.cc:132] Op<name=RiscPool; signature=value:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=pooling_type:string,allowed=["AVG", "MAX"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.358506: I tensorflow/core/framework/op.cc:132] Op<name=RiscPow; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.358682: I tensorflow/core/framework/op.cc:132] Op<name=RiscRandomUniform; signature=shape:T -> output:float; attr=seed:int,default=0; attr=T:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.358857: I tensorflow/core/framework/op.cc:132] Op<name=RiscReal; signature=input:T -> output:Tout; attr=T:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]; attr=Tout:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.359033: I tensorflow/core/framework/op.cc:132] Op<name=RiscReduce; signature=tensor:T, axis:Index -> output:T; attr=reduce_type:string,allowed=["MEAN", "SUM"]; attr=Index:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.359265: I tensorflow/core/framework/op.cc:132] Op<name=RiscRem; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.359422: I tensorflow/core/framework/op.cc:132] Op<name=RiscReshape; signature=tensor:T, shape:Tshape -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.359551: I tensorflow/core/framework/op.cc:132] Op<name=RiscReverse; signature=tensor:T, axis:Tidx -> output:T; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.359677: I tensorflow/core/framework/op.cc:132] Op<name=RiscScatter; signature=indices:Tindices, updates:T, shape:Tindices -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.359843: I tensorflow/core/framework/op.cc:132] Op<name=RiscShape; signature=input:T -> output:out_type; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.359985: I tensorflow/core/framework/op.cc:132] Op<name=RiscSign; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.360135: I tensorflow/core/framework/op.cc:132] Op<name=RiscSlice; signature=input:T, begin:Index, size:Index -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Index:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.360317: I tensorflow/core/framework/op.cc:132] Op<name=RiscSort; signature=input:T, axis:Index -> output:T; attr=Index:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=direction:string,allowed=["ASCENDING", "DESCENDING"]>
2023-01-12 08:11:06.360450: I tensorflow/core/framework/op.cc:132] Op<name=RiscSqueeze; signature=input:T -> output:T; attr=T:type; attr=squeeze_dims:list(int),default=[],min=0>
2023-01-12 08:11:06.360596: I tensorflow/core/framework/op.cc:132] Op<name=RiscSub; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.360688: I tensorflow/core/framework/op.cc:132] Op<name=RiscTranspose; signature=x:T, perm:Tperm -> y:T; attr=T:type; attr=Tperm:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.360977: I tensorflow/core/framework/op.cc:132] Op<name=RiscTriangularSolve; signature=matrix:T, rhs:T -> output:T; attr=lower:bool,default=true; attr=adjoint:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.361116: I tensorflow/core/framework/op.cc:132] Op<name=RiscUnary; signature=x:T -> y:T; attr=op_type:string,allowed=["ABL", "CEIL", "COS", "EXP", "FLOOR", "IMAG", "LOG", "NEG", "REAL", "SIGN"]; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.361210: I tensorflow/core/framework/op.cc:132] Op<name=RiscWhile; signature=input: -> output:; attr=T:list(type),min=0; attr=cond:func; attr=body:func; attr=output_shapes:list(shape),default=[]; attr=parallel_iterations:int,default=10; is_stateful=true>
2023-01-12 08:11:06.361334: I tensorflow/core/framework/op.cc:132] Op<name=RngReadAndSkip; signature=resource:resource, alg:int32, delta:uint64 -> value:int64; is_stateful=true>
2023-01-12 08:11:06.361444: I tensorflow/core/framework/op.cc:132] Op<name=RngSkip; signature=resource:resource, algorithm:int64, delta:int64 -> ; is_stateful=true>
2023-01-12 08:11:06.361577: I tensorflow/core/framework/op.cc:132] Op<name=Roll; signature=input:T, shift:Tshift, axis:Taxis -> output:T; attr=T:type; attr=Tshift:type,allowed=[DT_INT32, DT_INT64]; attr=Taxis:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.361739: I tensorflow/core/framework/op.cc:132] Op<name=Round; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.361843: I tensorflow/core/framework/op.cc:132] Op<name=RpcCall; signature=client:resource, method_name:string, args:, timeout_in_ms:int64 -> future:resource, deleter:variant; attr=Tin:list(type),min=0; is_stateful=true>
2023-01-12 08:11:06.361955: I tensorflow/core/framework/op.cc:132] Op<name=RpcCheckStatus; signature=status_or:resource -> error_code:int64, error:string; is_stateful=true>
2023-01-12 08:11:06.362055: I tensorflow/core/framework/op.cc:132] Op<name=RpcClient; signature=server_address:string, timeout_in_ms:int64 -> client:resource, method_specs:string; attr=shared_name:string,default=""; attr=list_registered_methods:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.362163: I tensorflow/core/framework/op.cc:132] Op<name=RpcGetValue; signature=status_or:resource -> output:; attr=Tout:list(type),min=0; is_stateful=true>
2023-01-12 08:11:06.362259: I tensorflow/core/framework/op.cc:132] Op<name=RpcServer; signature=server_address:string -> server:resource; is_stateful=true>
2023-01-12 08:11:06.362361: I tensorflow/core/framework/op.cc:132] Op<name=RpcServerRegister; signature=server:resource, method_name:string, captured_inputs: -> ; attr=Tin:list(type),default=[],min=0; attr=f:func; attr=input_specs:string,default=""; attr=output_specs:string; is_stateful=true>
2023-01-12 08:11:06.362443: I tensorflow/core/framework/op.cc:132] Op<name=RpcServerStart; signature=server:resource -> ; is_stateful=true>
2023-01-12 08:11:06.362556: I tensorflow/core/framework/op.cc:132] Op<name=Rsqrt; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.362682: I tensorflow/core/framework/op.cc:132] Op<name=RsqrtGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.362972: I tensorflow/core/framework/op.cc:132] Op<name=SampleDistortedBoundingBox; signature=image_size:T, bounding_boxes:float -> begin:T, size:T, bboxes:float; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64]; attr=seed:int,default=0; attr=seed2:int,default=0; attr=min_object_covered:float,default=0.1; attr=aspect_ratio_range:list(float),default=[0.75, 1.33]; attr=area_range:list(float),default=[0.05, 1]; attr=max_attempts:int,default=100; attr=use_image_if_no_bounding_boxes:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.364586: I tensorflow/core/framework/op.cc:132] Op<name=SampleDistortedBoundingBoxV2; signature=image_size:T, bounding_boxes:float, min_object_covered:float -> begin:T, size:T, bboxes:float; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64]; attr=seed:int,default=0; attr=seed2:int,default=0; attr=aspect_ratio_range:list(float),default=[0.75, 1.33]; attr=area_range:list(float),default=[0.05, 1]; attr=max_attempts:int,default=100; attr=use_image_if_no_bounding_boxes:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.364791: I tensorflow/core/framework/op.cc:132] Op<name=SamplingDataset; signature=input_dataset:variant, rate:float, seed:int64, seed2:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.364898: I tensorflow/core/framework/op.cc:132] Op<name=Save; signature=filename:string, tensor_names:string, data: -> ; attr=T:list(type),min=1; is_stateful=true>
2023-01-12 08:11:06.364968: I tensorflow/core/framework/op.cc:132] Op<name=SaveDataset; signature=input_dataset:variant, path:string, shard_func_other_args: -> ; attr=compression:string,default=""; attr=shard_func:func; attr=use_shard_func:bool,default=true; attr=Tshard_func_args:list(type),min=0; is_stateful=true>
2023-01-12 08:11:06.365064: I tensorflow/core/framework/op.cc:132] Op<name=SaveDatasetV2; signature=input_dataset:variant, path:string, shard_func_other_args: -> handle:variant; attr=compression:string,default=""; attr=shard_func:func; attr=use_shard_func:bool,default=true; attr=Tshard_func_args:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:06.365236: I tensorflow/core/framework/op.cc:132] Op<name=SaveSlices; signature=filename:string, tensor_names:string, shapes_and_slices:string, data: -> ; attr=T:list(type),min=1; is_stateful=true>
2023-01-12 08:11:06.365276: I tensorflow/core/framework/op.cc:132] Op<name=SaveV2; signature=prefix:string, tensor_names:string, shape_and_slices:string, tensors: -> ; attr=dtypes:list(type),min=1; is_stateful=true>
2023-01-12 08:11:06.365324: I tensorflow/core/framework/op.cc:132] Op<name=ScalarSummary; signature=tags:string, values:T -> summary:string; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.365460: I tensorflow/core/framework/op.cc:132] Op<name=ScaleAndTranslate; signature=images:T, size:int32, scale:float, translation:float -> resized_images:float; attr=T:type,allowed=[DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_INT64, DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=kernel_type:string,default="lanczos3"; attr=antialias:bool,default=true>
2023-01-12 08:11:06.365653: I tensorflow/core/framework/op.cc:132] Op<name=ScaleAndTranslateGrad; signature=grads:T, original_image:T, scale:float, translation:float -> output:T; attr=T:type,allowed=[DT_FLOAT]; attr=kernel_type:string,default="lanczos3"; attr=antialias:bool,default=true>
2023-01-12 08:11:06.365801: I tensorflow/core/framework/op.cc:132] Op<name=ScanDataset; signature=input_dataset:variant, initial_state:, other_arguments: -> handle:variant; attr=f:func; attr=Tstate:list(type),min=1; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=preserve_cardinality:bool,default=false; attr=use_default_device:bool,default=true; attr=metadata:string,default="">
2023-01-12 08:11:06.366191: I tensorflow/core/framework/op.cc:132] Op<name=ScatterAdd; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.366407: I tensorflow/core/framework/op.cc:132] Op<name=ScatterDiv; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.366546: I tensorflow/core/framework/op.cc:132] Op<name=ScatterMax; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.366952: I tensorflow/core/framework/op.cc:132] Op<name=ScatterMin; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.367155: I tensorflow/core/framework/op.cc:132] Op<name=ScatterMul; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.367413: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNd; signature=indices:Tindices, updates:T, shape:Tindices -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT16, DT_INT32, DT_INT64]>
2023-01-12 08:11:06.367526: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNdAdd; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.438591: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNdMax; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.438777: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNdMin; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.438859: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNdNonAliasingAdd; signature=input:T, indices:Tindices, updates:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.439006: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNdSub; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.439398: I tensorflow/core/framework/op.cc:132] Op<name=ScatterNdUpdate; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true>
2023-01-12 08:11:06.439613: I tensorflow/core/framework/op.cc:132] Op<name=ScatterSub; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.440126: I tensorflow/core/framework/op.cc:132] Op<name=ScatterUpdate; signature=ref:Ref(T), indices:Tindices, updates:T -> output_ref:Ref(T); attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=true>
2023-01-12 08:11:06.440234: I tensorflow/core/framework/op.cc:132] Op<name=SdcaFprint; signature=input:string -> output:int64>
2023-01-12 08:11:06.440414: I tensorflow/core/framework/op.cc:132] Op<name=SdcaOptimizer; signature=sparse_example_indices:num_sparse_features*int64, sparse_feature_indices:num_sparse_features*int64, sparse_feature_values:num_sparse_features_with_values*float, dense_features:num_dense_features*float, example_weights:float, example_labels:float, sparse_indices:num_sparse_features*int64, sparse_weights:num_sparse_features*float, dense_weights:num_dense_features*float, example_state_data:float -> out_example_state_data:float, out_delta_sparse_weights:num_sparse_features*float, out_delta_dense_weights:num_dense_features*float; attr=loss_type:string,allowed=["logistic_loss", "squared_loss", "hinge_loss", "smooth_hinge_loss", "poisson_loss"]; attr=adaptative:bool,default=false; attr=num_sparse_features:int,min=0; attr=num_sparse_features_with_values:int,min=0; attr=num_dense_features:int,min=0; attr=l1:float; attr=l2:float; attr=num_loss_partitions:int,min=1; attr=num_inner_iterations:int,min=1>
2023-01-12 08:11:06.440542: I tensorflow/core/framework/op.cc:132] Op<name=SdcaOptimizerV2; signature=sparse_example_indices:num_sparse_features*int64, sparse_feature_indices:num_sparse_features*int64, sparse_feature_values:num_sparse_features_with_values*float, dense_features:num_dense_features*float, example_weights:float, example_labels:float, sparse_indices:num_sparse_features*int64, sparse_weights:num_sparse_features*float, dense_weights:num_dense_features*float, example_state_data:float -> out_example_state_data:float, out_delta_sparse_weights:num_sparse_features*float, out_delta_dense_weights:num_dense_features*float; attr=loss_type:string,allowed=["logistic_loss", "squared_loss", "hinge_loss", "smooth_hinge_loss", "poisson_loss"]; attr=adaptive:bool,default=false; attr=num_sparse_features:int,min=0; attr=num_sparse_features_with_values:int,min=0; attr=num_dense_features:int,min=0; attr=l1:float; attr=l2:float; attr=num_loss_partitions:int,min=1; attr=num_inner_iterations:int,min=1>
2023-01-12 08:11:06.440616: I tensorflow/core/framework/op.cc:132] Op<name=SdcaShrinkL1; signature=weights:Ref(num_features*float) -> ; attr=num_features:int,min=0; attr=l1:float; attr=l2:float>
2023-01-12 08:11:06.440704: I tensorflow/core/framework/op.cc:132] Op<name=SegmentMax; signature=data:T, segment_ids:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.440873: I tensorflow/core/framework/op.cc:132] Op<name=SegmentMean; signature=data:T, segment_ids:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.440956: I tensorflow/core/framework/op.cc:132] Op<name=SegmentMin; signature=data:T, segment_ids:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.441019: I tensorflow/core/framework/op.cc:132] Op<name=SegmentProd; signature=data:T, segment_ids:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.441080: I tensorflow/core/framework/op.cc:132] Op<name=SegmentSum; signature=data:T, segment_ids:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.441126: I tensorflow/core/framework/op.cc:132] Op<name=Select; signature=condition:bool, t:T, e:T -> output:T; attr=T:type>
2023-01-12 08:11:06.441175: I tensorflow/core/framework/op.cc:132] Op<name=SelectV2; signature=condition:bool, t:T, e:T -> output:T; attr=T:type>
2023-01-12 08:11:06.441359: I tensorflow/core/framework/op.cc:132] Op<name=SelfAdjointEig; signature=input:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF]>
2023-01-12 08:11:06.441467: I tensorflow/core/framework/op.cc:132] Op<name=SelfAdjointEigV2; signature=input:T -> e:T, v:T; attr=compute_v:bool,default=true; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.441514: I tensorflow/core/framework/op.cc:132] Op<name=Selu; signature=features:T -> activations:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.441571: I tensorflow/core/framework/op.cc:132] Op<name=SeluGrad; signature=gradients:T, outputs:T -> backprops:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.441655: I tensorflow/core/framework/op.cc:132] Op<name=Send; signature=tensor:T -> ; attr=T:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.441744: I tensorflow/core/framework/op.cc:132] Op<name=SendTPUEmbeddingGradients; signature=inputs:N*float, learning_rates:NN*float -> ; attr=N:int,min=1; attr=NN:int,default=0,min=0; attr=config:string; is_stateful=true>
2023-01-12 08:11:06.441817: I tensorflow/core/framework/op.cc:132] Op<name=SerializeIterator; signature=resource_handle:resource -> serialized:variant; attr=external_state_policy:int,default=0; is_stateful=true>
2023-01-12 08:11:06.441923: I tensorflow/core/framework/op.cc:132] Op<name=SerializeManySparse; signature=sparse_indices:int64, sparse_values:T, sparse_shape:int64 -> serialized_sparse:out_type; attr=T:type; attr=out_type:type,default=DT_STRING,allowed=[DT_STRING, DT_VARIANT]>
2023-01-12 08:11:06.442027: I tensorflow/core/framework/op.cc:132] Op<name=SerializeSparse; signature=sparse_indices:int64, sparse_values:T, sparse_shape:int64 -> serialized_sparse:out_type; attr=T:type; attr=out_type:type,default=DT_STRING,allowed=[DT_STRING, DT_VARIANT]>
2023-01-12 08:11:06.442111: I tensorflow/core/framework/op.cc:132] Op<name=SerializeTensor; signature=tensor:T -> serialized:string; attr=T:type>
2023-01-12 08:11:06.442182: I tensorflow/core/framework/op.cc:132] Op<name=SetSize; signature=set_indices:int64, set_values:T, set_shape:int64 -> size:int32; attr=validate_indices:bool,default=true; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_STRING]>
2023-01-12 08:11:06.442231: I tensorflow/core/framework/op.cc:132] Op<name=SetStatsAggregatorDataset; signature=input_dataset:variant, stats_aggregator:resource, tag:string, counter_prefix:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:06.442270: I tensorflow/core/framework/op.cc:132] Op<name=Shape; signature=input:T -> output:out_type; attr=T:type; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.442311: I tensorflow/core/framework/op.cc:132] Op<name=ShapeN; signature=input:N*T -> output:N*out_type; attr=N:int,min=1; attr=T:type; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.442353: I tensorflow/core/framework/op.cc:132] Op<name=ShardDataset; signature=input_dataset:variant, num_shards:int64, index:int64 -> handle:variant; attr=require_non_empty:bool,default=false; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.442385: I tensorflow/core/framework/op.cc:132] Op<name=ShardedFilename; signature=basename:string, shard:int32, num_shards:int32 -> filename:string>
2023-01-12 08:11:06.442413: I tensorflow/core/framework/op.cc:132] Op<name=ShardedFilespec; signature=basename:string, num_shards:int32 -> filename:string>
2023-01-12 08:11:06.442454: I tensorflow/core/framework/op.cc:132] Op<name=ShuffleAndRepeatDataset; signature=input_dataset:variant, buffer_size:int64, seed:int64, seed2:int64, count:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=reshuffle_each_iteration:bool,default=true; attr=metadata:string,default="">
2023-01-12 08:11:06.442498: I tensorflow/core/framework/op.cc:132] Op<name=ShuffleAndRepeatDatasetV2; signature=input_dataset:variant, buffer_size:int64, seed:int64, seed2:int64, count:int64, seed_generator:resource -> handle:variant; attr=reshuffle_each_iteration:bool,default=true; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.442544: I tensorflow/core/framework/op.cc:132] Op<name=ShuffleDataset; signature=input_dataset:variant, buffer_size:int64, seed:int64, seed2:int64 -> handle:variant; attr=reshuffle_each_iteration:bool,default=true; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.442585: I tensorflow/core/framework/op.cc:132] Op<name=ShuffleDatasetV2; signature=input_dataset:variant, buffer_size:int64, seed_generator:resource -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.442988: I tensorflow/core/framework/op.cc:132] Op<name=ShuffleDatasetV3; signature=input_dataset:variant, buffer_size:int64, seed:int64, seed2:int64, seed_generator:resource -> handle:variant; attr=reshuffle_each_iteration:bool,default=true; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.443156: I tensorflow/core/framework/op.cc:132] Op<name=ShutdownDistributedTPU; signature= -> ; is_stateful=true>
2023-01-12 08:11:06.443231: I tensorflow/core/framework/op.cc:132] Op<name=ShutdownTPUSystem; signature= -> success:bool; is_stateful=true>
2023-01-12 08:11:06.443340: I tensorflow/core/framework/op.cc:132] Op<name=Sigmoid; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.443420: I tensorflow/core/framework/op.cc:132] Op<name=SigmoidGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.443524: I tensorflow/core/framework/op.cc:132] Op<name=Sign; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.443606: I tensorflow/core/framework/op.cc:132] Op<name=Simple; signature=a:int32 -> out:float>
2023-01-12 08:11:06.443670: I tensorflow/core/framework/op.cc:132] Op<name=SimpleStruct; signature= -> a:n_a*int32; attr=n_a:int,min=0>
2023-01-12 08:11:06.443751: I tensorflow/core/framework/op.cc:132] Op<name=Sin; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.444000: I tensorflow/core/framework/op.cc:132] Op<name=Sinh; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.444184: I tensorflow/core/framework/op.cc:132] Op<name=Size; signature=input:T -> output:out_type; attr=T:type; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.444608: I tensorflow/core/framework/op.cc:132] Op<name=SkipDataset; signature=input_dataset:variant, count:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.444820: I tensorflow/core/framework/op.cc:132] Op<name=Skipgram; signature= -> vocab_word:string, vocab_freq:int32, words_per_epoch:int64, current_epoch:int32, total_words_processed:int64, examples:int32, labels:int32; attr=filename:string; attr=batch_size:int; attr=window_size:int,default=5; attr=min_count:int,default=5; attr=subsample:float,default=0.001; is_stateful=true>
2023-01-12 08:11:06.444947: I tensorflow/core/framework/op.cc:132] Op<name=SleepDataset; signature=input_dataset:variant, sleep_microseconds:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.445041: I tensorflow/core/framework/op.cc:132] Op<name=SleepIdentityOp; signature=sleep_seconds:int32, input:T -> output:T; attr=T:type>
2023-01-12 08:11:06.445179: I tensorflow/core/framework/op.cc:132] Op<name=SleepOp; signature=sleep_seconds:int32 -> >
2023-01-12 08:11:06.445370: I tensorflow/core/framework/op.cc:132] Op<name=Slice; signature=input:T, begin:Index, size:Index -> output:T; attr=T:type; attr=Index:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.445466: I tensorflow/core/framework/op.cc:132] Op<name=SlidingWindowDataset; signature=input_dataset:variant, window_size:int64, window_shift:int64, window_stride:int64 -> handle:variant; attr=drop_remainder:bool,default=true; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.445554: I tensorflow/core/framework/op.cc:132] Op<name=Snapshot; signature=input:T -> output:T; attr=T:type>
2023-01-12 08:11:06.445832: I tensorflow/core/framework/op.cc:132] Op<name=SnapshotDataset; signature=input_dataset:variant, path:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=compression:string,default=""; attr=reader_path_prefix:string,default=""; attr=writer_path_prefix:string,default=""; attr=shard_size_bytes:int,default=10737418240; attr=pending_snapshot_expiry_seconds:int,default=86400; attr=num_reader_threads:int,default=1; attr=reader_buffer_size:int,default=1; attr=num_writer_threads:int,default=1; attr=writer_buffer_size:int,default=1; attr=shuffle_on_read:bool,default=false; attr=seed:int,default=0; attr=seed2:int,default=0; attr=mode:string,default="auto"; attr=snapshot_name:string,default="">
2023-01-12 08:11:06.446079: I tensorflow/core/framework/op.cc:132] Op<name=SnapshotDatasetReader; signature=shard_dir:string, start_index:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=compression:string,default=""; attr=version:int>
2023-01-12 08:11:06.446224: I tensorflow/core/framework/op.cc:132] Op<name=SnapshotDatasetV2; signature=input_dataset:variant, path:string, reader_func_other_args:, shard_func_other_args: -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=compression:string,default=""; attr=reader_prefix:string,default=""; attr=writer_prefix:string,default=""; attr=hash_valid:bool,default=false; attr=hash:int,default=0; attr=reader_func:func; attr=shard_func:func; attr=Treader_func_args:list(type),min=0; attr=Tshard_func_args:list(type),min=0; attr=metadata:string,default="">
2023-01-12 08:11:06.446363: I tensorflow/core/framework/op.cc:132] Op<name=SnapshotNestedDatasetReader; signature=inputs:N*variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1>
2023-01-12 08:11:06.446498: I tensorflow/core/framework/op.cc:132] Op<name=SobolSample; signature=dim:int32, num_results:int32, skip:int32 -> samples:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.446808: I tensorflow/core/framework/op.cc:132] Op<name=Softmax; signature=logits:T -> softmax:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.447026: I tensorflow/core/framework/op.cc:132] Op<name=SoftmaxCrossEntropyWithLogits; signature=features:T, labels:T -> loss:T, backprop:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.447185: I tensorflow/core/framework/op.cc:132] Op<name=Softplus; signature=features:T -> activations:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.447349: I tensorflow/core/framework/op.cc:132] Op<name=SoftplusGrad; signature=gradients:T, features:T -> backprops:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.447518: I tensorflow/core/framework/op.cc:132] Op<name=Softsign; signature=features:T -> activations:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.447719: I tensorflow/core/framework/op.cc:132] Op<name=SoftsignGrad; signature=gradients:T, features:T -> backprops:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.448097: I tensorflow/core/framework/op.cc:132] Op<name=SpaceToBatch; signature=input:T, paddings:Tpaddings -> output:T; attr=T:type; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=block_size:int,min=2>
2023-01-12 08:11:06.448224: I tensorflow/core/framework/op.cc:132] Op<name=SpaceToBatchND; signature=input:T, block_shape:Tblock_shape, paddings:Tpaddings -> output:T; attr=T:type; attr=Tblock_shape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.448385: I tensorflow/core/framework/op.cc:132] Op<name=SpaceToDepth; signature=input:T -> output:T; attr=T:type; attr=block_size:int,min=2; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NCHW_VECT_C"]>
2023-01-12 08:11:06.449758: I tensorflow/core/framework/op.cc:132] Op<name=SparseAccumulatorApplyGradient; signature=handle:Ref(string), local_step:int64, gradient_indices:int64, gradient_values:dtype, gradient_shape:int64 -> ; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=has_known_shape:bool>
2023-01-12 08:11:06.450198: I tensorflow/core/framework/op.cc:132] Op<name=SparseAccumulatorTakeGradient; signature=handle:Ref(string), num_required:int32 -> indices:int64, values:dtype, shape:int64; attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.450977: I tensorflow/core/framework/op.cc:132] Op<name=SparseAdd; signature=a_indices:int64, a_values:T, a_shape:int64, b_indices:int64, b_values:T, b_shape:int64, thresh:Treal -> sum_indices:int64, sum_values:T, sum_shape:int64; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Treal:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.451244: I tensorflow/core/framework/op.cc:132] Op<name=SparseAddGrad; signature=backprop_val_grad:T, a_indices:int64, b_indices:int64, sum_indices:int64 -> a_val_grad:T, b_val_grad:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.451477: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyAdadelta; signature=var:Ref(T), accum:Ref(T), accum_update:Ref(T), lr:T, rho:T, epsilon:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.451886: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyAdagrad; signature=var:Ref(T), accum:Ref(T), lr:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true>
2023-01-12 08:11:06.452076: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyAdagradDA; signature=var:Ref(T), gradient_accumulator:Ref(T), gradient_squared_accumulator:Ref(T), grad:T, indices:Tindices, lr:T, l1:T, l2:T, global_step:int64 -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.452425: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyAdagradV2; signature=var:Ref(T), accum:Ref(T), lr:T, epsilon:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=update_slots:bool,default=true>
2023-01-12 08:11:06.456373: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyCenteredRMSProp; signature=var:Ref(T), mg:Ref(T), ms:Ref(T), mom:Ref(T), lr:T, rho:T, momentum:T, epsilon:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.456586: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyFtrl; signature=var:Ref(T), accum:Ref(T), linear:Ref(T), grad:T, indices:Tindices, lr:T, l1:T, l2:T, lr_power:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false>
2023-01-12 08:11:06.456861: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyFtrlV2; signature=var:Ref(T), accum:Ref(T), linear:Ref(T), grad:T, indices:Tindices, lr:T, l1:T, l2:T, l2_shrinkage:T, lr_power:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=multiply_linear_by_lr:bool,default=false>
2023-01-12 08:11:06.457103: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyMomentum; signature=var:Ref(T), accum:Ref(T), lr:T, grad:T, indices:Tindices, momentum:T -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false; attr=use_nesterov:bool,default=false>
2023-01-12 08:11:06.457496: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyProximalAdagrad; signature=var:Ref(T), accum:Ref(T), lr:T, l1:T, l2:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.457685: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyProximalGradientDescent; signature=var:Ref(T), alpha:T, l1:T, l2:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.458211: I tensorflow/core/framework/op.cc:132] Op<name=SparseApplyRMSProp; signature=var:Ref(T), ms:Ref(T), mom:Ref(T), lr:T, rho:T, momentum:T, epsilon:T, grad:T, indices:Tindices -> out:Ref(T); attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=use_locking:bool,default=false>
2023-01-12 08:11:06.458378: I tensorflow/core/framework/op.cc:132] Op<name=SparseBincount; signature=indices:int64, values:Tidx, dense_shape:int64, size:Tidx, weights:T -> output:T; attr=Tidx:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]; attr=binary_output:bool,default=false>
2023-01-12 08:11:06.458576: I tensorflow/core/framework/op.cc:132] Op<name=SparseConcat; signature=indices:N*int64, values:N*T, shapes:N*int64 -> output_indices:int64, output_values:T, output_shape:int64; attr=concat_dim:int; attr=N:int,min=2; attr=T:type>
2023-01-12 08:11:06.458682: I tensorflow/core/framework/op.cc:132] Op<name=SparseConditionalAccumulator; signature= -> handle:Ref(string); attr=dtype:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=shape:shape; attr=container:string,default=""; attr=shared_name:string,default=""; attr=reduction_type:string,default="MEAN",allowed=["MEAN", "SUM"]; is_stateful=true>
2023-01-12 08:11:06.458738: I tensorflow/core/framework/op.cc:132] Op<name=SparseCountSparseOutput; signature=indices:int64, values:T, dense_shape:int64, weights:output_type -> output_indices:int64, output_values:output_type, output_dense_shape:int64; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=minlength:int,default=-1,min=-1; attr=maxlength:int,default=-1,min=-1; attr=binary_output:bool; attr=output_type:type,allowed=[DT_INT32, DT_INT64, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.458901: I tensorflow/core/framework/op.cc:132] Op<name=SparseCross; signature=indices:N*int64, values:, shapes:N*int64, dense_inputs: -> output_indices:int64, output_values:out_type, output_shape:int64; attr=N:int,min=0; attr=hashed_output:bool; attr=num_buckets:int,min=0; attr=hash_key:int; attr=sparse_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=dense_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=out_type:type,allowed=[DT_INT64, DT_STRING]; attr=internal_type:type,allowed=[DT_INT64, DT_STRING]>
2023-01-12 08:11:06.458991: I tensorflow/core/framework/op.cc:132] Op<name=SparseCrossHashed; signature=indices:N*int64, values:, shapes:N*int64, dense_inputs:, num_buckets:int64, strong_hash:bool, salt:int64 -> output_indices:int64, output_values:int64, output_shape:int64; attr=N:int,min=0; attr=sparse_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=dense_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]>
2023-01-12 08:11:06.459071: I tensorflow/core/framework/op.cc:132] Op<name=SparseCrossV2; signature=indices:N*int64, values:, shapes:N*int64, dense_inputs:, sep:string -> output_indices:int64, output_values:string, output_shape:int64; attr=N:int,min=0; attr=sparse_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]; attr=dense_types:list(type),min=0,allowed=[DT_INT64, DT_STRING]>
2023-01-12 08:11:06.459463: I tensorflow/core/framework/op.cc:132] Op<name=SparseDenseCwiseAdd; signature=sp_indices:int64, sp_values:T, sp_shape:int64, dense:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.459667: I tensorflow/core/framework/op.cc:132] Op<name=SparseDenseCwiseDiv; signature=sp_indices:int64, sp_values:T, sp_shape:int64, dense:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.459860: I tensorflow/core/framework/op.cc:132] Op<name=SparseDenseCwiseMul; signature=sp_indices:int64, sp_values:T, sp_shape:int64, dense:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.459966: I tensorflow/core/framework/op.cc:132] Op<name=SparseFillEmptyRows; signature=indices:int64, values:T, dense_shape:int64, default_value:T -> output_indices:int64, output_values:T, empty_row_indicator:bool, reverse_index_map:int64; attr=T:type>
2023-01-12 08:11:06.460051: I tensorflow/core/framework/op.cc:132] Op<name=SparseFillEmptyRowsGrad; signature=reverse_index_map:int64, grad_values:T -> d_values:T, d_default_value:T; attr=T:type>
2023-01-12 08:11:06.460122: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatMul; signature=a:Ta, b:Tb -> product:float; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=a_is_sparse:bool,default=false; attr=b_is_sparse:bool,default=false; attr=Ta:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]; attr=Tb:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:06.460181: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixAdd; signature=a:variant, b:variant, alpha:T, beta:T -> c:variant; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.460244: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixMatMul; signature=a:variant, b:T -> output:T; attr=T:type; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=adjoint_a:bool,default=false; attr=adjoint_b:bool,default=false; attr=transpose_output:bool,default=false; attr=conjugate_output:bool,default=false>
2023-01-12 08:11:06.460310: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixMul; signature=a:variant, b:T -> output:variant; attr=T:type>
2023-01-12 08:11:06.460353: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixNNZ; signature=sparse_matrix:variant -> nnz:int32>
2023-01-12 08:11:06.460383: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixOrderingAMD; signature=input:variant -> output:int32>
2023-01-12 08:11:06.460759: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixSoftmax; signature=logits:variant -> softmax:variant; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.461155: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixSoftmaxGrad; signature=softmax:variant, grad_softmax:variant -> gradient:variant; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.461385: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixSparseCholesky; signature=input:variant, permutation:int32 -> output:variant; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.461580: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixSparseMatMul; signature=a:variant, b:variant -> c:variant; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=adjoint_a:bool,default=false; attr=adjoint_b:bool,default=false>
2023-01-12 08:11:06.461679: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixTranspose; signature=input:variant -> output:variant; attr=conjugate:bool,default=false; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.461738: I tensorflow/core/framework/op.cc:132] Op<name=SparseMatrixZeros; signature=dense_shape:int64 -> sparse_matrix:variant; attr=type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.461800: I tensorflow/core/framework/op.cc:132] Op<name=SparseReduceMax; signature=input_indices:int64, input_values:T, input_shape:int64, reduction_axes:int32 -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.461862: I tensorflow/core/framework/op.cc:132] Op<name=SparseReduceMaxSparse; signature=input_indices:int64, input_values:T, input_shape:int64, reduction_axes:int32 -> output_indices:int64, output_values:T, output_shape:int64; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.461931: I tensorflow/core/framework/op.cc:132] Op<name=SparseReduceSum; signature=input_indices:int64, input_values:T, input_shape:int64, reduction_axes:int32 -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.462076: I tensorflow/core/framework/op.cc:132] Op<name=SparseReduceSumSparse; signature=input_indices:int64, input_values:T, input_shape:int64, reduction_axes:int32 -> output_indices:int64, output_values:T, output_shape:int64; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.462147: I tensorflow/core/framework/op.cc:132] Op<name=SparseReorder; signature=input_indices:int64, input_values:T, input_shape:int64 -> output_indices:int64, output_values:T; attr=T:type>
2023-01-12 08:11:06.462204: I tensorflow/core/framework/op.cc:132] Op<name=SparseReshape; signature=input_indices:int64, input_shape:int64, new_shape:int64 -> output_indices:int64, output_shape:int64>
2023-01-12 08:11:06.462314: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentMean; signature=data:T, indices:Tidx, segment_ids:Tsegmentids -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.462549: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentMeanGrad; signature=grad:T, indices:Tidx, segment_ids:Tsegmentids, output_dim0:int32 -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.462718: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentMeanWithNumSegments; signature=data:T, indices:Tidx, segment_ids:Tsegmentids, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.462881: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentSqrtN; signature=data:T, indices:Tidx, segment_ids:Tsegmentids -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.463038: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentSqrtNGrad; signature=grad:T, indices:Tidx, segment_ids:Tsegmentids, output_dim0:int32 -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.463161: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentSqrtNWithNumSegments; signature=data:T, indices:Tidx, segment_ids:Tsegmentids, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.463265: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentSum; signature=data:T, indices:Tidx, segment_ids:Tsegmentids -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.463632: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentSumGrad; signature=grad:T, indices:Tidx, segment_ids:Tsegmentids, output_dim0:int32 -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.463842: I tensorflow/core/framework/op.cc:132] Op<name=SparseSegmentSumWithNumSegments; signature=data:T, indices:Tidx, segment_ids:Tsegmentids, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tsegmentids:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.463989: I tensorflow/core/framework/op.cc:132] Op<name=SparseSlice; signature=indices:int64, values:T, shape:int64, start:int64, size:int64 -> output_indices:int64, output_values:T, output_shape:int64; attr=T:type>
2023-01-12 08:11:06.464197: I tensorflow/core/framework/op.cc:132] Op<name=SparseSliceGrad; signature=backprop_val_grad:T, input_indices:int64, input_start:int64, output_indices:int64 -> val_grad:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.464561: I tensorflow/core/framework/op.cc:132] Op<name=SparseSoftmax; signature=sp_indices:int64, sp_values:T, sp_shape:int64 -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.464712: I tensorflow/core/framework/op.cc:132] Op<name=SparseSoftmaxCrossEntropyWithLogits; signature=features:T, labels:Tlabels -> loss:T, backprop:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=Tlabels:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.464924: I tensorflow/core/framework/op.cc:132] Op<name=SparseSparseMaximum; signature=a_indices:int64, a_values:T, a_shape:int64, b_indices:int64, b_values:T, b_shape:int64 -> output_indices:int64, output_values:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.465248: I tensorflow/core/framework/op.cc:132] Op<name=SparseSparseMinimum; signature=a_indices:int64, a_values:T, a_shape:int64, b_indices:int64, b_values:T, b_shape:int64 -> output_indices:int64, output_values:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.465697: I tensorflow/core/framework/op.cc:132] Op<name=SparseSplit; signature=split_dim:int64, indices:int64, values:T, shape:int64 -> output_indices:num_split*int64, output_values:num_split*T, output_shape:num_split*int64; attr=num_split:int,min=1; attr=T:type>
2023-01-12 08:11:06.466383: I tensorflow/core/framework/op.cc:132] Op<name=SparseTensorDenseAdd; signature=a_indices:Tindices, a_values:T, a_shape:Tindices, b:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.466599: I tensorflow/core/framework/op.cc:132] Op<name=SparseTensorDenseMatMul; signature=a_indices:Tindices, a_values:T, a_shape:int64, b:T -> product:T; attr=T:type; attr=Tindices:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=adjoint_a:bool,default=false; attr=adjoint_b:bool,default=false>
2023-01-12 08:11:06.466679: I tensorflow/core/framework/op.cc:132] Op<name=SparseTensorSliceDataset; signature=indices:int64, values:Tvalues, dense_shape:int64 -> handle:variant; attr=Tvalues:type; is_stateful=true>
2023-01-12 08:11:06.466774: I tensorflow/core/framework/op.cc:132] Op<name=SparseTensorToCSRSparseMatrix; signature=indices:int64, values:T, dense_shape:int64 -> sparse_matrix:variant; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.466860: I tensorflow/core/framework/op.cc:132] Op<name=SparseToDense; signature=sparse_indices:Tindices, output_shape:Tindices, sparse_values:T, default_value:T -> dense:T; attr=validate_indices:bool,default=true; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.466953: I tensorflow/core/framework/op.cc:132] Op<name=SparseToSparseSetOperation; signature=set1_indices:int64, set1_values:T, set1_shape:int64, set2_indices:int64, set2_values:T, set2_shape:int64 -> result_indices:int64, result_values:T, result_shape:int64; attr=set_operation:string; attr=validate_indices:bool,default=true; attr=T:type,allowed=[DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_STRING]>
2023-01-12 08:11:06.467060: I tensorflow/core/framework/op.cc:132] Op<name=Spence; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.467146: I tensorflow/core/framework/op.cc:132] Op<name=Split; signature=split_dim:int32, value:T -> output:num_split*T; attr=num_split:int,min=1; attr=T:type>
2023-01-12 08:11:06.467957: I tensorflow/core/framework/op.cc:132] Op<name=SplitV; signature=value:T, size_splits:Tlen, split_dim:int32 -> output:num_split*T; attr=num_split:int,min=1; attr=T:type; attr=Tlen:type,default=DT_INT64,allowed=[DT_INT8, DT_INT32, DT_INT64]>
2023-01-12 08:11:06.468161: I tensorflow/core/framework/op.cc:132] Op<name=SqlDataset; signature=driver_name:string, data_source_name:string, query:string -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:06.468280: I tensorflow/core/framework/op.cc:132] Op<name=Sqrt; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.468392: I tensorflow/core/framework/op.cc:132] Op<name=SqrtGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.468591: I tensorflow/core/framework/op.cc:132] Op<name=Square; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_UINT8, DT_UINT16, DT_UINT32, DT_UINT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.468696: I tensorflow/core/framework/op.cc:132] Op<name=SquaredDifference; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; is_commutative=true>
2023-01-12 08:11:06.468774: I tensorflow/core/framework/op.cc:132] Op<name=Squeeze; signature=input:T -> output:T; attr=T:type; attr=squeeze_dims:list(int),default=[],min=0>
2023-01-12 08:11:06.468842: I tensorflow/core/framework/op.cc:132] Op<name=Stack; signature= -> handle:Ref(string); attr=elem_type:type; attr=stack_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.468900: I tensorflow/core/framework/op.cc:132] Op<name=StackClose; signature=handle:Ref(string) -> >
2023-01-12 08:11:06.468952: I tensorflow/core/framework/op.cc:132] Op<name=StackCloseV2; signature=handle:resource -> ; is_stateful=true>
2023-01-12 08:11:06.469008: I tensorflow/core/framework/op.cc:132] Op<name=StackPop; signature=handle:Ref(string) -> elem:elem_type; attr=elem_type:type>
2023-01-12 08:11:06.469040: I tensorflow/core/framework/op.cc:132] Op<name=StackPopV2; signature=handle:resource -> elem:elem_type; attr=elem_type:type; is_stateful=true>
2023-01-12 08:11:06.469067: I tensorflow/core/framework/op.cc:132] Op<name=StackPush; signature=handle:Ref(string), elem:T -> output:T; attr=T:type; attr=swap_memory:bool,default=false>
2023-01-12 08:11:06.469091: I tensorflow/core/framework/op.cc:132] Op<name=StackPushV2; signature=handle:resource, elem:T -> output:T; attr=T:type; attr=swap_memory:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.469119: I tensorflow/core/framework/op.cc:132] Op<name=StackV2; signature=max_size:int32 -> handle:resource; attr=elem_type:type; attr=stack_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.469150: I tensorflow/core/framework/op.cc:132] Op<name=Stage; signature=values: -> ; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.469190: I tensorflow/core/framework/op.cc:132] Op<name=StageClear; signature= -> ; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.469241: I tensorflow/core/framework/op.cc:132] Op<name=StagePeek; signature=index:int32 -> values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.469295: I tensorflow/core/framework/op.cc:132] Op<name=StageSize; signature= -> size:int32; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.469371: I tensorflow/core/framework/op.cc:132] Op<name=StatefulPartitionedCall; signature=args: -> output:; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=f:func; attr=config:string,default=""; attr=config_proto:string,default=""; attr=executor_type:string,default=""; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:06.469499: I tensorflow/core/framework/op.cc:132] Op<name=StatefulRandomBinomial; signature=resource:resource, algorithm:int64, shape:S, counts:T, probs:T -> output:dtype; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,default=DT_DOUBLE,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=dtype:type,default=DT_INT64,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.469581: I tensorflow/core/framework/op.cc:132] Op<name=StatefulStandardNormal; signature=resource:resource, shape:shape_dtype -> output:dtype; attr=dtype:type,default=DT_FLOAT; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:06.469726: I tensorflow/core/framework/op.cc:132] Op<name=StatefulStandardNormalV2; signature=resource:resource, algorithm:int64, shape:shape_dtype -> output:dtype; attr=dtype:type,default=DT_FLOAT; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:06.469793: I tensorflow/core/framework/op.cc:132] Op<name=StatefulTruncatedNormal; signature=resource:resource, algorithm:int64, shape:shape_dtype -> output:dtype; attr=dtype:type,default=DT_FLOAT; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:06.469855: I tensorflow/core/framework/op.cc:132] Op<name=StatefulUniform; signature=resource:resource, algorithm:int64, shape:shape_dtype -> output:dtype; attr=dtype:type,default=DT_FLOAT; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:06.469905: I tensorflow/core/framework/op.cc:132] Op<name=StatefulUniformFullInt; signature=resource:resource, algorithm:int64, shape:shape_dtype -> output:dtype; attr=dtype:type,default=DT_UINT64; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:06.469961: I tensorflow/core/framework/op.cc:132] Op<name=StatefulUniformInt; signature=resource:resource, algorithm:int64, shape:shape_dtype, minval:dtype, maxval:dtype -> output:dtype; attr=dtype:type,default=DT_INT64; attr=shape_dtype:type,default=DT_INT64; is_stateful=true>
2023-01-12 08:11:06.470025: I tensorflow/core/framework/op.cc:132] Op<name=StatelessCase; signature=branch_index:int32, input: -> output:; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=branches:list(func),min=1; attr=output_shapes:list(shape),default=[]>
2023-01-12 08:11:06.470080: I tensorflow/core/framework/op.cc:132] Op<name=StatelessIf; signature=cond:Tcond, input: -> output:; attr=Tcond:type; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=then_branch:func; attr=else_branch:func; attr=output_shapes:list(shape),default=[]>
2023-01-12 08:11:06.470230: I tensorflow/core/framework/op.cc:132] Op<name=StatelessMultinomial; signature=logits:T, num_samples:int32, seed:Tseed -> output:output_dtype; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=output_dtype:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470310: I tensorflow/core/framework/op.cc:132] Op<name=StatelessParameterizedTruncatedNormal; signature=shape:S, seed:Tseed, means:dtype, stddevs:dtype, minvals:dtype, maxvals:dtype -> output:dtype; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=dtype:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.470461: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomBinomial; signature=shape:S, seed:Tseed, counts:T, probs:T -> output:dtype; attr=S:type,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=T:type,default=DT_DOUBLE,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=dtype:type,default=DT_INT64,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470517: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomGammaV2; signature=shape:T, seed:Tseed, alpha:dtype -> output:dtype; attr=dtype:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470540: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomGetAlg; signature= -> alg:int32; is_stateful=true>
2023-01-12 08:11:06.470567: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomGetKeyCounter; signature=seed:Tseed -> key:uint64, counter:uint64; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470599: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomGetKeyCounterAlg; signature=seed:Tseed -> key:uint64, counter:uint64, alg:int32; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470633: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomNormal; signature=shape:T, seed:Tseed -> output:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470671: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomNormalV2; signature=shape:Tshape, key:uint64, counter:uint64, alg:int32 -> output:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470710: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomPoisson; signature=shape:T, seed:Tseed, lam:Rtype -> output:dtype; attr=Rtype:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=dtype:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470746: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomUniform; signature=shape:T, seed:Tseed -> output:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470810: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomUniformFullInt; signature=shape:T, seed:Tseed -> output:dtype; attr=dtype:type,default=DT_UINT64,allowed=[DT_INT32, DT_INT64, DT_UINT32, DT_UINT64]; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.470884: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomUniformFullIntV2; signature=shape:Tshape, key:uint64, counter:uint64, alg:int32 -> output:dtype; attr=dtype:type,default=DT_UINT64,allowed=[DT_INT32, DT_INT64, DT_UINT32, DT_UINT64]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.470933: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomUniformInt; signature=shape:T, seed:Tseed, minval:dtype, maxval:dtype -> output:dtype; attr=dtype:type,allowed=[DT_INT32, DT_INT64]; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.471006: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomUniformIntV2; signature=shape:Tshape, key:uint64, counter:uint64, alg:int32, minval:dtype, maxval:dtype -> output:dtype; attr=dtype:type,allowed=[DT_INT32, DT_INT64, DT_UINT32, DT_UINT64]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.471268: I tensorflow/core/framework/op.cc:132] Op<name=StatelessRandomUniformV2; signature=shape:Tshape, key:uint64, counter:uint64, alg:int32 -> output:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.471510: I tensorflow/core/framework/op.cc:132] Op<name=StatelessSampleDistortedBoundingBox; signature=image_size:T, bounding_boxes:float, min_object_covered:float, seed:Tseed -> begin:T, size:T, bboxes:float; attr=T:type,allowed=[DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64]; attr=Tseed:type,allowed=[DT_INT32, DT_INT64]; attr=aspect_ratio_range:list(float),default=[0.75, 1.33]; attr=area_range:list(float),default=[0.05, 1]; attr=max_attempts:int,default=100; attr=use_image_if_no_bounding_boxes:bool,default=false>
2023-01-12 08:11:06.471613: I tensorflow/core/framework/op.cc:132] Op<name=StatelessShuffle; signature=value:T, key:uint64, counter:uint64, alg:int32 -> output:T; attr=T:type>
2023-01-12 08:11:06.471716: I tensorflow/core/framework/op.cc:132] Op<name=StatelessTruncatedNormal; signature=shape:T, seed:Tseed -> output:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=Tseed:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.472000: I tensorflow/core/framework/op.cc:132] Op<name=StatelessTruncatedNormalV2; signature=shape:Tshape, key:uint64, counter:uint64, alg:int32 -> output:dtype; attr=dtype:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.472066: I tensorflow/core/framework/op.cc:132] Op<name=StatelessWhile; signature=input: -> output:; attr=T:list(type),min=0; attr=cond:func; attr=body:func; attr=output_shapes:list(shape),default=[]; attr=parallel_iterations:int,default=10>
2023-01-12 08:11:06.472107: I tensorflow/core/framework/op.cc:132] Op<name=StaticRegexFullMatch; signature=input:string -> output:bool; attr=pattern:string>
2023-01-12 08:11:06.472157: I tensorflow/core/framework/op.cc:132] Op<name=StaticRegexReplace; signature=input:string -> output:string; attr=pattern:string; attr=rewrite:string; attr=replace_global:bool,default=true>
2023-01-12 08:11:06.472208: I tensorflow/core/framework/op.cc:132] Op<name=StatsAggregatorHandle; signature= -> handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.472259: I tensorflow/core/framework/op.cc:132] Op<name=StatsAggregatorHandleV2; signature= -> handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.472293: I tensorflow/core/framework/op.cc:132] Op<name=StatsAggregatorSetSummaryWriter; signature=stats_aggregator:resource, summary:resource -> ; is_stateful=true>
2023-01-12 08:11:06.472322: I tensorflow/core/framework/op.cc:132] Op<name=StatsAggregatorSummary; signature=iterator:resource -> summary:string; is_stateful=true>
2023-01-12 08:11:06.472525: I tensorflow/core/framework/op.cc:132] Op<name=StopGradient; signature=input:T -> output:T; attr=T:type>
2023-01-12 08:11:06.472756: I tensorflow/core/framework/op.cc:132] Op<name=StridedSlice; signature=input:T, begin:Index, end:Index, strides:Index -> output:T; attr=T:type; attr=Index:type,allowed=[DT_INT16, DT_INT32, DT_INT64]; attr=begin_mask:int,default=0; attr=end_mask:int,default=0; attr=ellipsis_mask:int,default=0; attr=new_axis_mask:int,default=0; attr=shrink_axis_mask:int,default=0>
2023-01-12 08:11:06.475838: I tensorflow/core/framework/op.cc:132] Op<name=StridedSliceAssign; signature=ref:Ref(T), begin:Index, end:Index, strides:Index, value:T -> output_ref:Ref(T); attr=T:type; attr=Index:type,allowed=[DT_INT32, DT_INT64]; attr=begin_mask:int,default=0; attr=end_mask:int,default=0; attr=ellipsis_mask:int,default=0; attr=new_axis_mask:int,default=0; attr=shrink_axis_mask:int,default=0>
2023-01-12 08:11:06.476035: I tensorflow/core/framework/op.cc:132] Op<name=StridedSliceGrad; signature=shape:Index, begin:Index, end:Index, strides:Index, dy:T -> output:T; attr=T:type; attr=Index:type,allowed=[DT_INT32, DT_INT64]; attr=begin_mask:int,default=0; attr=end_mask:int,default=0; attr=ellipsis_mask:int,default=0; attr=new_axis_mask:int,default=0; attr=shrink_axis_mask:int,default=0>
2023-01-12 08:11:06.476233: I tensorflow/core/framework/op.cc:132] Op<name=StringFormat; signature=inputs: -> output:string; attr=T:list(type),min=0; attr=template:string,default="%s"; attr=placeholder:string,default="%s"; attr=summarize:int,default=3>
2023-01-12 08:11:06.476328: I tensorflow/core/framework/op.cc:132] Op<name=StringJoin; signature=inputs:N*string -> output:string; attr=N:int,min=1; attr=separator:string,default="">
2023-01-12 08:11:06.476582: I tensorflow/core/framework/op.cc:132] Op<name=StringLength; signature=input:string -> output:int32; attr=unit:string,default="BYTE",allowed=["BYTE", "UTF8_CHAR"]>
2023-01-12 08:11:06.476765: I tensorflow/core/framework/op.cc:132] Op<name=StringListAttr; signature= -> ; attr=a:list(string); attr=b:string>
2023-01-12 08:11:06.476874: I tensorflow/core/framework/op.cc:132] Op<name=StringLower; signature=input:string -> output:string; attr=encoding:string,default="">
2023-01-12 08:11:06.477071: I tensorflow/core/framework/op.cc:132] Op<name=StringNGrams; signature=data:string, data_splits:Tsplits -> ngrams:string, ngrams_splits:Tsplits; attr=separator:string; attr=ngram_widths:list(int),min=0; attr=left_pad:string; attr=right_pad:string; attr=pad_width:int; attr=preserve_short_sequences:bool; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.477184: I tensorflow/core/framework/op.cc:132] Op<name=StringSplit; signature=input:string, delimiter:string -> indices:int64, values:string, shape:int64; attr=skip_empty:bool,default=true>
2023-01-12 08:11:06.477307: I tensorflow/core/framework/op.cc:132] Op<name=StringSplitV2; signature=input:string, sep:string -> indices:int64, values:string, shape:int64; attr=maxsplit:int,default=-1>
2023-01-12 08:11:06.477408: I tensorflow/core/framework/op.cc:132] Op<name=StringStrip; signature=input:string -> output:string>
2023-01-12 08:11:06.477500: I tensorflow/core/framework/op.cc:132] Op<name=StringToHashBucket; signature=string_tensor:string -> output:int64; attr=num_buckets:int,min=1>
2023-01-12 08:11:06.477839: I tensorflow/core/framework/op.cc:132] Op<name=StringToHashBucketFast; signature=input:string -> output:int64; attr=num_buckets:int,min=1>
2023-01-12 08:11:06.477962: I tensorflow/core/framework/op.cc:132] Op<name=StringToHashBucketStrong; signature=input:string -> output:int64; attr=num_buckets:int,min=1; attr=key:list(int)>
2023-01-12 08:11:06.478169: I tensorflow/core/framework/op.cc:132] Op<name=StringToNumber; signature=string_tensor:string -> output:out_type; attr=out_type:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]>
2023-01-12 08:11:06.478368: I tensorflow/core/framework/op.cc:132] Op<name=StringUpper; signature=input:string -> output:string; attr=encoding:string,default="">
2023-01-12 08:11:06.478490: I tensorflow/core/framework/op.cc:132] Op<name=StubResourceHandleOp; signature= -> resource:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.478621: I tensorflow/core/framework/op.cc:132] Op<name=Sub; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.478715: I tensorflow/core/framework/op.cc:132] Op<name=Substr; signature=input:string, pos:T, len:T -> output:string; attr=T:type,allowed=[DT_INT32, DT_INT64]; attr=unit:string,default="BYTE",allowed=["BYTE", "UTF8_CHAR"]>
2023-01-12 08:11:06.478840: I tensorflow/core/framework/op.cc:132] Op<name=Sum; signature=input:T, reduction_indices:Tidx -> output:T; attr=keep_dims:bool,default=false; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.478940: I tensorflow/core/framework/op.cc:132] Op<name=SummaryWriter; signature= -> writer:resource; attr=shared_name:string,default=""; attr=container:string,default=""; is_stateful=true>
2023-01-12 08:11:06.479230: I tensorflow/core/framework/op.cc:132] Op<name=Svd; signature=input:T -> s:T, u:T, v:T; attr=compute_uv:bool,default=true; attr=full_matrices:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.479363: I tensorflow/core/framework/op.cc:132] Op<name=Switch; signature=data:T, pred:bool -> output_false:T, output_true:T; attr=T:type>
2023-01-12 08:11:06.479428: I tensorflow/core/framework/op.cc:132] Op<name=SymbolicGradient; signature=input: -> output:; attr=Tin:list(type),min=1; attr=Tout:list(type),min=1; attr=f:func>
2023-01-12 08:11:06.479490: I tensorflow/core/framework/op.cc:132] Op<name=TFRecordDataset; signature=filenames:string, compression_type:string, buffer_size:int64 -> handle:variant; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.479561: I tensorflow/core/framework/op.cc:132] Op<name=TFRecordReader; signature= -> reader_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; attr=compression_type:string,default=""; is_stateful=true>
2023-01-12 08:11:06.479605: I tensorflow/core/framework/op.cc:132] Op<name=TFRecordReaderV2; signature= -> reader_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=compression_type:string,default=""; is_stateful=true>
2023-01-12 08:11:06.479663: I tensorflow/core/framework/op.cc:132] Op<name=TPUCompilationResult; signature= -> output:string>
2023-01-12 08:11:06.479766: I tensorflow/core/framework/op.cc:132] Op<name=TPUCompile; signature=dynamic_shapes:NumDynamicShapes*int64, guaranteed_constants: -> compilation_status:string, program:num_computations*string, may_modify_variables:num_computations*bool; attr=num_computations:int,min=0; attr=function:func; attr=metadata:string; attr=NumDynamicShapes:int,min=0; attr=Tguaranteed_constants:list(type),min=0; is_stateful=true>
2023-01-12 08:11:06.479840: I tensorflow/core/framework/op.cc:132] Op<name=TPUCompileSucceededAssert; signature=compilation_status:string -> ; is_stateful=true>
2023-01-12 08:11:06.479906: I tensorflow/core/framework/op.cc:132] Op<name=TPUEmbeddingActivations; signature=embedding_variable:float, sliced_activations:float -> output:float; attr=table_id:int,min=0; attr=lookup_id:int,min=0>
2023-01-12 08:11:06.480044: I tensorflow/core/framework/op.cc:132] Op<name=TPUExecute; signature=args:, key:string -> results:; attr=Targs:list(type),min=0; attr=Tresults:list(type),min=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:06.480115: I tensorflow/core/framework/op.cc:132] Op<name=TPUExecuteAndUpdateVariables; signature=args:, key:string -> results:; attr=Targs:list(type),min=0; attr=Tresults:list(type),min=0; attr=device_var_reads_indices:list(int),min=0; attr=device_var_updates_indices:list(int),min=0; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:06.480184: I tensorflow/core/framework/op.cc:132] Op<name=TPUOrdinalSelector; signature= -> device_ordinals:int32; is_stateful=true>
2023-01-12 08:11:06.480248: I tensorflow/core/framework/op.cc:132] Op<name=TPUPartitionedCall; signature=args:, device_ordinal:int32 -> output:; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; attr=f:func; attr=autotuner_thresh:int,default=0>
2023-01-12 08:11:06.480342: I tensorflow/core/framework/op.cc:132] Op<name=TPUPartitionedInput; signature=inputs:N*T -> output:T; attr=N:int,min=1; attr=T:type; attr=partition_dim:int,default=0>
2023-01-12 08:11:06.480420: I tensorflow/core/framework/op.cc:132] Op<name=TPUPartitionedOutput; signature=inputs:T -> output:num_splits*T; attr=T:type; attr=num_splits:int,min=1; attr=partition_dim:int,default=0>
2023-01-12 08:11:06.480626: I tensorflow/core/framework/op.cc:132] Op<name=TPUReplicateMetadata; signature= -> ; attr=num_replicas:int,min=0; attr=num_cores_per_replica:int,default=1; attr=topology:string,default=""; attr=use_tpu:bool,default=true; attr=device_assignment:list(int),default=[]; attr=computation_shape:list(int),default=[]; attr=host_compute_core:list(string),default=[]; attr=padding_map:list(string),default=[]; attr=step_marker_location:string,default="STEP_MARK_AT_ENTRY"; attr=allow_soft_placement:bool,default=false; attr=use_spmd_for_xla_partitioning:bool,default=false; attr=tpu_compile_options_proto:string,default="">
2023-01-12 08:11:06.480718: I tensorflow/core/framework/op.cc:132] Op<name=TPUReplicatedInput; signature=inputs:N*T -> output:T; attr=N:int,min=1; attr=T:type; attr=is_mirrored_variable:bool,default=false; attr=index:int,default=-1; attr=is_packed:bool,default=false>
2023-01-12 08:11:06.480778: I tensorflow/core/framework/op.cc:132] Op<name=TPUReplicatedOutput; signature=input:T -> outputs:num_replicas*T; attr=num_replicas:int,min=1; attr=T:type>
2023-01-12 08:11:06.480833: I tensorflow/core/framework/op.cc:132] Op<name=TPUReshardVariables; signature=vars:N*resource, new_format_key:string, format_state_var:resource -> ; attr=N:int,min=0; is_stateful=true>
2023-01-12 08:11:06.480879: I tensorflow/core/framework/op.cc:132] Op<name=TPURoundRobin; signature= -> device_ordinal:int32; is_stateful=true>
2023-01-12 08:11:06.480972: I tensorflow/core/framework/op.cc:132] Op<name=TakeDataset; signature=input_dataset:variant, count:int64 -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.481084: I tensorflow/core/framework/op.cc:132] Op<name=TakeManySparseFromTensorsMap; signature=sparse_handles:int64 -> sparse_indices:int64, sparse_values:dtype, sparse_shape:int64; attr=dtype:type; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.481141: I tensorflow/core/framework/op.cc:132] Op<name=TakeWhileDataset; signature=input_dataset:variant, other_arguments: -> handle:variant; attr=predicate:func; attr=Targuments:list(type),min=0; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.481316: I tensorflow/core/framework/op.cc:132] Op<name=Tan; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.481383: I tensorflow/core/framework/op.cc:132] Op<name=Tanh; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.481437: I tensorflow/core/framework/op.cc:132] Op<name=TanhGrad; signature=y:T, dy:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.481524: I tensorflow/core/framework/op.cc:132] Op<name=TemporaryVariable; signature= -> ref:Ref(dtype); attr=shape:shape; attr=dtype:type; attr=var_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.481612: I tensorflow/core/framework/op.cc:132] Op<name=TensorArray; signature=size:int32 -> handle:Ref(string); attr=dtype:type; attr=dynamic_size:bool,default=false; attr=clear_after_read:bool,default=true; attr=tensor_array_name:string,default=""; attr=element_shape:shape,default=<unknown>; is_stateful=true>
2023-01-12 08:11:06.481766: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayClose; signature=handle:Ref(string) -> >
2023-01-12 08:11:06.481820: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayCloseV2; signature=handle:string -> >
2023-01-12 08:11:06.481864: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayCloseV3; signature=handle:resource -> ; is_stateful=true>
2023-01-12 08:11:06.481952: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayConcat; signature=handle:Ref(string), flow_in:float -> value:dtype, lengths:int64; attr=dtype:type; attr=element_shape_except0:shape,default=<unknown>>
2023-01-12 08:11:06.482010: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayConcatV2; signature=handle:string, flow_in:float -> value:dtype, lengths:int64; attr=dtype:type; attr=element_shape_except0:shape,default=<unknown>>
2023-01-12 08:11:06.482070: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayConcatV3; signature=handle:resource, flow_in:float -> value:dtype, lengths:int64; attr=dtype:type; attr=element_shape_except0:shape,default=<unknown>; is_stateful=true>
2023-01-12 08:11:06.482129: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGather; signature=handle:Ref(string), indices:int32, flow_in:float -> value:dtype; attr=dtype:type; attr=element_shape:shape,default=<unknown>>
2023-01-12 08:11:06.482392: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGatherV2; signature=handle:string, indices:int32, flow_in:float -> value:dtype; attr=dtype:type; attr=element_shape:shape,default=<unknown>>
2023-01-12 08:11:06.482473: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGatherV3; signature=handle:resource, indices:int32, flow_in:float -> value:dtype; attr=dtype:type; attr=element_shape:shape,default=<unknown>; is_stateful=true>
2023-01-12 08:11:06.482590: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGrad; signature=handle:string, flow_in:float -> grad_handle:Ref(string); attr=source:string; is_stateful=true>
2023-01-12 08:11:06.482672: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGradV2; signature=handle:string, flow_in:float -> grad_handle:string; attr=source:string; is_stateful=true>
2023-01-12 08:11:06.482738: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGradV3; signature=handle:resource, flow_in:float -> grad_handle:resource, flow_out:float; attr=source:string; is_stateful=true>
2023-01-12 08:11:06.482806: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayGradWithShape; signature=handle:resource, flow_in:float, shape_to_prepend:int32 -> grad_handle:resource, flow_out:float; attr=source:string; is_stateful=true>
2023-01-12 08:11:06.482863: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayPack; signature=handle:Ref(string), flow_in:float -> value:dtype; attr=dtype:type; attr=element_shape:shape,default=<unknown>>
2023-01-12 08:11:06.482952: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayRead; signature=handle:Ref(string), index:int32, flow_in:float -> value:dtype; attr=dtype:type>
2023-01-12 08:11:06.483050: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayReadV2; signature=handle:string, index:int32, flow_in:float -> value:dtype; attr=dtype:type>
2023-01-12 08:11:06.483115: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayReadV3; signature=handle:resource, index:int32, flow_in:float -> value:dtype; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:06.483146: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayScatter; signature=handle:Ref(string), indices:int32, value:T, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483365: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayScatterV2; signature=handle:string, indices:int32, value:T, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483434: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayScatterV3; signature=handle:resource, indices:int32, value:T, flow_in:float -> flow_out:float; attr=T:type; is_stateful=true>
2023-01-12 08:11:06.483481: I tensorflow/core/framework/op.cc:132] Op<name=TensorArraySize; signature=handle:Ref(string), flow_in:float -> size:int32>
2023-01-12 08:11:06.483505: I tensorflow/core/framework/op.cc:132] Op<name=TensorArraySizeV2; signature=handle:string, flow_in:float -> size:int32>
2023-01-12 08:11:06.483524: I tensorflow/core/framework/op.cc:132] Op<name=TensorArraySizeV3; signature=handle:resource, flow_in:float -> size:int32; is_stateful=true>
2023-01-12 08:11:06.483544: I tensorflow/core/framework/op.cc:132] Op<name=TensorArraySplit; signature=handle:Ref(string), value:T, lengths:int64, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483564: I tensorflow/core/framework/op.cc:132] Op<name=TensorArraySplitV2; signature=handle:string, value:T, lengths:int64, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483587: I tensorflow/core/framework/op.cc:132] Op<name=TensorArraySplitV3; signature=handle:resource, value:T, lengths:int64, flow_in:float -> flow_out:float; attr=T:type; is_stateful=true>
2023-01-12 08:11:06.483608: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayUnpack; signature=handle:Ref(string), value:T, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483642: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayV2; signature=size:int32 -> handle:string; attr=dtype:type; attr=element_shape:shape,default=<unknown>; attr=dynamic_size:bool,default=false; attr=clear_after_read:bool,default=true; attr=tensor_array_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.483707: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayV3; signature=size:int32 -> handle:resource, flow:float; attr=dtype:type; attr=element_shape:shape,default=<unknown>; attr=dynamic_size:bool,default=false; attr=clear_after_read:bool,default=true; attr=identical_element_shapes:bool,default=false; attr=tensor_array_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.483801: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayWrite; signature=handle:Ref(string), index:int32, value:T, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483855: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayWriteV2; signature=handle:string, index:int32, value:T, flow_in:float -> flow_out:float; attr=T:type>
2023-01-12 08:11:06.483890: I tensorflow/core/framework/op.cc:132] Op<name=TensorArrayWriteV3; signature=handle:resource, index:int32, value:T, flow_in:float -> flow_out:float; attr=T:type; is_stateful=true>
2023-01-12 08:11:06.483928: I tensorflow/core/framework/op.cc:132] Op<name=TensorDataset; signature=components: -> handle:variant; attr=Toutput_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.483999: I tensorflow/core/framework/op.cc:132] Op<name=TensorListConcat; signature=input_handle:variant -> tensor:element_dtype, lengths:int64; attr=element_dtype:type; attr=element_shape:shape,default=<unknown>>
2023-01-12 08:11:06.484064: I tensorflow/core/framework/op.cc:132] Op<name=TensorListConcatLists; signature=input_a:variant, input_b:variant -> output:variant; attr=element_dtype:type>
2023-01-12 08:11:06.484238: I tensorflow/core/framework/op.cc:132] Op<name=TensorListConcatV2; signature=input_handle:variant, element_shape:shape_type, leading_dims:int64 -> tensor:element_dtype, lengths:int64; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.484428: I tensorflow/core/framework/op.cc:132] Op<name=TensorListElementShape; signature=input_handle:variant -> element_shape:shape_type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.484524: I tensorflow/core/framework/op.cc:132] Op<name=TensorListFromTensor; signature=tensor:element_dtype, element_shape:shape_type -> output_handle:variant; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.484592: I tensorflow/core/framework/op.cc:132] Op<name=TensorListGather; signature=input_handle:variant, indices:int32, element_shape:int32 -> values:element_dtype; attr=element_dtype:type>
2023-01-12 08:11:06.484653: I tensorflow/core/framework/op.cc:132] Op<name=TensorListGetItem; signature=input_handle:variant, index:int32, element_shape:int32 -> item:element_dtype; attr=element_dtype:type>
2023-01-12 08:11:06.484708: I tensorflow/core/framework/op.cc:132] Op<name=TensorListLength; signature=input_handle:variant -> length:int32>
2023-01-12 08:11:06.484767: I tensorflow/core/framework/op.cc:132] Op<name=TensorListPopBack; signature=input_handle:variant, element_shape:int32 -> output_handle:variant, tensor:element_dtype; attr=element_dtype:type>
2023-01-12 08:11:06.484946: I tensorflow/core/framework/op.cc:132] Op<name=TensorListPushBack; signature=input_handle:variant, tensor:element_dtype -> output_handle:variant; attr=element_dtype:type>
2023-01-12 08:11:06.485193: I tensorflow/core/framework/op.cc:132] Op<name=TensorListPushBackBatch; signature=input_handles:variant, tensor:element_dtype -> output_handles:variant; attr=element_dtype:type>
2023-01-12 08:11:06.485414: I tensorflow/core/framework/op.cc:132] Op<name=TensorListReserve; signature=element_shape:shape_type, num_elements:int32 -> handle:variant; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.485713: I tensorflow/core/framework/op.cc:132] Op<name=TensorListResize; signature=input_handle:variant, size:int32 -> output_handle:variant>
2023-01-12 08:11:06.486407: I tensorflow/core/framework/op.cc:132] Op<name=TensorListScatter; signature=tensor:element_dtype, indices:int32, element_shape:shape_type -> output_handle:variant; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.486613: I tensorflow/core/framework/op.cc:132] Op<name=TensorListScatterIntoExistingList; signature=input_handle:variant, tensor:element_dtype, indices:int32 -> output_handle:variant; attr=element_dtype:type>
2023-01-12 08:11:06.486808: I tensorflow/core/framework/op.cc:132] Op<name=TensorListScatterV2; signature=tensor:element_dtype, indices:int32, element_shape:shape_type, num_elements:int32 -> output_handle:variant; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.487146: I tensorflow/core/framework/op.cc:132] Op<name=TensorListSetItem; signature=input_handle:variant, index:int32, item:element_dtype -> output_handle:variant; attr=element_dtype:type>
2023-01-12 08:11:06.487409: I tensorflow/core/framework/op.cc:132] Op<name=TensorListSplit; signature=tensor:element_dtype, element_shape:shape_type, lengths:int64 -> output_handle:variant; attr=element_dtype:type; attr=shape_type:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.488417: I tensorflow/core/framework/op.cc:132] Op<name=TensorListStack; signature=input_handle:variant, element_shape:int32 -> tensor:element_dtype; attr=element_dtype:type; attr=num_elements:int,default=-1>
2023-01-12 08:11:06.488569: I tensorflow/core/framework/op.cc:132] Op<name=TensorMapErase; signature=input_handle:variant, key:key_dtype -> output_handle:variant; attr=key_dtype:type; attr=value_dtype:type>
2023-01-12 08:11:06.488654: I tensorflow/core/framework/op.cc:132] Op<name=TensorMapHasKey; signature=input_handle:variant, key:key_dtype -> has_key:bool; attr=key_dtype:type>
2023-01-12 08:11:06.488708: I tensorflow/core/framework/op.cc:132] Op<name=TensorMapInsert; signature=input_handle:variant, key:key_dtype, value:value_dtype -> output_handle:variant; attr=key_dtype:type; attr=value_dtype:type>
2023-01-12 08:11:06.488742: I tensorflow/core/framework/op.cc:132] Op<name=TensorMapLookup; signature=input_handle:variant, key:key_dtype -> value:value_dtype; attr=key_dtype:type; attr=value_dtype:type>
2023-01-12 08:11:06.488774: I tensorflow/core/framework/op.cc:132] Op<name=TensorMapSize; signature=input_handle:variant -> size:int32>
2023-01-12 08:11:06.488808: I tensorflow/core/framework/op.cc:132] Op<name=TensorMapStackKeys; signature=input_handle:variant -> keys:key_dtype; attr=key_dtype:type>
2023-01-12 08:11:06.488882: I tensorflow/core/framework/op.cc:132] Op<name=TensorScatterAdd; signature=tensor:T, indices:Tindices, updates:T -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.488937: I tensorflow/core/framework/op.cc:132] Op<name=TensorScatterMax; signature=tensor:T, indices:Tindices, updates:T -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.488985: I tensorflow/core/framework/op.cc:132] Op<name=TensorScatterMin; signature=tensor:T, indices:Tindices, updates:T -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.489364: I tensorflow/core/framework/op.cc:132] Op<name=TensorScatterSub; signature=tensor:T, indices:Tindices, updates:T -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.489527: I tensorflow/core/framework/op.cc:132] Op<name=TensorScatterUpdate; signature=tensor:T, indices:Tindices, updates:T -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT16, DT_INT32, DT_INT64, DT_UINT16]>
2023-01-12 08:11:06.489634: I tensorflow/core/framework/op.cc:132] Op<name=TensorSliceDataset; signature=components: -> handle:variant; attr=Toutput_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=is_files:bool,default=false; attr=metadata:string,default=""; attr=replicate_on_split:bool,default=false; is_stateful=true>
2023-01-12 08:11:06.489757: I tensorflow/core/framework/op.cc:132] Op<name=TensorStridedSliceUpdate; signature=input:T, begin:Index, end:Index, strides:Index, value:T -> output:T; attr=T:type; attr=Index:type,allowed=[DT_INT32, DT_INT64]; attr=begin_mask:int,default=0; attr=end_mask:int,default=0; attr=ellipsis_mask:int,default=0; attr=new_axis_mask:int,default=0; attr=shrink_axis_mask:int,default=0>
2023-01-12 08:11:06.489862: I tensorflow/core/framework/op.cc:132] Op<name=TensorSummary; signature=tensor:T -> summary:string; attr=T:type; attr=description:string,default=""; attr=labels:list(string),default=[]; attr=display_name:string,default="">
2023-01-12 08:11:06.489948: I tensorflow/core/framework/op.cc:132] Op<name=TensorSummaryV2; signature=tag:string, tensor:T, serialized_summary_metadata:string -> summary:string; attr=T:type>
2023-01-12 08:11:06.490122: I tensorflow/core/framework/op.cc:132] Op<name=TestAttr; signature= -> out:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]; is_stateful=true>
2023-01-12 08:11:06.490183: I tensorflow/core/framework/op.cc:132] Op<name=TestStringOutput; signature=input:float -> output1:float, output2:string>
2023-01-12 08:11:06.490225: I tensorflow/core/framework/op.cc:132] Op<name=TextLineDataset; signature=filenames:string, compression_type:string, buffer_size:int64 -> handle:variant; attr=metadata:string,default=""; is_stateful=true>
2023-01-12 08:11:06.490263: I tensorflow/core/framework/op.cc:132] Op<name=TextLineReader; signature= -> reader_handle:Ref(string); attr=skip_header_lines:int,default=0; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.490303: I tensorflow/core/framework/op.cc:132] Op<name=TextLineReaderV2; signature= -> reader_handle:resource; attr=skip_header_lines:int,default=0; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.490334: I tensorflow/core/framework/op.cc:132] Op<name=TfLiteSubgraphExecute; signature=subgraph_key:string, args: -> output:; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0>
2023-01-12 08:11:06.490364: I tensorflow/core/framework/op.cc:132] Op<name=ThreadPoolDataset; signature=input_dataset:variant, thread_pool:resource -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; is_stateful=true>
2023-01-12 08:11:06.490443: I tensorflow/core/framework/op.cc:132] Op<name=ThreadPoolHandle; signature= -> handle:resource; attr=num_threads:int; attr=max_intra_op_parallelism:int,default=1; attr=display_name:string; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.490512: I tensorflow/core/framework/op.cc:132] Op<name=ThreadUnsafeUnigramCandidateSampler; signature=true_classes:int64 -> sampled_candidates:int64, true_expected_count:float, sampled_expected_count:float; attr=num_true:int,min=1; attr=num_sampled:int,min=1; attr=unique:bool; attr=range_max:int,min=1; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:06.490587: I tensorflow/core/framework/op.cc:132] Op<name=Tile; signature=input:T, multiples:Tmultiples -> output:T; attr=T:type; attr=Tmultiples:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.490684: I tensorflow/core/framework/op.cc:132] Op<name=TileGrad; signature=input:T, multiples:int32 -> output:T; attr=T:type>
2023-01-12 08:11:06.490805: I tensorflow/core/framework/op.cc:132] Op<name=Timestamp; signature= -> ts:double; is_stateful=true>
2023-01-12 08:11:06.490973: I tensorflow/core/framework/op.cc:132] Op<name=ToBool; signature=input:T -> output:bool; attr=T:type>
2023-01-12 08:11:06.491210: I tensorflow/core/framework/op.cc:132] Op<name=TopK; signature=input:T -> values:T, indices:int32; attr=k:int,min=0; attr=sorted:bool,default=true; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.491329: I tensorflow/core/framework/op.cc:132] Op<name=TopKUnique; signature=input:float -> topk:float, topk_indices:int32; attr=k:int>
2023-01-12 08:11:06.491399: I tensorflow/core/framework/op.cc:132] Op<name=TopKV2; signature=input:T, k:int32 -> values:T, indices:int32; attr=sorted:bool,default=true; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.491435: I tensorflow/core/framework/op.cc:132] Op<name=TopKWithUnique; signature=input:float -> topk:float, topk_indices:int32; attr=k:int>
2023-01-12 08:11:06.491452: I tensorflow/core/framework/op.cc:132] Op<name=TpuHandleToProtoKey; signature=uid:int64 -> proto_keys:string>
2023-01-12 08:11:06.491477: I tensorflow/core/framework/op.cc:132] Op<name=Transpose; signature=x:T, perm:Tperm -> y:T; attr=T:type; attr=Tperm:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.491503: I tensorflow/core/framework/op.cc:132] Op<name=TridiagonalMatMul; signature=superdiag:T, maindiag:T, subdiag:T, rhs:T -> output:T; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.491566: I tensorflow/core/framework/op.cc:132] Op<name=TridiagonalSolve; signature=diagonals:T, rhs:T -> output:T; attr=partial_pivoting:bool,default=true; attr=perturb_singular:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.491622: I tensorflow/core/framework/op.cc:132] Op<name=TruncateDiv; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_UINT32, DT_UINT64, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.491663: I tensorflow/core/framework/op.cc:132] Op<name=TruncateMod; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_INT32, DT_INT64, DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:06.491701: I tensorflow/core/framework/op.cc:132] Op<name=TruncatedNormal; signature=shape:T -> output:dtype; attr=seed:int,default=0; attr=seed2:int,default=0; attr=dtype:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=T:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.491743: I tensorflow/core/framework/op.cc:132] Op<name=TwoFloatInputs; signature=a:float, b:float -> >
2023-01-12 08:11:06.491781: I tensorflow/core/framework/op.cc:132] Op<name=TwoFloatInputsFloatOutput; signature=a:float, b:float -> c:float>
2023-01-12 08:11:06.491803: I tensorflow/core/framework/op.cc:132] Op<name=TwoFloatInputsIntOutput; signature=a:float, b:float -> c:int32>
2023-01-12 08:11:06.491832: I tensorflow/core/framework/op.cc:132] Op<name=TwoFloatOutputs; signature= -> a:float, b:float>
2023-01-12 08:11:06.491855: I tensorflow/core/framework/op.cc:132] Op<name=TwoIntInputs; signature=a:int32, b:int32 -> >
2023-01-12 08:11:06.491875: I tensorflow/core/framework/op.cc:132] Op<name=TwoIntOutputs; signature= -> a:int32, b:int32>
2023-01-12 08:11:06.491924: I tensorflow/core/framework/op.cc:132] Op<name=TwoRefsIn; signature=a:Ref(T), b:Ref(T) -> ; attr=T:type>
2023-01-12 08:11:06.491958: I tensorflow/core/framework/op.cc:132] Op<name=TypeList; signature=a: -> ; attr=T:list(type),min=0>
2023-01-12 08:11:06.492002: I tensorflow/core/framework/op.cc:132] Op<name=TypeListRestrict; signature=a: -> ; attr=T:list(type),min=1,allowed=[DT_STRING, DT_BOOL]>
2023-01-12 08:11:06.492025: I tensorflow/core/framework/op.cc:132] Op<name=TypeListTwice; signature=a:, b: -> ; attr=T:list(type),min=0>
2023-01-12 08:11:06.492095: I tensorflow/core/framework/op.cc:132] Op<name=Unary; signature=a:T -> b:T; attr=T:type>
2023-01-12 08:11:06.492166: I tensorflow/core/framework/op.cc:132] Op<name=Unbatch; signature=batched_tensor:T, batch_index:int64, id:int64 -> unbatched_tensor:T; attr=timeout_micros:int; attr=container:string,default=""; attr=shared_name:string,default=""; attr=T:type>
2023-01-12 08:11:06.492220: I tensorflow/core/framework/op.cc:132] Op<name=UnbatchDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.492259: I tensorflow/core/framework/op.cc:132] Op<name=UnbatchGrad; signature=original_input:T, batch_index:int64, grad:T, id:int64 -> batched_grad:T; attr=container:string,default=""; attr=shared_name:string,default=""; attr=T:type>
2023-01-12 08:11:06.492287: I tensorflow/core/framework/op.cc:132] Op<name=UncompressElement; signature=compressed:variant -> components:; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1>
2023-01-12 08:11:06.492442: I tensorflow/core/framework/op.cc:132] Op<name=UnicodeDecode; signature=input:string -> row_splits:Tsplits, char_values:int32; attr=input_encoding:string; attr=errors:string,default="replace",allowed=["strict", "replace", "ignore"]; attr=replacement_char:int,default=65533; attr=replace_control_characters:bool,default=false; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.492588: I tensorflow/core/framework/op.cc:132] Op<name=UnicodeDecodeWithOffsets; signature=input:string -> row_splits:Tsplits, char_values:int32, char_to_byte_starts:int64; attr=input_encoding:string; attr=errors:string,default="replace",allowed=["strict", "replace", "ignore"]; attr=replacement_char:int,default=65533; attr=replace_control_characters:bool,default=false; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.492675: I tensorflow/core/framework/op.cc:132] Op<name=UnicodeEncode; signature=input_values:int32, input_splits:Tsplits -> output:string; attr=errors:string,default="replace",allowed=["ignore", "replace", "strict"]; attr=output_encoding:string,allowed=["UTF-8", "UTF-16-BE", "UTF-32-BE"]; attr=replacement_char:int,default=65533; attr=Tsplits:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.492720: I tensorflow/core/framework/op.cc:132] Op<name=UnicodeScript; signature=input:int32 -> output:int32>
2023-01-12 08:11:06.492809: I tensorflow/core/framework/op.cc:132] Op<name=UnicodeTranscode; signature=input:string -> output:string; attr=input_encoding:string; attr=output_encoding:string,allowed=["UTF-8", "UTF-16-BE", "UTF-32-BE"]; attr=errors:string,default="replace",allowed=["strict", "replace", "ignore"]; attr=replacement_char:int,default=65533; attr=replace_control_characters:bool,default=false>
2023-01-12 08:11:06.492881: I tensorflow/core/framework/op.cc:132] Op<name=UniformCandidateSampler; signature=true_classes:int64 -> sampled_candidates:int64, true_expected_count:float, sampled_expected_count:float; attr=num_true:int,min=1; attr=num_sampled:int,min=1; attr=unique:bool; attr=range_max:int,min=1; attr=seed:int,default=0; attr=seed2:int,default=0; is_stateful=true>
2023-01-12 08:11:06.985464: I tensorflow/core/framework/op.cc:132] Op<name=UniformDequantize; signature=input:Tin, scales:float, zero_points:int32 -> output:Tout; attr=Tin:type,allowed=[DT_QINT8, DT_QINT32]; attr=Tout:type,allowed=[DT_FLOAT]; attr=quantization_axis:int,default=-1; attr=quantization_min_val:int; attr=quantization_max_val:int>
2023-01-12 08:11:06.985841: I tensorflow/core/framework/op.cc:132] Op<name=UniformQuantize; signature=input:Tin, scales:float, zero_points:int32 -> output:Tout; attr=Tin:type,allowed=[DT_FLOAT]; attr=Tout:type,allowed=[DT_QINT8, DT_QINT32]; attr=quantization_axis:int,default=-1; attr=quantization_min_val:int; attr=quantization_max_val:int>
2023-01-12 08:11:06.986172: I tensorflow/core/framework/op.cc:132] Op<name=UniformQuantizedClipByValue; signature=operand:T, min:T, max:T, scales:float, zero_points:int32 -> output:T; attr=T:type,allowed=[DT_QINT32]; attr=quantization_axis:int,default=-1; attr=quantization_min_val:int; attr=quantization_max_val:int>
2023-01-12 08:11:06.986765: I tensorflow/core/framework/op.cc:132] Op<name=UniformQuantizedDot; signature=lhs:Tin, rhs:Tin, lhs_scales:float, lhs_zero_points:int32, rhs_scales:float, rhs_zero_points:int32, output_scales:float, output_zero_points:int32 -> output:Tout; attr=Tin:type,allowed=[DT_QINT8]; attr=Tout:type,allowed=[DT_QINT32]; attr=lhs_quantization_axis:int,default=-1; attr=lhs_quantization_min_val:int; attr=lhs_quantization_max_val:int; attr=rhs_quantization_axis:int,default=-1; attr=rhs_quantization_min_val:int; attr=rhs_quantization_max_val:int; attr=output_quantization_axis:int,default=-1; attr=output_quantization_min_val:int; attr=output_quantization_max_val:int>
2023-01-12 08:11:06.987059: I tensorflow/core/framework/op.cc:132] Op<name=UniformQuantizedDotHybrid; signature=lhs:Tlhs, rhs:Trhs, rhs_scales:float, rhs_zero_points:int32 -> output:Tout; attr=Tlhs:type,allowed=[DT_FLOAT]; attr=Trhs:type,allowed=[DT_QINT8]; attr=Tout:type,allowed=[DT_FLOAT]; attr=rhs_quantization_axis:int,default=-1; attr=rhs_quantization_min_val:int; attr=rhs_quantization_max_val:int>
2023-01-12 08:11:06.987449: I tensorflow/core/framework/op.cc:132] Op<name=UniformRequantize; signature=input:Tin, input_scales:float, input_zero_points:int32, output_scales:float, output_zero_points:int32 -> output:Tout; attr=Tin:type,allowed=[DT_QINT8, DT_QINT32]; attr=Tout:type,allowed=[DT_QINT8, DT_QINT32]; attr=input_quantization_axis:int,default=-1; attr=input_quantization_min_val:int; attr=input_quantization_max_val:int; attr=output_quantization_axis:int,default=-1; attr=output_quantization_min_val:int; attr=output_quantization_max_val:int>
2023-01-12 08:11:06.987629: I tensorflow/core/framework/op.cc:132] Op<name=Unique; signature=x:T -> y:T, idx:out_idx; attr=T:type; attr=out_idx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.987727: I tensorflow/core/framework/op.cc:132] Op<name=UniqueDataset; signature=input_dataset:variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.987851: I tensorflow/core/framework/op.cc:132] Op<name=UniqueV2; signature=x:T, axis:Taxis -> y:T, idx:out_idx; attr=T:type; attr=Taxis:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=out_idx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.987955: I tensorflow/core/framework/op.cc:132] Op<name=UniqueWithCounts; signature=x:T -> y:T, idx:out_idx, count:out_idx; attr=T:type; attr=out_idx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.988048: I tensorflow/core/framework/op.cc:132] Op<name=UniqueWithCountsV2; signature=x:T, axis:Taxis -> y:T, idx:out_idx, count:out_idx; attr=T:type; attr=Taxis:type,default=DT_INT64,allowed=[DT_INT32, DT_INT64]; attr=out_idx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.989782: I tensorflow/core/framework/op.cc:132] Op<name=Unpack; signature=value:T -> output:num*T; attr=num:int,min=0; attr=T:type; attr=axis:int,default=0>
2023-01-12 08:11:06.989876: I tensorflow/core/framework/op.cc:132] Op<name=UnravelIndex; signature=indices:Tidx, dims:Tidx -> output:Tidx; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.989931: I tensorflow/core/framework/op.cc:132] Op<name=UnsortedSegmentJoin; signature=inputs:string, segment_ids:Tindices, num_segments:Tnumsegments -> output:string; attr=separator:string,default=""; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.990021: I tensorflow/core/framework/op.cc:132] Op<name=UnsortedSegmentMax; signature=data:T, segment_ids:Tindices, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.990090: I tensorflow/core/framework/op.cc:132] Op<name=UnsortedSegmentMin; signature=data:T, segment_ids:Tindices, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.990340: I tensorflow/core/framework/op.cc:132] Op<name=UnsortedSegmentProd; signature=data:T, segment_ids:Tindices, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.990480: I tensorflow/core/framework/op.cc:132] Op<name=UnsortedSegmentSum; signature=data:T, segment_ids:Tindices, num_segments:Tnumsegments -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=Tnumsegments:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.990559: I tensorflow/core/framework/op.cc:132] Op<name=Unstage; signature= -> values:; attr=capacity:int,default=0,min=0; attr=memory_limit:int,default=0,min=0; attr=dtypes:list(type),min=1; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.990626: I tensorflow/core/framework/op.cc:132] Op<name=UnwrapDatasetVariant; signature=input_handle:variant -> output_handle:variant>
2023-01-12 08:11:06.990697: I tensorflow/core/framework/op.cc:132] Op<name=UpperBound; signature=sorted_inputs:T, values:T -> output:out_type; attr=T:type; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.990822: I tensorflow/core/framework/op.cc:132] Op<name=VarHandleOp; signature= -> resource:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=dtype:type; attr=shape:shape; attr=allowed_devices:list(string),default=[]; is_stateful=true>
2023-01-12 08:11:06.990899: I tensorflow/core/framework/op.cc:132] Op<name=VarIsInitializedOp; signature=resource:resource -> is_initialized:bool; is_stateful=true>
2023-01-12 08:11:06.990951: I tensorflow/core/framework/op.cc:132] Op<name=Variable; signature= -> ref:Ref(dtype); attr=shape:shape; attr=dtype:type; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.991000: I tensorflow/core/framework/op.cc:132] Op<name=VariableShape; signature=input:resource -> output:out_type; attr=out_type:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; is_stateful=true>
2023-01-12 08:11:06.991042: I tensorflow/core/framework/op.cc:132] Op<name=VariableV2; signature= -> ref:Ref(dtype); attr=shape:shape; attr=dtype:type; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.991126: I tensorflow/core/framework/op.cc:132] Op<name=Where; signature=input:T -> index:int64; attr=T:type,default=DT_BOOL,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]>
2023-01-12 08:11:06.991196: I tensorflow/core/framework/op.cc:132] Op<name=While; signature=input: -> output:; attr=T:list(type),min=0; attr=cond:func; attr=body:func; attr=output_shapes:list(shape),default=[]; attr=parallel_iterations:int,default=10; is_stateful=true>
2023-01-12 08:11:06.991236: I tensorflow/core/framework/op.cc:132] Op<name=WholeFileReader; signature= -> reader_handle:Ref(string); attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.991329: I tensorflow/core/framework/op.cc:132] Op<name=WholeFileReaderV2; signature= -> reader_handle:resource; attr=container:string,default=""; attr=shared_name:string,default=""; is_stateful=true>
2023-01-12 08:11:06.991402: I tensorflow/core/framework/op.cc:132] Op<name=WindowDataset; signature=input_dataset:variant, size:int64, shift:int64, stride:int64, drop_remainder:bool -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=metadata:string,default="">
2023-01-12 08:11:06.991443: I tensorflow/core/framework/op.cc:132] Op<name=WindowOp; signature=inputs: -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=Tinputs:list(type),min=1>
2023-01-12 08:11:06.991497: I tensorflow/core/framework/op.cc:132] Op<name=WorkerHeartbeat; signature=request:string -> response:string; is_stateful=true>
2023-01-12 08:11:06.991546: I tensorflow/core/framework/op.cc:132] Op<name=WrapDatasetVariant; signature=input_handle:variant -> output_handle:variant>
2023-01-12 08:11:06.991623: I tensorflow/core/framework/op.cc:132] Op<name=WriteAudioSummary; signature=writer:resource, step:int64, tag:string, tensor:float, sample_rate:float -> ; attr=max_outputs:int,default=3,min=1; is_stateful=true>
2023-01-12 08:11:06.991698: I tensorflow/core/framework/op.cc:132] Op<name=WriteFile; signature=filename:string, contents:string -> ; is_stateful=true>
2023-01-12 08:11:06.991758: I tensorflow/core/framework/op.cc:132] Op<name=WriteGraphSummary; signature=writer:resource, step:int64, tensor:string -> ; is_stateful=true>
2023-01-12 08:11:06.991856: I tensorflow/core/framework/op.cc:132] Op<name=WriteHistogramSummary; signature=writer:resource, step:int64, tag:string, values:T -> ; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; is_stateful=true>
2023-01-12 08:11:06.992331: I tensorflow/core/framework/op.cc:132] Op<name=WriteImageSummary; signature=writer:resource, step:int64, tag:string, tensor:T, bad_color:uint8 -> ; attr=max_images:int,default=3,min=1; attr=T:type,default=DT_FLOAT,allowed=[DT_UINT8, DT_DOUBLE, DT_FLOAT, DT_HALF]; is_stateful=true>
2023-01-12 08:11:06.992411: I tensorflow/core/framework/op.cc:132] Op<name=WriteRawProtoSummary; signature=writer:resource, step:int64, tensor:string -> ; is_stateful=true>
2023-01-12 08:11:06.992501: I tensorflow/core/framework/op.cc:132] Op<name=WriteScalarSummary; signature=writer:resource, step:int64, tag:string, value:T -> ; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; is_stateful=true>
2023-01-12 08:11:06.992729: I tensorflow/core/framework/op.cc:132] Op<name=WriteSummary; signature=writer:resource, step:int64, tensor:T, tag:string, summary_metadata:string -> ; attr=T:type; is_stateful=true>
2023-01-12 08:11:06.992780: I tensorflow/core/framework/op.cc:132] Op<name=Xdivy; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:06.992826: I tensorflow/core/framework/op.cc:132] Op<name=XlaAllReduce; signature=input:T, group_assignment:int32 -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_INT32, DT_UINT32]; attr=reduce_op:string,allowed=["Min", "Max", "Mul", "Add", "Mean"]; attr=mode:string,allowed=["CrossReplica", "CrossReplicaAndPartition"]>
2023-01-12 08:11:06.992886: I tensorflow/core/framework/op.cc:132] Op<name=XlaBroadcastHelper; signature=lhs:T, rhs:T, broadcast_dims:Tindices -> lhs_output:T, rhs_output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.992930: I tensorflow/core/framework/op.cc:132] Op<name=XlaCallModule; signature=args: -> output:; attr=module:string; attr=Sout:list(shape),min=0; attr=Tout:list(type),min=0; attr=Tin:list(type),min=0; attr=dim_args_spec:list(string),min=0>
2023-01-12 08:11:06.992974: I tensorflow/core/framework/op.cc:132] Op<name=XlaClusterOutput; signature=input:T -> outputs:T; attr=T:type>
2023-01-12 08:11:06.993077: I tensorflow/core/framework/op.cc:132] Op<name=XlaConcatND; signature=inputs:N*T -> output:T; attr=T:type; attr=N:int,min=1; attr=num_concats:list(int); attr=paddings:list(int),default=[]>
2023-01-12 08:11:06.993235: I tensorflow/core/framework/op.cc:132] Op<name=XlaConv; signature=lhs:T, rhs:T, window_strides:Tindices, padding:Tindices, lhs_dilation:Tindices, rhs_dilation:Tindices, feature_group_count:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=dimension_numbers:string; attr=precision_config:string>
2023-01-12 08:11:06.993336: I tensorflow/core/framework/op.cc:132] Op<name=XlaConvV2; signature=lhs:LhsT, rhs:RhsT, window_strides:Tindices, padding:Tindices, lhs_dilation:Tindices, rhs_dilation:Tindices, feature_group_count:Tindices -> output:preferred_element_type; attr=LhsT:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=RhsT:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=dimension_numbers:string; attr=precision_config:string; attr=preferred_element_type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=batch_group_count:int,default=1>
2023-01-12 08:11:06.993403: I tensorflow/core/framework/op.cc:132] Op<name=XlaCustomCall; signature=args: -> output:dtype; attr=target_name:string; attr=backend_config:string; attr=T:list(type),min=0; attr=dtype:type; attr=shape:shape>
2023-01-12 08:11:06.993461: I tensorflow/core/framework/op.cc:132] Op<name=XlaCustomCallV2; signature=operands: -> results:; attr=call_target_name:string; attr=backend_config:string; attr=has_side_effect:bool; attr=operand_dtypes:list(type),min=0; attr=result_dtypes:list(type),min=0; attr=result_shapes:list(shape),min=0>
2023-01-12 08:11:06.993496: I tensorflow/core/framework/op.cc:132] Op<name=XlaDequantize; signature=input:uint32 -> output:bfloat16; attr=min_range:float; attr=max_range:float; attr=mode:string; attr=transpose_output:bool; is_stateful=true>
2023-01-12 08:11:06.993634: I tensorflow/core/framework/op.cc:132] Op<name=XlaDot; signature=lhs:T, rhs:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=dimension_numbers:string; attr=precision_config:string>
2023-01-12 08:11:06.993855: I tensorflow/core/framework/op.cc:132] Op<name=XlaDotV2; signature=lhs:LhsT, rhs:RhsT -> output:preferred_element_type; attr=LhsT:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=RhsT:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=dimension_numbers:string; attr=precision_config:string; attr=preferred_element_type:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.993980: I tensorflow/core/framework/op.cc:132] Op<name=XlaDynamicSlice; signature=input:T, start_indices:Tindices, size_indices:Tindices -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.994063: I tensorflow/core/framework/op.cc:132] Op<name=XlaDynamicUpdateSlice; signature=input:T, update:T, indices:Tindices -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.994304: I tensorflow/core/framework/op.cc:132] Op<name=XlaEinsum; signature=a:T, b:T -> product:T; attr=equation:string; attr=T:type,allowed=[DT_COMPLEX64, DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:06.994619: I tensorflow/core/framework/op.cc:132] Op<name=XlaGather; signature=operand:T, start_indices:Tindices, slice_sizes:Tindices -> output:T; attr=dimension_numbers:string; attr=indices_are_sorted:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.994727: I tensorflow/core/framework/op.cc:132] Op<name=XlaHostCompute; signature=inputs: -> outputs:; attr=Tinputs:list(type),min=0; attr=Toutputs:list(type),min=0; attr=ancestors:list(string),min=0; attr=shapes:list(shape),min=0; attr=shape_inference_graph:func; attr=key:string; attr=send_key:string,default=""; attr=recv_key:string,default=""; attr=cost_estimate_ns:int,default=1000000; attr=tpu_core:int,default=0; is_stateful=true>
2023-01-12 08:11:06.994834: I tensorflow/core/framework/op.cc:132] Op<name=XlaIf; signature=cond:Tcond, inputs: -> output:; attr=Tcond:type; attr=then_branch:func; attr=else_branch:func; attr=Tin:list(type),min=0; attr=Tout:list(type),min=0; is_stateful=true>
2023-01-12 08:11:06.994971: I tensorflow/core/framework/op.cc:132] Op<name=XlaKeyValueSort; signature=keys:K, values:V -> sorted_keys:K, sorted_values:V; attr=K:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]; attr=V:type>
2023-01-12 08:11:06.995101: I tensorflow/core/framework/op.cc:132] Op<name=XlaLaunch; signature=constants:, args:, resources:Nresources*resource -> results:; attr=Tconstants:list(type),min=0; attr=Targs:list(type),min=0; attr=Nresources:int,min=0; attr=Tresults:list(type),min=0; attr=function:func; is_stateful=true>
2023-01-12 08:11:06.995192: I tensorflow/core/framework/op.cc:132] Op<name=XlaOptimizationBarrier; signature=input: -> output:; attr=T:list(type),min=0>
2023-01-12 08:11:06.995270: I tensorflow/core/framework/op.cc:132] Op<name=XlaPad; signature=input:T, padding_value:T, padding_low:Tindices, padding_high:Tindices, padding_interior:Tindices -> output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.995317: I tensorflow/core/framework/op.cc:132] Op<name=XlaRecv; signature= -> tensor:dtype; attr=dtype:type; attr=tensor_name:string; attr=shape:shape; is_stateful=true>
2023-01-12 08:11:06.995362: I tensorflow/core/framework/op.cc:132] Op<name=XlaRecvFromHost; signature= -> output:Toutput; attr=Toutput:type; attr=shape:shape; attr=key:string; is_stateful=true>
2023-01-12 08:11:06.995431: I tensorflow/core/framework/op.cc:132] Op<name=XlaRecvTPUEmbeddingActivations; signature=deduplication_data:variant -> outputs:num_tables*float; attr=num_tables:int,min=1; attr=config:string; is_stateful=true>
2023-01-12 08:11:06.995484: I tensorflow/core/framework/op.cc:132] Op<name=XlaRecvTPUEmbeddingDeduplicationData; signature= -> output:variant; attr=config:string; is_stateful=true>
2023-01-12 08:11:06.995548: I tensorflow/core/framework/op.cc:132] Op<name=XlaReduce; signature=input:T, init_value:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=dimensions_to_reduce:list(int); attr=reducer:func>
2023-01-12 08:11:06.995600: I tensorflow/core/framework/op.cc:132] Op<name=XlaReducePrecision; signature=operand:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=exponent_bits:int; attr=mantissa_bits:int>
2023-01-12 08:11:06.995661: I tensorflow/core/framework/op.cc:132] Op<name=XlaReduceScatter; signature=input:T, group_assignment:int32, scatter_dimension:int32 -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_INT32, DT_UINT32]; attr=reduce_op:string,allowed=["Min", "Max", "Mul", "Add", "Mean"]>
2023-01-12 08:11:06.995736: I tensorflow/core/framework/op.cc:132] Op<name=XlaReduceWindow; signature=input:T, init_value:T, window_dimensions:Tindices, window_strides:Tindices, base_dilations:Tindices, window_dilations:Tindices, padding:Tindices -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=computation:func>
2023-01-12 08:11:06.995784: I tensorflow/core/framework/op.cc:132] Op<name=XlaRemoveDynamicDimensionSize; signature=input:T, dim_index:int32 -> output:T; attr=T:type>
2023-01-12 08:11:06.995823: I tensorflow/core/framework/op.cc:132] Op<name=XlaReplicaId; signature= -> id:int32>
2023-01-12 08:11:06.995877: I tensorflow/core/framework/op.cc:132] Op<name=XlaRngBitGenerator; signature=algorithm:int32, initial_state:uint64, shape:Tshape -> output_key:uint64, output:dtype; attr=dtype:type,default=DT_UINT64,allowed=[DT_INT32, DT_INT64, DT_UINT32, DT_UINT64]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.995963: I tensorflow/core/framework/op.cc:132] Op<name=XlaScatter; signature=operand:T, scatter_indices:Tindices, updates:T -> output:T; attr=update_computation:func; attr=dimension_numbers:string; attr=indices_are_sorted:bool; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:06.996034: I tensorflow/core/framework/op.cc:132] Op<name=XlaSelectAndScatter; signature=operand:T, window_dimensions:Tindices, window_strides:Tindices, padding:Tindices, source:T, init_value:T -> output:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; attr=select:func; attr=scatter:func>
2023-01-12 08:11:06.996481: I tensorflow/core/framework/op.cc:132] Op<name=XlaSelfAdjointEig; signature=a:T -> w:T, v:T; attr=lower:bool; attr=max_iter:int; attr=epsilon:float; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:06.996548: I tensorflow/core/framework/op.cc:132] Op<name=XlaSend; signature=tensor:T -> ; attr=T:type; attr=tensor_name:string; is_stateful=true>
2023-01-12 08:11:06.996583: I tensorflow/core/framework/op.cc:132] Op<name=XlaSendTPUEmbeddingGradients; signature=gradients:NumTables*float, learning_rates:NumLearningRateTags*float, deduplication_data:variant -> ; attr=NumTables:int,min=1; attr=NumLearningRateTags:int,default=0,min=0; attr=config:string; is_stateful=true>
2023-01-12 08:11:06.996604: I tensorflow/core/framework/op.cc:132] Op<name=XlaSendToHost; signature=input:Tinput -> ; attr=Tinput:type; attr=key:string; is_stateful=true>
2023-01-12 08:11:06.996624: I tensorflow/core/framework/op.cc:132] Op<name=XlaSetBound; signature=input:int32, bound:int32 -> output:int32>
2023-01-12 08:11:06.996667: I tensorflow/core/framework/op.cc:132] Op<name=XlaSetDynamicDimensionSize; signature=input:T, dim_index:int32, size:int32 -> output:T; attr=T:type>
2023-01-12 08:11:06.996754: I tensorflow/core/framework/op.cc:132] Op<name=XlaSharding; signature=input:T -> output:T; attr=T:type; attr=sharding:string,default=""; attr=unspecified_dims:list(int),default=[]>
2023-01-12 08:11:06.996833: I tensorflow/core/framework/op.cc:132] Op<name=XlaSort; signature=input:T -> output:T; attr=T:type>
2023-01-12 08:11:06.996887: I tensorflow/core/framework/op.cc:132] Op<name=XlaSplitND; signature=input:T -> outputs:N*T; attr=T:type; attr=N:int,min=1; attr=num_splits:list(int); attr=paddings:list(int),default=[]>
2023-01-12 08:11:06.997027: I tensorflow/core/framework/op.cc:132] Op<name=XlaSpmdFullToShardShape; signature=input:T -> output:T; attr=T:type; attr=manual_sharding:string; attr=dim:int,default=-1; attr=unspecified_dims:list(int),default=[]>
2023-01-12 08:11:06.997207: I tensorflow/core/framework/op.cc:132] Op<name=XlaSpmdShardToFullShape; signature=input:T -> output:T; attr=T:type; attr=manual_sharding:string; attr=full_shape:shape; attr=dim:int,default=-1; attr=unspecified_dims:list(int),default=[]>
2023-01-12 08:11:07.002347: I tensorflow/core/framework/op.cc:132] Op<name=XlaSvd; signature=a:T -> s:T, u:T, v:T; attr=max_iter:int; attr=epsilon:float; attr=precision_config:string; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:07.002619: I tensorflow/core/framework/op.cc:132] Op<name=XlaVariadicReduce; signature=input:N*T, init_value:N*T -> output:N*T; attr=N:int,min=1; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 16534343205130372495, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64, DT_BOOL]; attr=dimensions_to_reduce:list(int); attr=reducer:func>
2023-01-12 08:11:07.002752: I tensorflow/core/framework/op.cc:132] Op<name=XlaVariadicReduceV2; signature=inputs:, init_values: -> outputs:; attr=T:list(type),min=1; attr=dimensions_to_reduce:list(int); attr=reducer:func>
2023-01-12 08:11:07.002858: I tensorflow/core/framework/op.cc:132] Op<name=XlaVariadicSort; signature=inputs:, dimension:int32 -> outputs:; attr=T:list(type),min=1; attr=comparator:func; attr=is_stable:bool>
2023-01-12 08:11:07.002955: I tensorflow/core/framework/op.cc:132] Op<name=XlaWhile; signature=input: -> output:; attr=T:list(type),min=0; attr=cond:func; attr=body:func; is_stateful=true>
2023-01-12 08:11:07.003140: I tensorflow/core/framework/op.cc:132] Op<name=Xlog1py; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:07.003336: I tensorflow/core/framework/op.cc:132] Op<name=Xlogy; signature=x:T, y:T -> z:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:07.003427: I tensorflow/core/framework/op.cc:132] Op<name=ZerosLike; signature=x:T -> y:T; attr=T:type>
2023-01-12 08:11:07.003497: I tensorflow/core/framework/op.cc:132] Op<name=Zeta; signature=x:T, q:T -> z:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:07.003555: I tensorflow/core/framework/op.cc:132] Op<name=ZipDataset; signature=input_datasets:N*variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1; attr=metadata:string,default="">
2023-01-12 08:11:07.003601: I tensorflow/core/framework/op.cc:132] Op<name=_Arg; signature= -> output:T; attr=T:type; attr=index:int,min=0; is_stateful=true>
2023-01-12 08:11:07.003653: I tensorflow/core/framework/op.cc:132] Op<name=_ArrayToList; signature=input:N*T -> output:; attr=T:type; attr=N:int,min=1; attr=out_types:list(type),min=1>
2023-01-12 08:11:07.003708: I tensorflow/core/framework/op.cc:132] Op<name=_ConfigureDistributedTPU; signature=inputs:N*int32 -> output:string; attr=N:int,min=1; attr=enable_whole_mesh_compilations:bool,default=false; is_stateful=true>
2023-01-12 08:11:07.003760: I tensorflow/core/framework/op.cc:132] Op<name=_DeviceArg; signature= -> output:T; attr=T:type; attr=index:int,min=0; is_stateful=true>
2023-01-12 08:11:07.003801: I tensorflow/core/framework/op.cc:132] Op<name=_DeviceRetval; signature=input:T -> ; attr=T:type; attr=index:int,min=0; is_stateful=true>
2023-01-12 08:11:07.003876: I tensorflow/core/framework/op.cc:132] Op<name=_DisconnectHostFromDistributedTPUSystem; signature= -> number_of_tpu_chips:int32; is_stateful=true>
2023-01-12 08:11:07.003961: I tensorflow/core/framework/op.cc:132] Op<name=_EagerConst; signature=input:T -> output:T; attr=T:type>
2023-01-12 08:11:07.004183: I tensorflow/core/framework/op.cc:132] Op<name=_FusedBatchNormEx; signature=x:T, scale:U, offset:U, mean:U, variance:U, side_input:num_side_inputs*T -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_BFLOAT16]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=exponential_avg_factor:float,default=1; attr=num_side_inputs:int,default=0,min=0; attr=activation_mode:string,default="Identity"; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:07.004361: I tensorflow/core/framework/op.cc:132] Op<name=_FusedBatchNormGradEx; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U, offset:float, y:T -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_4:U, reserve_space_5:U, side_input_backprop:num_side_inputs*T; attr=T:type,allowed=[DT_HALF, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=num_side_inputs:int,default=0,min=0; attr=activation_mode:string,default="Identity"; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NDHWC", "NCDHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:07.004525: I tensorflow/core/framework/op.cc:132] Op<name=_FusedConv2D; signature=input:T, filter:T, args:, host_args:num_host_args*float -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT8, DT_QINT8]; attr=TArgs:list(type),min=1; attr=num_args:int,min=0; attr=num_host_args:int,default=0,min=0; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NCHW_VECT_C"]; attr=filter_format:string,default="HWIO",allowed=["HWIO", "OIHW", "OIHW_VECT_I"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=use_cudnn_on_gpu:bool,default=true; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.004657: I tensorflow/core/framework/op.cc:132] Op<name=_FusedConv3D; signature=input:T, filter:T, args:num_args*T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]; attr=padding_list:list(int),default=[]; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.004777: I tensorflow/core/framework/op.cc:132] Op<name=_FusedDepthwiseConv2dNative; signature=input:T, filter:T, args:num_args*T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=num_args:int,min=0; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.004875: I tensorflow/core/framework/op.cc:132] Op<name=_FusedMatMul; signature=a:T, b:T, args:num_args*T -> product:T; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT]; attr=num_args:int,min=0; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.005035: I tensorflow/core/framework/op.cc:132] Op<name=_FusedQuantizedConv2D; signature=device_inputs:, host_inputs: -> device_outputs:, host_outputs:; attr=Tinput:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,default=DT_QINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,default=DT_QINT32,allowed=[DT_FLOAT, DT_QINT32]; attr=Tsummand:type,allowed=[DT_FLOAT, DT_QUINT8, DT_QINT8, DT_QINT32]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tdevice_inputs:list(type),default=[],min=0; attr=Thost_inputs:list(type),min=0; attr=Tdevice_outputs:list(type),default=[],min=0; attr=Thost_outputs:list(type),min=0; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=alpha:float,default=0>
2023-01-12 08:11:07.005369: I tensorflow/core/framework/op.cc:132] Op<name=_FusedQuantizedDepthwiseConv2D; signature=device_inputs:, host_inputs: -> device_outputs:, host_outputs:; attr=Tinput:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,default=DT_QINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,default=DT_QINT32,allowed=[DT_FLOAT, DT_QINT32]; attr=Tsummand:type,allowed=[DT_FLOAT, DT_QUINT8, DT_QINT8, DT_QINT32]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tdevice_inputs:list(type),default=[],min=0; attr=Thost_inputs:list(type),min=0; attr=Tdevice_outputs:list(type),default=[],min=0; attr=Thost_outputs:list(type),min=0; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=alpha:float,default=0>
2023-01-12 08:11:07.005445: I tensorflow/core/framework/op.cc:132] Op<name=_HostCast; signature=x:SrcT -> y:DstT; attr=SrcT:type; attr=DstT:type; attr=Truncate:bool,default=false>
2023-01-12 08:11:07.005492: I tensorflow/core/framework/op.cc:132] Op<name=_HostRecv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:07.005545: I tensorflow/core/framework/op.cc:132] Op<name=_HostSend; signature=tensor:T -> ; attr=T:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>
2023-01-12 08:11:07.005612: I tensorflow/core/framework/op.cc:132] Op<name=_If; signature=cond:Tcond, input: -> output:; attr=Tcond:type; attr=Tin:list(type),min=1; attr=Tout:list(type),min=1; attr=then_branch:func; attr=else_branch:func; is_stateful=true>
2023-01-12 08:11:07.005649: I tensorflow/core/framework/op.cc:132] Op<name=_InitializeHostForDistributedTPU; signature=input:string -> tpu_ids:int32; attr=enable_whole_mesh_compilations:bool,default=false; attr=tpu_cancellation_closes_chips:int,default=0; is_stateful=true>
2023-01-12 08:11:07.005685: I tensorflow/core/framework/op.cc:132] Op<name=_ListToArray; signature=input: -> output:N*T; attr=Tin:list(type),min=1; attr=T:type; attr=N:int,min=1>
2023-01-12 08:11:07.005747: I tensorflow/core/framework/op.cc:132] Op<name=_MklAdd; signature=x:T, y:T, mkl_x:uint8, mkl_y:uint8 -> z:T, mkl_z:uint8; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128, DT_STRING, DT_BFLOAT16]>
2023-01-12 08:11:07.005898: I tensorflow/core/framework/op.cc:132] Op<name=_MklAddN; signature=inputs:N*T, mkl_input:N*uint8 -> sum:T, mkl_sum:uint8; attr=N:int,min=1; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:07.005990: I tensorflow/core/framework/op.cc:132] Op<name=_MklAddV2; signature=x:T, y:T, mkl_x:uint8, mkl_y:uint8 -> z:T, mkl_z:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; is_commutative=true; is_aggregate=true>
2023-01-12 08:11:07.006095: I tensorflow/core/framework/op.cc:132] Op<name=_MklAvgPool; signature=value:T, mkl_input:uint8 -> output:T, mkl_output:uint8; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.006292: I tensorflow/core/framework/op.cc:132] Op<name=_MklAvgPool3D; signature=value:T, mkl_input:uint8 -> output:T, mkl_output:uint8; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.006419: I tensorflow/core/framework/op.cc:132] Op<name=_MklAvgPool3DGrad; signature=orig_input_shape:int32, grad:T, mkl_orig_input:uint8, mkl_grad:uint8 -> output:T, mkl_output:uint8; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.006477: I tensorflow/core/framework/op.cc:132] Op<name=_MklAvgPoolGrad; signature=orig_input_shape:int32, grad:T, mkl_orig_input:uint8, mkl_grad:uint8 -> output:T, mkl_output:uint8; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.006548: I tensorflow/core/framework/op.cc:132] Op<name=_MklBatchMatMul; signature=x:T, y:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=adj_x:bool,default=false; attr=adj_y:bool,default=false>
2023-01-12 08:11:07.006606: I tensorflow/core/framework/op.cc:132] Op<name=_MklBatchMatMulV2; signature=x:T, y:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=adj_x:bool,default=false; attr=adj_y:bool,default=false>
2023-01-12 08:11:07.006661: I tensorflow/core/framework/op.cc:132] Op<name=_MklConcat; signature=concat_dim:int32, values:N*T, mkl_concat_dim:uint8, mkl_values:N*uint8 -> output:T, mkl_output:uint8; attr=N:int,min=2; attr=T:type>
2023-01-12 08:11:07.006738: I tensorflow/core/framework/op.cc:132] Op<name=_MklConcatV2; signature=values:N*T, axis:Tidx, mkl_values:N*uint8, mkl_axis:uint8 -> output:T, mkl_output:uint8; attr=N:int,min=2; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.006827: I tensorflow/core/framework/op.cc:132] Op<name=_MklConjugateTranspose; signature=x:T, perm:Tperm -> y:T; attr=T:type; attr=Tperm:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.006952: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv2D; signature=input:T, filter:T, mkl_input:uint8, mkl_filter:uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.007090: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv2DBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T, mkl_input:uint8, mkl_filter_size:uint8, mkl_out_backprop:uint8 -> output:T, mkl_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.007198: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv2DBackpropFilterWithBias; signature=input:T, filter_sizes:int32, out_backprop:T, mkl_input:uint8, mkl_filter_size:uint8, mkl_out_backprop:uint8 -> output:T, bias_grad:T, mkl_output:uint8, mkl_bias_grad:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.007388: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv2DBackpropInput; signature=input_sizes:int32, filter:T, out_backprop:T, mkl_input_sizes:uint8, mkl_filter:uint8, mkl_out_backprop:uint8 -> output:T, mkl_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.007509: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv2DWithBias; signature=input:T, filter:T, bias:T, mkl_input:uint8, mkl_filter:uint8, mkl_bias:uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.007607: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv3D; signature=input:T, filter:T, mkl_input:uint8, mkl_filter:uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int),min=5; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:07.007711: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv3DBackpropFilterV2; signature=input:T, filter_sizes:int32, out_backprop:T, mkl_input:uint8, mkl_filter_size:uint8, mkl_out_backprop:uint8 -> output:T, mkl_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:07.007819: I tensorflow/core/framework/op.cc:132] Op<name=_MklConv3DBackpropInputV2; signature=input_sizes:Tshape, filter:T, out_backprop:T, mkl_input_sizes:uint8, mkl_filter:uint8, mkl_out_backprop:uint8 -> output:T, mkl_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int),min=5; attr=dilations:list(int),default=[1, 1, 1, 1, 1]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]>
2023-01-12 08:11:07.007930: I tensorflow/core/framework/op.cc:132] Op<name=_MklDepthwiseConv2dNative; signature=input:T, filter:T, mkl_input:uint8, mkl_filter:uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.008108: I tensorflow/core/framework/op.cc:132] Op<name=_MklDepthwiseConv2dNativeBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T, mkl_input:uint8, mkl_filter:uint8, mkl_out_backprop:uint8 -> output:T, mkl_output:uint8; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.008178: I tensorflow/core/framework/op.cc:132] Op<name=_MklDepthwiseConv2dNativeBackpropInput; signature=input_sizes:int32, filter:T, out_backprop:T, mkl_input:uint8, mkl_filter:uint8, mkl_out_backprop:uint8 -> output:T, mkl_output:uint8; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.008232: I tensorflow/core/framework/op.cc:132] Op<name=_MklDequantize; signature=input:T, min_range:float, max_range:float -> output:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1; attr=mode:string,default="SCALED",allowed=["MIN_COMBINED", "MIN_FIRST", "SCALED"]; attr=dtype:type,default=DT_FLOAT,allowed=[DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:07.008269: I tensorflow/core/framework/op.cc:132] Op<name=_MklEinsum; signature=inputs:N*T -> output:T; attr=equation:string; attr=N:int,min=1; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:07.008301: I tensorflow/core/framework/op.cc:132] Op<name=_MklElu; signature=features:T, mkl_features:uint8 -> activations:T, mkl_activations:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.008334: I tensorflow/core/framework/op.cc:132] Op<name=_MklEluGrad; signature=gradients:T, features:T, mkl_gradients:uint8, mkl_features:uint8 -> backprops:T, mkl_backprops:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.008367: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchMatMulV2; signature=x:T, y:T, args:num_args*T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=adj_x:bool,default=false; attr=adj_y:bool,default=false; attr=num_args:int,min=0; attr=fused_ops:list(string),default=[]>
2023-01-12 08:11:07.008445: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNorm; signature=x:T, scale:T, offset:T, mean:T, variance:T, mkl_x:uint8, mkl_scale:uint8, mkl_offset:uint8, mkl_mean:uint8, mkl_variance:uint8 -> y:T, batch_mean:T, batch_variance:T, reserve_space_1:T, reserve_space_2:T, mkl_y:uint8, mkl_batch_mean:uint8, mkl_batch_variance:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC"; attr=exponential_avg_factor:float,default=1; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008515: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNormEx; signature=x:T, scale:U, offset:U, mean:U, variance:U, side_input:num_side_inputs*T, mkl_x:uint8, mkl_scale:uint8, mkl_offset:uint8, mkl_mean:uint8, mkl_variance:uint8, mkl_side_input:num_side_inputs*uint8 -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U, mkl_y:uint8, mkl_batch_mean:uint8, mkl_batch_variance:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8, mkl_reserve_space_3:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=exponential_avg_factor:float,default=1; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=num_side_inputs:int,default=0,min=0; attr=activation_mode:string,default="Identity"; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008579: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNormGrad; signature=y_backprop:T, x:T, scale:T, reserve_space_1:T, reserve_space_2:T, mkl_y_backprop:uint8, mkl_x:uint8, mkl_scale:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8 -> x_backprop:T, scale_backprop:T, offset_backprop:T, reserve_space_3:T, reserve_space_4:T, mkl_x_backprop:uint8, mkl_scale_backprop:uint8, mkl_offset_backprop:uint8, mkl_reserve_space_3:uint8, mkl_reserve_space_4:uint8; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC"; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008636: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNormGradV2; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U, mkl_y_backprop:uint8, mkl_x:uint8, mkl_scale:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8 -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_3:U, reserve_space_4:U, mkl_x_backprop:uint8, mkl_scale_backprop:uint8, mkl_offset_backprop:uint8, mkl_reserve_space_3:uint8, mkl_reserve_space_4:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008696: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNormGradV3; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U, mkl_y_backprop:uint8, mkl_x:uint8, mkl_scale:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8, mkl_reserve_space_3:uint8 -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_4:U, reserve_space_5:U, mkl_x_backprop:uint8, mkl_scale_backprop:uint8, mkl_offset_backprop:uint8, mkl_reserve_space_4:uint8, mkl_reserve_space_5:uint8; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008758: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNormV2; signature=x:T, scale:U, offset:U, mean:U, variance:U, mkl_x:uint8, mkl_scale:uint8, mkl_offset:uint8, mkl_mean:uint8, mkl_variance:uint8 -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, mkl_y:uint8, mkl_batch_mean:uint8, mkl_batch_variance:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=exponential_avg_factor:float,default=1; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008820: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedBatchNormV3; signature=x:T, scale:U, offset:U, mean:U, variance:U, mkl_x:uint8, mkl_scale:uint8, mkl_offset:uint8, mkl_mean:uint8, mkl_variance:uint8 -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U, mkl_y:uint8, mkl_batch_mean:uint8, mkl_batch_variance:uint8, mkl_reserve_space_1:uint8, mkl_reserve_space_2:uint8, mkl_reserve_space_3:uint8; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=exponential_avg_factor:float,default=1; attr=is_training:bool,default=true>
2023-01-12 08:11:07.008978: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedConv2D; signature=input:T, filter:T, args:num_args*T, mkl_input:uint8, mkl_filter:uint8, mkl_args:num_args*uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=use_cudnn_on_gpu:bool,default=true; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.009234: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedDepthwiseConv2dNative; signature=input:T, filter:T, args:num_args*T, mkl_input:uint8, mkl_filter:uint8, mkl_args:num_args*uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.009347: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedMatMul; signature=a:T, b:T, args:num_args*T, mkl_a:uint8, mkl_b:uint8, mkl_args:num_args*uint8 -> product:T, mkl_product:uint8; attr=is_filter_const:bool,default=false; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.009397: I tensorflow/core/framework/op.cc:132] Op<name=_MklFusedMish; signature=features:T -> activations:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:07.009441: I tensorflow/core/framework/op.cc:132] Op<name=_MklIdentity; signature=input:T, mkl_input:uint8 -> output:T, mkl_output:uint8; attr=T:type>
2023-01-12 08:11:07.009507: I tensorflow/core/framework/op.cc:132] Op<name=_MklInputConversion; signature=input_0:T, input_1:T, mkl_input_0:uint8, mkl_input_1:uint8 -> output_0:T, output_1:T, mkl_output_0:uint8, mkl_output_1:uint8; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_BFLOAT16, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NDHWC", "NCDHW"]>
2023-01-12 08:11:07.009584: I tensorflow/core/framework/op.cc:132] Op<name=_MklLRN; signature=input:T, mkl_input:uint8 -> output:T, workspace:uint8, mkl_output:uint8, mkl_workspace:uint8; attr=depth_radius:int,default=5; attr=bias:float,default=1; attr=alpha:float,default=1; attr=beta:float,default=0.5; attr=workspace_enabled:bool,default=false; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF]>
2023-01-12 08:11:07.009682: I tensorflow/core/framework/op.cc:132] Op<name=_MklLRNGrad; signature=input_grads:T, input_image:T, output_image:T, workspace:uint8, mkl_input_grads:uint8, mkl_input_image:uint8, mkl_output_image:uint8, mkl_workspace:uint8 -> output:T, mkl_output:uint8; attr=depth_radius:int,default=5; attr=bias:float,default=1; attr=alpha:float,default=1; attr=beta:float,default=0.5; attr=workspace_enabled:bool,default=false; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF]>
2023-01-12 08:11:07.009737: I tensorflow/core/framework/op.cc:132] Op<name=_MklLayerNorm; signature=x:T, scale:T, offset:T -> y:T; attr=T:type,allowed=[DT_FLOAT, DT_BFLOAT16]; attr=epsilon:float,default=0.001>
2023-01-12 08:11:07.009787: I tensorflow/core/framework/op.cc:132] Op<name=_MklLeakyRelu; signature=features:T, mkl_features:uint8 -> activations:T, mkl_activations:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]; attr=alpha:float,default=0.2>
2023-01-12 08:11:07.009838: I tensorflow/core/framework/op.cc:132] Op<name=_MklLeakyReluGrad; signature=gradients:T, features:T, mkl_gradients:uint8, mkl_features:uint8 -> backprops:T, mkl_backprops:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]; attr=alpha:float,default=0.2>
2023-01-12 08:11:07.009884: I tensorflow/core/framework/op.cc:132] Op<name=_MklMatMul; signature=a:T, b:T -> product:T; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]>
2023-01-12 08:11:07.009948: I tensorflow/core/framework/op.cc:132] Op<name=_MklMaxPool; signature=input:T, mkl_input:uint8 -> output:T, workspace:uint8, mkl_output:uint8, mkl_workspace:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF, DT_BFLOAT16]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=workspace_enabled:bool,default=false>
2023-01-12 08:11:07.010009: I tensorflow/core/framework/op.cc:132] Op<name=_MklMaxPool3D; signature=input:T, mkl_input:uint8 -> output:T, workspace:uint8, mkl_output:uint8, mkl_workspace:uint8; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=workspace_enabled:bool,default=false>
2023-01-12 08:11:07.010083: I tensorflow/core/framework/op.cc:132] Op<name=_MklMaxPool3DGrad; signature=orig_input:TInput, orig_output:TInput, grad:T, workspace:uint8, mkl_orig_input:uint8, mkl_orig_output:uint8, mkl_grad:uint8, mkl_workspace:uint8 -> output:T, mkl_output:uint8; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=TInput:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=workspace_enabled:bool,default=false>
2023-01-12 08:11:07.010151: I tensorflow/core/framework/op.cc:132] Op<name=_MklMaxPoolGrad; signature=orig_input:T, orig_output:T, grad:T, workspace:uint8, mkl_orig_input:uint8, mkl_orig_output:uint8, mkl_grad:uint8, mkl_workspace:uint8 -> output:T, mkl_output:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF, DT_BFLOAT16]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=workspace_enabled:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]>
2023-01-12 08:11:07.010195: I tensorflow/core/framework/op.cc:132] Op<name=_MklMaximum; signature=x:T, y:T, mkl_x:uint8, mkl_y:uint8 -> z:T, mkl_z:uint8; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_BFLOAT16]>
2023-01-12 08:11:07.010392: I tensorflow/core/framework/op.cc:132] Op<name=_MklMul; signature=x:T, y:T, mkl_x:uint8, mkl_y:uint8 -> z:T, mkl_z:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_UINT8, DT_INT8, DT_UINT16, DT_INT16, DT_INT32, DT_UINT32, DT_UINT64, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:07.010491: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeAvgPool; signature=value:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.010569: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeAvgPool3D; signature=value:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.010645: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeAvgPool3DGrad; signature=orig_input_shape:int32, grad:T -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.010726: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeAvgPoolGrad; signature=orig_input_shape:int32, grad:T -> output:T; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE, DT_BFLOAT16]>
2023-01-12 08:11:07.010817: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv2D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.010929: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv2DBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.011018: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv2DBackpropFilterWithBias; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T, bias_grad:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.011207: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv2DBackpropInput; signature=input_sizes:int32, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.011340: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv2DWithBias; signature=input:T, filter:T, bias:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.011426: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv3D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int),min=5; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:07.011512: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv3DBackpropFilterV2; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]>
2023-01-12 08:11:07.011606: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeConv3DBackpropInputV2; signature=input_sizes:Tshape, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int),min=5; attr=dilations:list(int),default=[1, 1, 1, 1, 1]; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]>
2023-01-12 08:11:07.011731: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeDepthwiseConv2dNative; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.012029: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeDepthwiseConv2dNativeBackpropFilter; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.015778: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeDepthwiseConv2dNativeBackpropInput; signature=input_sizes:int32, filter:T, out_backprop:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.016072: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNorm; signature=x:T, scale:T, offset:T, mean:T, variance:T -> y:T, batch_mean:T, batch_variance:T, reserve_space_1:T, reserve_space_2:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC"; attr=exponential_avg_factor:float,default=1; attr=is_training:bool,default=true>
2023-01-12 08:11:07.016505: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNormEx; signature=x:T, scale:U, offset:U, mean:U, variance:U, side_input:num_side_inputs*T -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=exponential_avg_factor:float,default=1; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=num_side_inputs:int,default=0,min=0; attr=activation_mode:string,default="Identity"; attr=is_training:bool,default=true>
2023-01-12 08:11:07.016641: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNormGrad; signature=y_backprop:T, x:T, scale:T, reserve_space_1:T, reserve_space_2:T -> x_backprop:T, scale_backprop:T, offset_backprop:T, reserve_space_3:T, reserve_space_4:T; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, 6034766930529145842, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC"; attr=is_training:bool,default=true>
2023-01-12 08:11:07.016951: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNormGradV2; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_3:U, reserve_space_4:U; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:07.017411: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNormGradV3; signature=y_backprop:T, x:T, scale:float, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U -> x_backprop:T, scale_backprop:U, offset_backprop:U, reserve_space_4:U, reserve_space_5:U; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_training:bool,default=true>
2023-01-12 08:11:07.017532: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNormV2; signature=x:T, scale:U, offset:U, mean:U, variance:U -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=exponential_avg_factor:float,default=1; attr=is_training:bool,default=true>
2023-01-12 08:11:07.017638: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedBatchNormV3; signature=x:T, scale:U, offset:U, mean:U, variance:U -> y:T, batch_mean:U, batch_variance:U, reserve_space_1:U, reserve_space_2:U, reserve_space_3:U; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=U:type,allowed=[DT_FLOAT]; attr=epsilon:float,default=0.0001; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=exponential_avg_factor:float,default=1; attr=is_training:bool,default=true>
2023-01-12 08:11:07.017970: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedConv2D; signature=input:T, filter:T, args:num_args*T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=use_cudnn_on_gpu:bool,default=true; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.019306: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedConv3D; signature=input:T, filter:T, args:num_args*T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int),min=5; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=dilations:list(int),default=[1, 1, 1, 1, 1]; attr=padding_list:list(int),default=[]; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.021598: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedDepthwiseConv2dNative; signature=input:T, filter:T, args:num_args*T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.021844: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeFusedMatMul; signature=a:T, b:T, args:num_args*T -> product:T; attr=is_filter_const:bool,default=false; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=fused_ops:list(string),default=[]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.022052: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeMaxPool; signature=input:T -> output:T, workspace:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF, DT_BFLOAT16]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]; attr=workspace_enabled:bool,default=false>
2023-01-12 08:11:07.022404: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeMaxPool3D; signature=input:T -> output:T, workspace:uint8; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=workspace_enabled:bool,default=false>
2023-01-12 08:11:07.024647: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeMaxPool3DGrad; signature=orig_input:TInput, orig_output:TInput, grad:T, workspace:uint8 -> output:T; attr=ksize:list(int),min=5; attr=strides:list(int),min=5; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NDHWC",allowed=["NDHWC", "NCDHW"]; attr=T:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=TInput:type,default=DT_FLOAT,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT]; attr=workspace_enabled:bool,default=false>
2023-01-12 08:11:07.024965: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativeMaxPoolGrad; signature=orig_input:T, orig_output:T, grad:T, workspace:uint8 -> output:T; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_HALF, DT_BFLOAT16]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=workspace_enabled:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=explicit_paddings:list(int),default=[]>
2023-01-12 08:11:07.025224: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativePadWithConv2D; signature=input:T, filter:T, paddings:Tpaddings -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_filter_const:bool,default=false; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.025426: I tensorflow/core/framework/op.cc:132] Op<name=_MklNativePadWithFusedConv2D; signature=input:T, filter:T, args:num_args*T, paddings:Tpaddings -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.025557: I tensorflow/core/framework/op.cc:132] Op<name=_MklPadWithConv2D; signature=input:T, filter:T, paddings:Tpaddings, mkl_input:uint8, mkl_filter:uint8, mkl_paddings:uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=is_filter_const:bool,default=false; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.025714: I tensorflow/core/framework/op.cc:132] Op<name=_MklPadWithFusedConv2D; signature=input:T, filter:T, args:num_args*T, paddings:Tpaddings, mkl_input:uint8, mkl_filter:uint8, mkl_args:num_args*uint8, mkl_paddings:uint8 -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.025817: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizeV2; signature=input:float, min_range:float, max_range:float -> output:T, output_min:float, output_max:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=mode:string,default="SCALED",allowed=["MIN_COMBINED", "MIN_FIRST", "SCALED"]; attr=round_mode:string,default="HALF_AWAY_FROM_ZERO",allowed=["HALF_AWAY_FROM_ZERO", "HALF_TO_EVEN"]; attr=narrow_range:bool,default=false; attr=axis:int,default=-1; attr=ensure_minimum_range:float,default=0.01>
2023-01-12 08:11:07.025889: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedAvgPool; signature=input:T, min_input:float, max_input:float -> output:T, min_output:float, max_output:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:07.025949: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConcatV2; signature=values:N*T, axis:Tidx, input_mins:N*float, input_maxes:N*float -> output:T, output_min:float, output_max:float; attr=N:int,min=2; attr=T:type; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.026132: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2D; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.026262: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DAndRelu; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.026699: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.026844: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DAndRequantize; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.026973: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DPerChannel; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.027437: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBias; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.027605: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBiasAndRelu; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.027784: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBiasAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.027915: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBiasAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=out_type:type,default=DT_QINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.029088: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBiasSignedSumAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float, summand:Tsummand, min_summand:float, max_summand:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Tsummand:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.029431: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBiasSumAndRelu; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float, summand:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.029905: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedConv2DWithBiasSumAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float, summand:Tsummand, min_summand:float, max_summand:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Tsummand:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.030180: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedDepthwiseConv2D; signature=input:Tinput, filter:Tfilter, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.030489: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedDepthwiseConv2DWithBias; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.030810: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedDepthwiseConv2DWithBiasAndRelu; signature=input:Tinput, filter:Tfilter, bias:float, min_input:float, max_input:float, min_filter:float, max_filter:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=out_type:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.031123: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedDepthwiseConv2DWithBiasAndReluAndRequantize; signature=input:Tinput, filter:Tfilter, bias:Tbias, min_input:float, max_input:float, min_filter:float, max_filter:float, min_freezed_output:float, max_freezed_output:float -> output:out_type, min_output:float, max_output:float; attr=Tinput:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tfilter:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=out_type:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=data_format:string,default="NHWC"; attr=strides:list(int); attr=is_filter_const:bool,default=true; attr=is_bias_const:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=padding_list:list(int),default=[]>
2023-01-12 08:11:07.031219: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedMatMulWithBias; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]; attr=is_weight_const:bool,default=true>
2023-01-12 08:11:07.031313: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedMatMulWithBiasAndDequantize; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float, min_freezed_output:float, max_freezed_output:float -> out:Toutput; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,allowed=[DT_FLOAT]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]; attr=is_weight_const:bool,default=true>
2023-01-12 08:11:07.031402: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedMatMulWithBiasAndRelu; signature=a:T1, b:T2, bias:float, min_a:float, max_a:float, min_b:float, max_b:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Toutput:type,default=DT_QINT32,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]; attr=is_weight_const:bool,default=true>
2023-01-12 08:11:07.031495: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedMatMulWithBiasAndReluAndRequantize; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float, min_freezed_output:float, max_freezed_output:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]; attr=is_weight_const:bool,default=true>
2023-01-12 08:11:07.031597: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedMatMulWithBiasAndRequantize; signature=a:T1, b:T2, bias:Tbias, min_a:float, max_a:float, min_b:float, max_b:float, min_freezed_output:float, max_freezed_output:float -> out:Toutput, min_out:float, max_out:float; attr=T1:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=T2:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tbias:type,allowed=[DT_FLOAT, DT_QINT32]; attr=Toutput:type,default=DT_QUINT8,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=transpose_a:bool,default=false; attr=transpose_b:bool,default=false; attr=input_quant_mode:string,default="MIN_FIRST",allowed=["MIN_FIRST", "SCALED"]; attr=is_weight_const:bool,default=true>
2023-01-12 08:11:07.031671: I tensorflow/core/framework/op.cc:132] Op<name=_MklQuantizedMaxPool; signature=input:T, min_input:float, max_input:float -> output:T, min_output:float, max_output:float; attr=T:type,allowed=[DT_QINT8, DT_QUINT8, DT_QINT32, DT_QINT16, DT_QUINT16]; attr=ksize:list(int),min=4; attr=strides:list(int),min=4; attr=padding:string,allowed=["SAME", "VALID"]>
2023-01-12 08:11:07.031732: I tensorflow/core/framework/op.cc:132] Op<name=_MklRelu; signature=features:T, mkl_features:uint8 -> activations:T, mkl_activations:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.031759: I tensorflow/core/framework/op.cc:132] Op<name=_MklRelu6; signature=features:T, mkl_features:uint8 -> activations:T, mkl_activations:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.031850: I tensorflow/core/framework/op.cc:132] Op<name=_MklRelu6Grad; signature=gradients:T, features:T, mkl_gradients:uint8, mkl_features:uint8 -> backprops:T, mkl_backprops:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.031928: I tensorflow/core/framework/op.cc:132] Op<name=_MklReluGrad; signature=gradients:T, features:T, mkl_gradients:uint8, mkl_features:uint8 -> backprops:T, mkl_backprops:uint8; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.032428: I tensorflow/core/framework/op.cc:132] Op<name=_MklReshape; signature=tensor:T, shape:Tshape, mkl_tensor:uint8, mkl_shape:uint8 -> output:T, mkl_output:uint8; attr=T:type; attr=Tshape:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.032627: I tensorflow/core/framework/op.cc:132] Op<name=_MklSlice; signature=input:T, begin:Index, size:Index, mkl_input:uint8, mkl_begin:uint8, mkl_size:uint8 -> output:T, mkl_output:uint8; attr=T:type; attr=Index:type,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.032757: I tensorflow/core/framework/op.cc:132] Op<name=_MklSoftmax; signature=logits:T, mkl_logits:uint8 -> softmax:T, mkl_softmax:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE]>
2023-01-12 08:11:07.032905: I tensorflow/core/framework/op.cc:132] Op<name=_MklSquaredDifference; signature=x:T, y:T, mkl_x:uint8, mkl_y:uint8 -> z:T, mkl_z:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:07.033145: I tensorflow/core/framework/op.cc:132] Op<name=_MklSub; signature=x:T, y:T, mkl_x:uint8, mkl_y:uint8 -> z:T, mkl_z:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64, DT_COMPLEX64, DT_COMPLEX128]>
2023-01-12 08:11:07.033349: I tensorflow/core/framework/op.cc:132] Op<name=_MklSwish; signature=features:T -> activations:T; attr=T:type,default=DT_FLOAT,allowed=[DT_FLOAT, DT_BFLOAT16]>
2023-01-12 08:11:07.033530: I tensorflow/core/framework/op.cc:132] Op<name=_MklTanh; signature=features:T, mkl_features:uint8 -> activations:T, mkl_activations:uint8; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:07.033786: I tensorflow/core/framework/op.cc:132] Op<name=_MklTanhGrad; signature=gradients:T, features:T, mkl_gradients:uint8, mkl_features:uint8 -> backprops:T, mkl_backprops:uint8; attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64]>
2023-01-12 08:11:07.033919: I tensorflow/core/framework/op.cc:132] Op<name=_MklToTf; signature=input:T, mkl_input:uint8 -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_BFLOAT16, DT_QINT8, DT_QUINT8, DT_QINT32]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW", "NDHWC", "NCDHW"]>
2023-01-12 08:11:07.034370: I tensorflow/core/framework/op.cc:132] Op<name=_MklTranspose; signature=x:T, perm:Tperm -> y:T; attr=T:type; attr=Tperm:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.034586: I tensorflow/core/framework/op.cc:132] Op<name=_NcclBroadcastRecv; signature=shape:int32 -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=num_devices:int; attr=shared_name:string; is_stateful=true>
2023-01-12 08:11:07.034679: I tensorflow/core/framework/op.cc:132] Op<name=_NcclBroadcastSend; signature=input:T -> ; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=num_devices:int; attr=shared_name:string; is_stateful=true>
2023-01-12 08:11:07.034764: I tensorflow/core/framework/op.cc:132] Op<name=_NcclReduceRecv; signature=input:T -> data:T; attr=reduction:string,allowed=["min", "max", "prod", "sum"]; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=num_devices:int; attr=shared_name:string; is_stateful=true>
2023-01-12 08:11:07.034904: I tensorflow/core/framework/op.cc:132] Op<name=_NcclReduceSend; signature=input:T -> ; attr=reduction:string,allowed=["min", "max", "prod", "sum"]; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE, DT_INT32, DT_INT64]; attr=num_devices:int; attr=shared_name:string; is_stateful=true>
2023-01-12 08:11:07.159739: I tensorflow/core/framework/op.cc:132] Op<name=_ParallelConcatStart; signature= -> output:dtype; attr=shape:shape; attr=dtype:type; is_stateful=true>
2023-01-12 08:11:07.159967: I tensorflow/core/framework/op.cc:132] Op<name=_ParallelConcatUpdate; signature=value:T, update:T -> output:T; attr=T:type; attr=loc:int>
2023-01-12 08:11:07.160261: I tensorflow/core/framework/op.cc:132] Op<name=_ReadVariablesOp; signature=resources:N*resource -> values:; attr=N:int,min=0; attr=dtypes:list(type),min=1; is_stateful=true>
2023-01-12 08:11:07.160427: I tensorflow/core/framework/op.cc:132] Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true; is_distributed_communication=true>
2023-01-12 08:11:07.160543: I tensorflow/core/framework/op.cc:132] Op<name=_Retval; signature=input:T -> ; attr=T:type; attr=index:int,min=0; is_stateful=true>
2023-01-12 08:11:07.160698: I tensorflow/core/framework/op.cc:132] Op<name=_ScopedAllocator; signature= -> output:T; attr=shapes:list(shape); attr=shape:shape; attr=T:type; attr=sa_name:string; attr=id:int; attr=expected_call_count:int; is_stateful=true>
2023-01-12 08:11:07.160833: I tensorflow/core/framework/op.cc:132] Op<name=_ScopedAllocatorConcat; signature=backing:T, inputs:N*T -> output:T; attr=shape:shape; attr=T:type; attr=reshape:bool,default=false; attr=sa_name:string; attr=id:int; attr=N:int,min=2; is_stateful=true>
2023-01-12 08:11:07.160965: I tensorflow/core/framework/op.cc:132] Op<name=_ScopedAllocatorSplit; signature=concat:T, split:N*T -> output:N*T; attr=T:type; attr=sa_name:string; attr=id:int; attr=N:int,min=2; attr=shapes:list(shape); is_stateful=true>
2023-01-12 08:11:07.161154: I tensorflow/core/framework/op.cc:132] Op<name=_Send; signature=tensor:T -> ; attr=T:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>
2023-01-12 08:11:07.161304: I tensorflow/core/framework/op.cc:132] Op<name=_SetGlobalTPUArray; signature=topology:string -> ; is_stateful=true>
2023-01-12 08:11:07.161877: I tensorflow/core/framework/op.cc:132] Op<name=_ShutdownDistributedTPU; signature= -> ; is_stateful=true>
2023-01-12 08:11:07.162085: I tensorflow/core/framework/op.cc:132] Op<name=_SwitchN; signature=data:T, output_index:int32 -> outputs:num_outs*T; attr=num_outs:int,min=1; attr=T:type>
2023-01-12 08:11:07.163057: I tensorflow/core/framework/op.cc:132] Op<name=_TPUCompileMlir; signature=dynamic_shapes:NumDynamicShapes*int64 -> compilation_status:string, program:num_computations*string; attr=num_computations:int,min=0; attr=mlir_module:string,default=""; attr=metadata:string; attr=NumDynamicShapes:int,min=0; is_stateful=true>
2023-01-12 08:11:07.163243: I tensorflow/core/framework/op.cc:132] Op<name=_TPUCompileMlirPlaceholderProgramKey; signature= -> program:string; is_stateful=true>
2023-01-12 08:11:07.163440: I tensorflow/core/framework/op.cc:132] Op<name=_TPUReplicate; signature=inputs:, broadcast_inputs:, variables:NumVariables*resource, guaranteed_constants: -> outputs:; attr=computation:func; attr=num_replicas:int,min=1; attr=num_cores_per_replica:int,default=1; attr=topology:string,default=""; attr=use_tpu:bool,default=true; attr=device_assignment:list(int),default=[]; attr=host_compute_core:list(string),default=[]; attr=Tinputs:list(type),min=0; attr=Tbroadcast_inputs:list(type),min=0; attr=NumVariables:int,min=0; attr=Tguaranteed_constants:list(type),min=0; attr=output_types:list(type),min=0; attr=padding_map:list(string),default=[]; attr=step_marker_location:string,default="STEP_MARK_AT_ENTRY"; attr=allow_soft_placement:bool,default=false; attr=num_distributed_variables:int,default=0; attr=use_spmd_for_xla_partitioning:bool,default=false; attr=tpu_compile_options_proto:string,default=""; is_stateful=true>
2023-01-12 08:11:07.163626: I tensorflow/core/framework/op.cc:132] Op<name=_TensorToHashBucketFast; signature=input:T -> output:int64; attr=T:type,allowed=[DT_INT8, DT_UINT8, DT_INT16, DT_UINT16, DT_INT32, DT_UINT32, DT_INT64, DT_UINT64]; attr=num_buckets:int,min=1>
2023-01-12 08:11:07.163787: I tensorflow/core/framework/op.cc:132] Op<name=_UnaryOpsComposition; signature=x:T -> y:T; attr=T:type,allowed=[DT_FLOAT, DT_HALF, DT_DOUBLE]; attr=op_names:list(string)>
2023-01-12 08:11:07.164012: I tensorflow/core/framework/op.cc:132] Op<name=_VarHandlesOp; signature= -> resources:N*resource; attr=containers:list(string); attr=shared_names:list(string); attr=N:int,min=0; attr=dtypes:list(type); attr=shapes:list(shape); is_stateful=true>
2023-01-12 08:11:07.164069: I tensorflow/core/framework/op.cc:132] Op<name=_WaitForDistributedTPU; signature=inputs:N*int32 -> topology:string; attr=startup_timeout_sec:int,default=20; attr=N:int,min=1; is_stateful=true>
2023-01-12 08:11:07.164123: I tensorflow/core/framework/op.cc:132] Op<name=_While; signature=input: -> output:; attr=T:list(type),min=0; attr=cond:func; attr=body:func; is_stateful=true>
2023-01-12 08:11:07.167681: I tensorflow/core/framework/op.cc:132] Op<name=_XlaAotOnlyVarHandleOp; signature= -> resource:resource; attr=container:string,default=""; attr=shared_name:string,default=""; attr=dtype:type; attr=shape:shape; is_stateful=true>
2023-01-12 08:11:07.167939: I tensorflow/core/framework/op.cc:132] Op<name=_XlaCompile; signature=constants:, args:, resources:Nresources*resource -> key:string, compilation_successful:bool; attr=Tconstants:list(type),min=0; attr=must_compile:bool; attr=Targs:list(type),min=0; attr=Nresources:int,min=0; attr=function:func; is_stateful=true>
2023-01-12 08:11:07.168125: I tensorflow/core/framework/op.cc:132] Op<name=_XlaHostComputeMlir; signature=inputs: -> outputs:; attr=Tinputs:list(type),min=0; attr=Toutputs:list(type),min=0; attr=send_key:string; attr=recv_key:string; attr=host_mlir_module:string,default=""; is_stateful=true>
2023-01-12 08:11:07.168281: I tensorflow/core/framework/op.cc:132] Op<name=_XlaMerge; signature=partitioned_call:T, xla_run:T -> output:T; attr=T:type>
2023-01-12 08:11:07.168320: I tensorflow/core/framework/op.cc:132] Op<name=_XlaRecvAtHost; signature=dynamic_key:string -> outputs:; attr=Toutputs:list(type),min=0; attr=key:string; attr=device_ordinal:int; is_stateful=true>
2023-01-12 08:11:07.168343: I tensorflow/core/framework/op.cc:132] Op<name=_XlaRecvAtHostV2; signature=dynamic_key:string, device_ordinal:int64 -> outputs:; attr=Toutputs:list(type),min=0; attr=key:string; is_stateful=true>
2023-01-12 08:11:07.168365: I tensorflow/core/framework/op.cc:132] Op<name=_XlaRun; signature=args:, key:string -> results:; attr=Targs:list(type),min=0; attr=Tresults:list(type),min=0; is_stateful=true>
2023-01-12 08:11:07.168407: I tensorflow/core/framework/op.cc:132] Op<name=_XlaSendFromHost; signature=inputs:, dynamic_key:string -> ; attr=Tinputs:list(type),min=0; attr=key:string; attr=device_ordinal:int; is_stateful=true>
2023-01-12 08:11:07.168433: I tensorflow/core/framework/op.cc:132] Op<name=_XlaSendFromHostV2; signature=inputs:, dynamic_key:string, device_ordinal:int64 -> ; attr=Tinputs:list(type),min=0; attr=key:string; is_stateful=true>
2023-01-12 08:11:07.168504: I tensorflow/core/framework/op.cc:132] Op<name=__MklDummyConv2DBackpropFilterWithBias; signature=input:T, filter_sizes:int32, out_backprop:T -> output:T, bias_grad:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.169851: I tensorflow/core/framework/op.cc:132] Op<name=__MklDummyConv2DWithBias; signature=input:T, filter:T, bias:T -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=is_filter_const:bool,default=false; attr=padding:string,allowed=["SAME", "VALID", "EXPLICIT"]; attr=explicit_paddings:list(int),default=[]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]>
2023-01-12 08:11:07.170046: I tensorflow/core/framework/op.cc:132] Op<name=__MklDummyPadWithConv2D; signature=input:T, filter:T, paddings:Tpaddings -> output:T; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]>
2023-01-12 08:11:07.171373: I tensorflow/core/framework/op.cc:132] Op<name=__MklDummyPadWithFusedConv2D; signature=input:T, filter:T, args:num_args*T, paddings:Tpaddings -> output:T, filter_output:T, mkl_output:uint8, mkl_filter_output:uint8; attr=T:type,allowed=[DT_BFLOAT16, DT_FLOAT]; attr=num_args:int,min=0; attr=strides:list(int); attr=padding:string,allowed=["SAME", "VALID"]; attr=data_format:string,default="NHWC",allowed=["NHWC", "NCHW"]; attr=dilations:list(int),default=[1, 1, 1, 1]; attr=fused_ops:list(string),default=[]; attr=Tpaddings:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]; attr=epsilon:float,default=0.0001; attr=leakyrelu_alpha:float,default=0.2>
2023-01-12 08:11:07.382958: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpRegistryInterface::LookUpOpDef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**) const
        tensorflow::FunctionLibraryDefinition::AddFunctionDefHelper(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&, bool*)
        tensorflow::FunctionLibraryDefinition::AddFunctionDef(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&)
        tensorflow::EagerContext::AddFunctionDef(tensorflow::FunctionDef const&, tensorflow::FunctionDefLibrary const&, bool, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&)
        tensorflow::EagerContext::AddFunctionDef(tensorflow::FunctionDef const&)



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:07.383480: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:07.491771: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpDefForOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)
        tensorflow::AttrTypeMapForOp(char const*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > > const**, bool*)
        tensorflow::EagerOperation::Reset(char const*, char const*, bool, tensorflow::EagerExecutor*, std::optional<tensorflow::EagerFunctionParams>)
        tensorflow::EagerOperation::Reset(char const*, char const*)



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:07.492198: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:07.599092: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpDefForOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)
        tensorflow::AttrBuilder::FillAttrValueMap(google::protobuf::Map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::AttrValue>*) const
        tensorflow::AttrBuilder::BuildNodeDef()


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:07.599602: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:07.599895: I tensorflow/core/common_runtime/eager/execute.cc:1214] Running __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0 using multi-device function. Full node_def=name: "__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0"
op: "__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0"
input: "dummy_input"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}

2023-01-12 08:11:07.601739: I tensorflow/core/common_runtime/process_function_library_runtime.cc:951] Instantiating MultiDevice function "__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0" on default device "/job:localhost/replica:0/task:0/device:CPU:0"
2023-01-12 08:11:07.601854: I tensorflow/core/common_runtime/process_function_library_runtime.cc:955] Requested input devices:
2023-01-12 08:11:07.601899: I tensorflow/core/common_runtime/process_function_library_runtime.cc:957]     [input 0] /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:07.601912: I tensorflow/core/common_runtime/process_function_library_runtime.cc:960] Requested output devices:
2023-01-12 08:11:07.601995: I tensorflow/core/framework/function.cc:742] Instantiate function definition: name=__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0 #input_args=1 #output_args=1 #control_output=0
2023-01-12 08:11:07.603250: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:07.603283: I tensorflow/core/framework/function.cc:747] || __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0[T:<Unknown AttrValue type>](input:T) -> (output:T) {
2023-01-12 08:11:07.603292: I tensorflow/core/framework/function.cc:747] ||   _EagerConst = _EagerConst[T=$T, device=CPU:0](input:0)
2023-01-12 08:11:07.603298: I tensorflow/core/framework/function.cc:747] ||   return output = _EagerConst:output:0
2023-01-12 08:11:07.603303: I tensorflow/core/framework/function.cc:747] || }
2023-01-12 08:11:07.603349: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:07.606179: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:07.606294: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:07.608862: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for input
2023-01-12 08:11:07.609101: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _EagerConst
2023-01-12 08:11:07.609232: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for output_RetVal
2023-01-12 08:11:07.617964: I tensorflow/core/common_runtime/process_function_library_runtime.cc:483] Trying to determine device for node output_RetVal[T=double]
2023-01-12 08:11:07.618133: I tensorflow/core/common_runtime/process_function_library_runtime.cc:496] Considering src: _EagerConst src_device: /job:localhost/replica:0/task:0/device:CPU:0 colo group: 
2023-01-12 08:11:07.618485: I tensorflow/core/common_runtime/process_function_library_runtime.cc:602] Setting output device to /job:localhost/replica:0/task:0/device:CPU:0 for node {{node output_RetVal}} = _Retval[T=DT_DOUBLE, index=0](_EagerConst)
2023-01-12 08:11:07.618712: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:180] None of the MLIR Optimization Passes are enabled (registered 3)
2023-01-12 08:11:07.619148: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running PRE_PLACEMENT passes #nodes 5 #edges 5
2023-01-12 08:11:07.619737: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:07.619814: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0) -> (n3:double@CPU:0) {
2023-01-12 08:11:07.619832: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, device=CPU:0](n2)
2023-01-12 08:11:07.619844: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:07.619857: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:07.619882: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 0
2023-01-12 08:11:07.620146: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_0_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:07.786884: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:07.787489: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 0
2023-01-12 08:11:07.787548: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: MlirV1CompatGraphOptimizationPass
2023-01-12 08:11:07.787703: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_0_MlirV1CompatGraphOptimizationPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:07.914800: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:07.915528: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 9
2023-01-12 08:11:07.915591: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ControlFlowDepsToChainsPass
2023-01-12 08:11:07.915612: I tensorflow/core/common_runtime/control_flow_deps_to_chains.cc:37] ControlFlowDepsToChainsPass::Run
2023-01-12 08:11:07.915728: W tensorflow/core/util/dump_graph.cc:134] Failed to dump control_flow_deps_to_chains_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.038824: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::ControlFlowDepsToChainsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.039591: W tensorflow/core/util/dump_graph.cc:134] Failed to dump control_flow_deps_to_chains_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.153948: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::ControlFlowDepsToChainsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.154816: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_9_ControlFlowDepsToChainsPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.268922: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.269474: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 10
2023-01-12 08:11:08.269528: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: AccumulateNV2RemovePass
2023-01-12 08:11:08.269741: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_10_AccumulateNV2RemovePass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.378613: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.378814: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: LowerFunctionalOpsPass
2023-01-12 08:11:08.379781: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_10_LowerFunctionalOpsPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.493529: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.493740: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ParallelConcatRemovePass
2023-01-12 08:11:08.493956: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_10_ParallelConcatRemovePass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.604442: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.604651: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 35
2023-01-12 08:11:08.604706: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: IsolatePlacerInspectionRequiredOpsPass
2023-01-12 08:11:08.604723: I tensorflow/core/common_runtime/isolate_placer_inspection_required_ops_pass.cc:34] IsolatePlacerInspectionRequiredOpsPass::Run
2023-01-12 08:11:08.605957: I tensorflow/core/util/dump_graph.cc:171] /tmp/isolate_deep_ops_before.pbtxt
2023-01-12 08:11:08.606009: I tensorflow/core/util/dump_graph.cc:172] node {
  name: "input"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
node {
  name: "_EagerConst"
  op: "_EagerConst"
  input: "input"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "output_RetVal"
  op: "_Retval"
  input: "_EagerConst"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
library {
}
versions {
  producer: 1286
}

2023-01-12 08:11:08.606218: I tensorflow/core/util/dump_graph.cc:206] Dumped Graph to /tmp/isolate_deep_ops_before.pbtxt
2023-01-12 08:11:08.607110: I tensorflow/core/util/dump_graph.cc:171] /tmp/isolate_deep_ops_after.pbtxt
2023-01-12 08:11:08.607179: I tensorflow/core/util/dump_graph.cc:172] node {
  name: "input"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
node {
  name: "_EagerConst"
  op: "_EagerConst"
  input: "input"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "output_RetVal"
  op: "_Retval"
  input: "_EagerConst"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
library {
}
versions {
  producer: 1286
}

2023-01-12 08:11:08.607282: I tensorflow/core/util/dump_graph.cc:206] Dumped Graph to /tmp/isolate_deep_ops_after.pbtxt
2023-01-12 08:11:08.607536: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_35_IsolatePlacerInspectionRequiredOpsPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.740269: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.740491: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: IntroduceFloatingPointJitterPass
2023-01-12 08:11:08.741455: I tensorflow/compiler/jit/introduce_floating_point_jitter_pass.cc:126] Nothing to do
2023-01-12 08:11:08.741650: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_35_IntroduceFloatingPointJitterPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.846888: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.847105: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 36
2023-01-12 08:11:08.847160: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: EncapsulateXlaComputationsPass
2023-01-12 08:11:08.847354: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_xla_computations_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:08.958659: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateXlaComputationsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:08.958852: I tensorflow/compiler/jit/encapsulate_xla_computations_pass.cc:382] EncapsulateXlaComputations(): (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:08.960406: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:08.960518: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:08.960658: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:08.960730: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:08.960945: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_xla_computations_halfway because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.090686: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateXlaComputationsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.091368: I tensorflow/compiler/jit/encapsulate_xla_computations_pass.cc:393] EncapsulateXlaComputations() half-way: (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:09.091545: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_xla_computations_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.223744: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateXlaComputationsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.224270: I tensorflow/compiler/jit/encapsulate_xla_computations_pass.cc:399] EncapsulateXlaComputations() finished: (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:09.224446: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_36_EncapsulateXlaComputationsPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.335384: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.335877: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 37
2023-01-12 08:11:09.335902: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: FunctionalizeControlFlowForXlaPass
2023-01-12 08:11:09.336032: W tensorflow/core/util/dump_graph.cc:134] Failed to dump functionalize_control_flow_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.453020: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::FunctionalizeControlFlowForXlaPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.453822: W tensorflow/core/util/dump_graph.cc:134] Failed to dump functionalize_control_flow_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.603475: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::FunctionalizeControlFlowForXlaPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.604178: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_37_FunctionalizeControlFlowForXlaPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.807494: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.808839: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 99999
2023-01-12 08:11:09.808930: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: WeakTypeInferencePass
2023-01-12 08:11:09.809003: I tensorflow/core/common_runtime/type_inference.cc:141] TypeInferencePass::Run
2023-01-12 08:11:09.809437: W tensorflow/core/util/dump_graph.cc:134] Failed to dump forward_type_inference_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:09.986048: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::TypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::WeakTypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:09.986750: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "_SOURCE"
op: "NoOp"

  op def: name: "NoOp"

2023-01-12 08:11:09.986851: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "_SINK"
op: "NoOp"

  op def: name: "NoOp"

2023-01-12 08:11:09.987075: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "input"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

  op def: name: "_Arg"
output_arg {
  name: "output"
  description: "The argument."
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "index"
  type: "int"
  description: "This argument is the index-th argument of the function.\n\nAttributes for shape inference:\n1. _output_shapes: this attribute should contain a list of TensorShapeProto\n   describing the shape(s) of the tensor(s) this _Arg node will produce. If set,\n   _Arg node\'s shape inference function will use it as the node\'s output shapes.\n2. _handle_dtypes and _handle_shapes: these attributes can be set on an _Arg\n   node producing resource output(s). If set, value of _handle_dtypes should\n   contain the dtype(s) of the resource(s) and value of _handle_shapes should\n   contain the shape(s) of the resource(s). If both attributes are set, _Arg\n   node\'s shape inference function will use their values as the node\'s output\n   handle\'s type(s) and shape(s)."
  has_minimum: true
}
summary: "A graph node which represents an argument to a function."
is_stateful: true

2023-01-12 08:11:09.987374: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "_EagerConst"
op: "_EagerConst"
input: "input"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}

  op def: name: "_EagerConst"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}

2023-01-12 08:11:09.987608: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "output_RetVal"
op: "_Retval"
input: "_EagerConst"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

  op def: name: "_Retval"
input_arg {
  name: "input"
  description: "The return value."
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "index"
  type: "int"
  description: "This return value is the index-th return value of the function."
  has_minimum: true
}
summary: "A graph node which represents a return value of a function."
is_stateful: true

2023-01-12 08:11:09.991919: I tensorflow/core/common_runtime/type_inference.cc:258] Iteration 0, 3 nodes in queue
2023-01-12 08:11:09.992072: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting _SOURCE
2023-01-12 08:11:09.992189: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "_SOURCE"
op: "NoOp"

2023-01-12 08:11:09.992256: I tensorflow/core/common_runtime/type_inference.cc:284]   closing _SOURCE - all sources closed
2023-01-12 08:11:09.992299: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting _SINK
2023-01-12 08:11:09.992345: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "_SINK"
op: "NoOp"

2023-01-12 08:11:09.992375: I tensorflow/core/common_runtime/type_inference.cc:284]   closing _SINK - all sources closed
2023-01-12 08:11:09.992397: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting input
2023-01-12 08:11:09.992596: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "input"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:09.992668: I tensorflow/core/common_runtime/type_inference.cc:284]   closing input - all sources closed
2023-01-12 08:11:09.992707: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting _EagerConst
2023-01-12 08:11:09.992831: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "_EagerConst"
op: "_EagerConst"
input: "input"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}

2023-01-12 08:11:09.992885: I tensorflow/core/common_runtime/type_inference.cc:284]   closing _EagerConst - all sources closed
2023-01-12 08:11:09.992933: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting output_RetVal
2023-01-12 08:11:09.993176: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "output_RetVal"
op: "_Retval"
input: "_EagerConst"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:09.993291: I tensorflow/core/common_runtime/type_inference.cc:284]   closing output_RetVal - all sources closed
2023-01-12 08:11:09.993335: I tensorflow/core/common_runtime/type_inference.cc:314] Done iteration 0, 5 nodes closed
2023-01-12 08:11:09.993364: I tensorflow/core/common_runtime/type_inference.cc:318] Finished after 1 iterations; done 5 of 5 nodes in 5 visits
2023-01-12 08:11:09.993541: W tensorflow/core/util/dump_graph.cc:134] Failed to dump forward_type_inference_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.120058: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::TypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::WeakTypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.120458: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_99999_WeakTypeInferencePass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.233250: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.233477: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 0
2023-01-12 08:11:10.233633: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_0_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.350435: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.350647: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before calling Placer #nodes 5 #edges 6
2023-01-12 08:11:10.351505: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:10.351555: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0) -> (n3:double@CPU:0) {
2023-01-12 08:11:10.351568: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, device=CPU:0](n2)
2023-01-12 08:11:10.351575: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:10.351580: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:10.351687: W tensorflow/core/util/dump_graph.cc:134] Failed to dump placer_input because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.458452: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::Placer::Run()
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.458697: I tensorflow/core/common_runtime/placer.cc:178]     input: requested: '' assigned: '/job:localhost/replica:0/task:0/device:CPU:0'
2023-01-12 08:11:10.458750: I tensorflow/core/common_runtime/placer.cc:178]     _EagerConst: requested: '/job:localhost/replica:0/task:0/device:CPU:0' assigned: ''
2023-01-12 08:11:10.458762: I tensorflow/core/common_runtime/placer.cc:178]     output_RetVal: requested: '' assigned: '/job:localhost/replica:0/task:0/device:CPU:0'
2023-01-12 08:11:10.460312: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "input"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:10.461179: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "_EagerConst"
op: "_EagerConst"
input: "input"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:10.461361: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "output_RetVal"
op: "_Retval"
input: "_EagerConst"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:10.462103: W tensorflow/core/util/dump_graph.cc:134] Failed to dump placer_output because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.575322: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::Placer::Run()
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.683422: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INTERNAL: Failed to get the directory for colocation_graph because dump location is not specified through TF_DUMP_GRAPH_PREFIX environment variable". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::Internal<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)


        tensorflow::Placer::Run()
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.683612: E tensorflow/core/common_runtime/placer.cc:93] Failed to write final colocation graph to file  with INTERNAL: Failed to get the directory for colocation_graph because dump location is not specified through TF_DUMP_GRAPH_PREFIX environment variable
2023-01-12 08:11:10.683709: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running POST_PLACEMENT passes #nodes 5 #edges 6
2023-01-12 08:11:10.684589: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:10.684667: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0) -> (n3:double@CPU:0) {
2023-01-12 08:11:10.684701: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, device=CPU:0](n2)
2023-01-12 08:11:10.684712: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:10.684753: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:10.684806: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 1
2023-01-12 08:11:10.684971: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_1_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.806254: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.806470: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 1
2023-01-12 08:11:10.806641: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_1_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:10.918276: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:10.918492: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running POST_REWRITE_FOR_EXEC passes #nodes 5 #edges 6
2023-01-12 08:11:10.919326: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:10.919378: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0) -> (n3:double@CPU:0) {
2023-01-12 08:11:10.919392: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, device=CPU:0](n2)
2023-01-12 08:11:10.919399: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:10.919405: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:10.919422: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 2
2023-01-12 08:11:10.919543: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_2_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:11.036752: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:11.036985: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 5
2023-01-12 08:11:11.037083: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: CloneConstantsForBetterClusteringPass
2023-01-12 08:11:11.037109: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:11.037773: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_5_CloneConstantsForBetterClusteringPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:11.143235: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:11.143837: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 9
2023-01-12 08:11:11.143865: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ClusterScopingPass
2023-01-12 08:11:11.143892: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:11.144048: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_9_ClusterScopingPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:11.249790: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:11.250335: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 10
2023-01-12 08:11:11.250410: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: MarkForCompilationPass
2023-01-12 08:11:11.251275: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:11.251461: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaWhile
2023-01-12 08:11:11.251589: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: While
2023-01-12 08:11:11.251712: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Case
2023-01-12 08:11:11.251779: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Svd
2023-01-12 08:11:11.251832: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SelfAdjointEigV2
2023-01-12 08:11:11.251888: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaVariadicReduce
2023-01-12 08:11:11.251943: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaPad
2023-01-12 08:11:11.252006: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaDotV2
2023-01-12 08:11:11.252103: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaDot
2023-01-12 08:11:11.252154: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaDequantize
2023-01-12 08:11:11.252201: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaCustomCallV2
2023-01-12 08:11:11.252255: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaCustomCall
2023-01-12 08:11:11.252311: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaConv
2023-01-12 08:11:11.252372: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaBroadcastHelper
2023-01-12 08:11:11.252475: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterNdAdd
2023-01-12 08:11:11.252536: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterNdUpdate
2023-01-12 08:11:11.252592: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterMin
2023-01-12 08:11:11.252689: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterAdd
2023-01-12 08:11:11.252793: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AssignVariableOp
2023-01-12 08:11:11.252882: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ReadVariableOp
2023-01-12 08:11:11.252998: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Unpack
2023-01-12 08:11:11.253117: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _UnaryOpsComposition
2023-01-12 08:11:11.253225: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Digamma
2023-01-12 08:11:11.253321: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Lgamma
2023-01-12 08:11:11.253384: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Tanh
2023-01-12 08:11:11.253434: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Square
2023-01-12 08:11:11.253512: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Softsign
2023-01-12 08:11:11.253614: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Softplus
2023-01-12 08:11:11.253716: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sinh
2023-01-12 08:11:11.253940: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Neg
2023-01-12 08:11:11.254039: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: PopulationCount
2023-01-12 08:11:11.254098: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterDiv
2023-01-12 08:11:11.254226: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Log1p
2023-01-12 08:11:11.254338: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Reciprocal
2023-01-12 08:11:11.254421: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Inv
2023-01-12 08:11:11.254482: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterSub
2023-01-12 08:11:11.254561: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Expm1
2023-01-12 08:11:11.254729: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Exp
2023-01-12 08:11:11.254998: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sin
2023-01-12 08:11:11.255167: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Ceil
2023-01-12 08:11:11.255256: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Where
2023-01-12 08:11:11.255336: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Asinh
2023-01-12 08:11:11.255443: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Asin
2023-01-12 08:11:11.255549: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Abs
2023-01-12 08:11:11.255655: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IsNan
2023-01-12 08:11:11.255753: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conj
2023-01-12 08:11:11.255868: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Angle
2023-01-12 08:11:11.255969: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TridiagonalSolve
2023-01-12 08:11:11.256091: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: InvertPermutation
2023-01-12 08:11:11.256258: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ConjugateTranspose
2023-01-12 08:11:11.256365: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyPowerSign
2023-01-12 08:11:11.256464: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Real
2023-01-12 08:11:11.256562: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAddSign
2023-01-12 08:11:11.256651: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaConvV2
2023-01-12 08:11:11.256755: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAdadelta
2023-01-12 08:11:11.256849: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAdagradDA
2023-01-12 08:11:11.256940: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAdagradV2
2023-01-12 08:11:11.257031: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAdagrad
2023-01-12 08:11:11.257102: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyMomentum
2023-01-12 08:11:11.257193: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyGradientDescent
2023-01-12 08:11:11.257249: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TopKV2
2023-01-12 08:11:11.257298: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ToBool
2023-01-12 08:11:11.257346: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListPushBack
2023-01-12 08:11:11.257395: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListSetItem
2023-01-12 08:11:11.257446: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListConcatV2
2023-01-12 08:11:11.257541: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterMax
2023-01-12 08:11:11.257634: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListStack
2023-01-12 08:11:11.257722: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListGetItem
2023-01-12 08:11:11.257809: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListElementShape
2023-01-12 08:11:11.257936: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: EmptyTensorList
2023-01-12 08:11:11.258035: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListReserve
2023-01-12 08:11:11.258118: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListLength
2023-01-12 08:11:11.258194: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListSplit
2023-01-12 08:11:11.258260: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayGradV3
2023-01-12 08:11:11.258303: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayConcatV3
2023-01-12 08:11:11.258442: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayScatterV3
2023-01-12 08:11:11.258542: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayGatherV3
2023-01-12 08:11:11.258685: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorStridedSliceUpdate
2023-01-12 08:11:11.258796: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StridedSliceGrad
2023-01-12 08:11:11.258896: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArraySplitV3
2023-01-12 08:11:11.258983: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomGetAlg
2023-01-12 08:11:11.259066: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomGetKeyCounter
2023-01-12 08:11:11.259170: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomNormalV2
2023-01-12 08:11:11.259318: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sign
2023-01-12 08:11:11.259427: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomUniformFullIntV2
2023-01-12 08:11:11.259489: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomUniformIntV2
2023-01-12 08:11:11.259542: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Atan
2023-01-12 08:11:11.259598: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessParameterizedTruncatedNormal
2023-01-12 08:11:11.259659: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessTruncatedNormal
2023-01-12 08:11:11.259720: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomUniformFullInt
2023-01-12 08:11:11.259779: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomUniformInt
2023-01-12 08:11:11.259838: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatefulUniformFullInt
2023-01-12 08:11:11.259957: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatefulTruncatedNormal
2023-01-12 08:11:11.260071: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatefulUniform
2023-01-12 08:11:11.260151: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StackCloseV2
2023-01-12 08:11:11.260248: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAdam
2023-01-12 08:11:11.260357: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StackPopV2
2023-01-12 08:11:11.260511: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StackPushV2
2023-01-12 08:11:11.260603: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomNormal
2023-01-12 08:11:11.260698: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StackV2
2023-01-12 08:11:11.260817: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSpmdShardToFullShape
2023-01-12 08:11:11.260915: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayWriteV3
2023-01-12 08:11:11.261069: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SplitV
2023-01-12 08:11:11.261200: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Split
2023-01-12 08:11:11.261308: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SpaceToDepth
2023-01-12 08:11:11.261497: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SpaceToBatch
2023-01-12 08:11:11.261619: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SpaceToBatchND
2023-01-12 08:11:11.261753: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaVariadicSort
2023-01-12 08:11:11.261983: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SparseSoftmaxCrossEntropyWithLogits
2023-01-12 08:11:11.262124: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SoftmaxCrossEntropyWithLogits
2023-01-12 08:11:11.262222: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LogSoftmax
2023-01-12 08:11:11.262391: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Softmax
2023-01-12 08:11:11.262485: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Slice
2023-01-12 08:11:11.262577: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AssignVariableXlaConcatND
2023-01-12 08:11:11.262710: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaReduce
2023-01-12 08:11:11.262801: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaConcatND
2023-01-12 08:11:11.262909: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ComplexAbs
2023-01-12 08:11:11.263074: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ReadVariableXlaSplitND
2023-01-12 08:11:11.268086: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSplitND
2023-01-12 08:11:11.268526: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: OnesLike
2023-01-12 08:11:11.268695: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ZerosLike
2023-01-12 08:11:11.269198: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Squeeze
2023-01-12 08:11:11.269389: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ExpandDims
2023-01-12 08:11:11.269566: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Rank
2023-01-12 08:11:11.269814: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ShapeN
2023-01-12 08:11:11.269927: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSetDynamicDimensionSize
2023-01-12 08:11:11.269987: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cos
2023-01-12 08:11:11.270035: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSetBound
2023-01-12 08:11:11.270081: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Tile
2023-01-12 08:11:11.270161: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListFromTensor
2023-01-12 08:11:11.270357: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Shape
2023-01-12 08:11:11.270475: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Range
2023-01-12 08:11:11.270575: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaVariadicReduceV2
2023-01-12 08:11:11.270680: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaRecv
2023-01-12 08:11:11.270756: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSend
2023-01-12 08:11:11.270814: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SelectV2
2023-01-12 08:11:11.270996: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeQuantWithMinMaxVarsGradient
2023-01-12 08:11:11.271123: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeParam
2023-01-12 08:11:11.271267: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ExtractImagePatches
2023-01-12 08:11:11.271373: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AddV2
2023-01-12 08:11:11.271555: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FusedBatchNormGradV3
2023-01-12 08:11:11.271679: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Einsum
2023-01-12 08:11:11.271773: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DynamicStitch
2023-01-12 08:11:11.271884: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DynamicPartition
2023-01-12 08:11:11.271958: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ReciprocalGrad
2023-01-12 08:11:11.272061: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DepthToSpace
2023-01-12 08:11:11.272183: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Div
2023-01-12 08:11:11.272387: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPool3DGrad
2023-01-12 08:11:11.272513: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Acosh
2023-01-12 08:11:11.272617: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conv3DBackpropFilterV2
2023-01-12 08:11:11.272739: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conv2DBackpropFilter
2023-01-12 08:11:11.272833: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SoftplusGrad
2023-01-12 08:11:11.272929: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceStridedSliceAssign
2023-01-12 08:11:11.273030: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FFT3D
2023-01-12 08:11:11.273194: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conv2DBackpropInput
2023-01-12 08:11:11.273296: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaOptimizationBarrier
2023-01-12 08:11:11.273413: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Elu
2023-01-12 08:11:11.273528: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AddN
2023-01-12 08:11:11.273622: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ControlTrigger
2023-01-12 08:11:11.273739: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Reshape
2023-01-12 08:11:11.273876: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyFtrlV2
2023-01-12 08:11:11.273961: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ConcatOffset
2023-01-12 08:11:11.274041: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: PlaceholderWithDefault
2023-01-12 08:11:11.274125: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeQuantWithMinMaxVars
2023-01-12 08:11:11.274229: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BroadcastGradientArgs
2023-01-12 08:11:11.274310: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Xdivy
2023-01-12 08:11:11.274401: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Atanh
2023-01-12 08:11:11.274491: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FloorMod
2023-01-12 08:11:11.274625: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Const
2023-01-12 08:11:11.274726: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessIf
2023-01-12 08:11:11.274825: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BatchMatMul
2023-01-12 08:11:11.274917: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Rint
2023-01-12 08:11:11.275063: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: NonMaxSuppressionV4
2023-01-12 08:11:11.275192: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixDiagV2
2023-01-12 08:11:11.275299: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Min
2023-01-12 08:11:11.275439: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessMultinomial
2023-01-12 08:11:11.275618: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Betainc
2023-01-12 08:11:11.275730: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatefulPartitionedCall
2023-01-12 08:11:11.275959: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cast
2023-01-12 08:11:11.276239: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyProximalGradientDescent
2023-01-12 08:11:11.276390: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RandomGammaGrad
2023-01-12 08:11:11.276680: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListPopBack
2023-01-12 08:11:11.276892: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SquaredDifference
2023-01-12 08:11:11.277079: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Empty
2023-01-12 08:11:11.277359: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BesselI1e
2023-01-12 08:11:11.277597: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ApproxTopK
2023-01-12 08:11:11.277740: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LogicalAnd
2023-01-12 08:11:11.277866: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LessEqual
2023-01-12 08:11:11.277992: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Zeta
2023-01-12 08:11:11.278101: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TridiagonalMatMul
2023-01-12 08:11:11.278731: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSharding
2023-01-12 08:11:11.278930: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Polygamma
2023-01-12 08:11:11.279039: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: VariableShape
2023-01-12 08:11:11.279232: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Igammac
2023-01-12 08:11:11.279379: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResizeNearestNeighbor
2023-01-12 08:11:11.279513: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _ArrayToList
2023-01-12 08:11:11.279641: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AvgPoolGrad
2023-01-12 08:11:11.279724: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IgammaGradA
2023-01-12 08:11:11.279869: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: OneHot
2023-01-12 08:11:11.280035: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterNdSub
2023-01-12 08:11:11.280328: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceGather
2023-01-12 08:11:11.280480: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPoolGradGrad
2023-01-12 08:11:11.280756: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessCase
2023-01-12 08:11:11.281001: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IsFinite
2023-01-12 08:11:11.281279: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Pow
2023-01-12 08:11:11.281413: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BesselI0e
2023-01-12 08:11:11.281483: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SigmoidGrad
2023-01-12 08:11:11.281588: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeQuantWithMinMaxVarsPerChannel
2023-01-12 08:11:11.281693: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSvd
2023-01-12 08:11:11.281783: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: VarIsInitializedOp
2023-01-12 08:11:11.281901: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RandomUniform
2023-01-12 08:11:11.282014: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyFtrl
2023-01-12 08:11:11.282118: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SoftsignGrad
2023-01-12 08:11:11.282343: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomUniformV2
2023-01-12 08:11:11.282478: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RsqrtGrad
2023-01-12 08:11:11.282604: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatMul
2023-01-12 08:11:11.282725: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Bincount
2023-01-12 08:11:11.282849: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LeakyRelu
2023-01-12 08:11:11.283040: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyRMSProp
2023-01-12 08:11:11.283156: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BatchMatMulV3
2023-01-12 08:11:11.283269: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPool3DGradGrad
2023-01-12 08:11:11.283349: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LeftShift
2023-01-12 08:11:11.283424: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessTruncatedNormalV2
2023-01-12 08:11:11.283496: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Xlogy
2023-01-12 08:11:11.283671: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaKeyValueSort
2023-01-12 08:11:11.283754: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DeviceIndex
2023-01-12 08:11:11.283867: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: NextAfter
2023-01-12 08:11:11.284040: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sqrt
2023-01-12 08:11:11.284199: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SqrtGrad
2023-01-12 08:11:11.284415: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BatchToSpaceND
2023-01-12 08:11:11.284556: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Erfc
2023-01-12 08:11:11.284680: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyProximalAdagrad
2023-01-12 08:11:11.284832: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorScatterMax
2023-01-12 08:11:11.284977: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Selu
2023-01-12 08:11:11.285112: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Unique
2023-01-12 08:11:11.285265: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BitwiseOr
2023-01-12 08:11:11.285370: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FusedBatchNormV3
2023-01-12 08:11:11.285526: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaGather
2023-01-12 08:11:11.285643: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Floor
2023-01-12 08:11:11.285713: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StridedSlice
2023-01-12 08:11:11.285825: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: PadV2
2023-01-12 08:11:11.285966: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Igamma
2023-01-12 08:11:11.286097: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixSetDiag
2023-01-12 08:11:11.286217: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conv3DBackpropInputV2
2023-01-12 08:11:11.286391: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FusedBatchNormGradV2
2023-01-12 08:11:11.286522: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FusedBatchNormGrad
2023-01-12 08:11:11.286705: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RngReadAndSkip
2023-01-12 08:11:11.286831: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeQuantWithMinMaxArgs
2023-01-12 08:11:11.286977: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: GatherV2
2023-01-12 08:11:11.287240: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Imag
2023-01-12 08:11:11.287401: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cross
2023-01-12 08:11:11.287468: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Invert
2023-01-12 08:11:11.287526: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorScatterUpdate
2023-01-12 08:11:11.287584: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BitwiseAnd
2023-01-12 08:11:11.287640: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BiasAddGrad
2023-01-12 08:11:11.287693: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IsInf
2023-01-12 08:11:11.287751: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FloorDiv
2023-01-12 08:11:11.287908: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ApproximateEqual
2023-01-12 08:11:11.288007: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Less
2023-01-12 08:11:11.288110: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Fill
2023-01-12 08:11:11.288231: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _FusedBatchNormEx
2023-01-12 08:11:11.288413: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IdentityN
2023-01-12 08:11:11.289203: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyKerasMomentum
2023-01-12 08:11:11.289410: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaDynamicSlice
2023-01-12 08:11:11.289589: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sigmoid
2023-01-12 08:11:11.289826: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Equal
2023-01-12 08:11:11.290631: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AssignSubVariableOp
2023-01-12 08:11:11.290809: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Concat
2023-01-12 08:11:11.290944: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorListGather
2023-01-12 08:11:11.291099: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FusedBatchNorm
2023-01-12 08:11:11.291205: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Assert
2023-01-12 08:11:11.291283: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TanhGrad
2023-01-12 08:11:11.291501: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: CheckNumerics
2023-01-12 08:11:11.292929: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaRemoveDynamicDimensionSize
2023-01-12 08:11:11.293101: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LogicalOr
2023-01-12 08:11:11.293188: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BiasAdd
2023-01-12 08:11:11.293650: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BiasAddV1
2023-01-12 08:11:11.293865: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Bucketize
2023-01-12 08:11:11.293996: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: CollectiveAssignGroupV2
2023-01-12 08:11:11.294216: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaReduceWindow
2023-01-12 08:11:11.294331: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DepthwiseConv2dNativeBackpropInput
2023-01-12 08:11:11.294460: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FusedBatchNormV2
2023-01-12 08:11:11.294557: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DepthwiseConv2dNativeBackpropFilter
2023-01-12 08:11:11.294623: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IFFT
2023-01-12 08:11:11.294698: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: If
2023-01-12 08:11:11.294803: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatefulStandardNormalV2
2023-01-12 08:11:11.294934: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DepthwiseConv2dNative
2023-01-12 08:11:11.295030: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaEinsum
2023-01-12 08:11:11.295233: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Ndtri
2023-01-12 08:11:11.295358: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Rsqrt
2023-01-12 08:11:11.295433: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _Arg
2023-01-12 08:11:11.295492: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FFT
2023-01-12 08:11:11.295547: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Mod
2023-01-12 08:11:11.295610: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Atan2
2023-01-12 08:11:11.295689: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ParallelDynamicStitch
2023-01-12 08:11:11.295862: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Complex
2023-01-12 08:11:11.296034: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaDynamicUpdateSlice
2023-01-12 08:11:11.296116: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Mul
2023-01-12 08:11:11.296193: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Tan
2023-01-12 08:11:11.296258: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DivNoNan
2023-01-12 08:11:11.296397: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MulNoNan
2023-01-12 08:11:11.296513: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SeluGrad
2023-01-12 08:11:11.296708: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _XlaAotOnlyVarHandleOp
2023-01-12 08:11:11.296845: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Xlog1py
2023-01-12 08:11:11.296989: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Diag
2023-01-12 08:11:11.297104: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sub
2023-01-12 08:11:11.297194: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Maximum
2023-01-12 08:11:11.297327: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LogicalNot
2023-01-12 08:11:11.297547: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DataFormatVecPermute
2023-01-12 08:11:11.297690: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DataFormatVecPermute
2023-01-12 08:11:11.297787: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LinSpace
2023-01-12 08:11:11.297948: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conv2D
2023-01-12 08:11:11.298068: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BitwiseXor
2023-01-12 08:11:11.298206: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RightShift
2023-01-12 08:11:11.298343: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixDiagPart
2023-01-12 08:11:11.298544: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Conv3D
2023-01-12 08:11:11.298622: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: EnsureShape
2023-01-12 08:11:11.298682: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RealDiv
2023-01-12 08:11:11.298750: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomUniform
2023-01-12 08:11:11.298818: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DataFormatDimMap
2023-01-12 08:11:11.299076: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MirrorPad
2023-01-12 08:11:11.299509: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeQuantWithMinMaxVarsPerChannelGradient
2023-01-12 08:11:11.299644: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BroadcastArgs
2023-01-12 08:11:11.299956: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: CollectiveReduceV2
2023-01-12 08:11:11.300112: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FFT2D
2023-01-12 08:11:11.306783: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DiagPart
2023-01-12 08:11:11.307618: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IFFT2D
2023-01-12 08:11:11.307938: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IFFT3D
2023-01-12 08:11:11.308366: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayV3
2023-01-12 08:11:11.308458: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Size
2023-01-12 08:11:11.308609: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: DenseBincount
2023-01-12 08:11:11.326397: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RFFT
2023-01-12 08:11:11.326632: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RFFT2D
2023-01-12 08:11:11.326782: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaIf
2023-01-12 08:11:11.326920: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Relu6
2023-01-12 08:11:11.327248: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RFFT3D
2023-01-12 08:11:11.327674: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPoolGrad
2023-01-12 08:11:11.327985: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IRFFT
2023-01-12 08:11:11.337467: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IRFFT2D
2023-01-12 08:11:11.343849: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessWhile
2023-01-12 08:11:11.352694: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: IRFFT3D
2023-01-12 08:11:11.353007: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Erfinv
2023-01-12 08:11:11.353535: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BroadcastTo
2023-01-12 08:11:11.353826: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _ListToArray
2023-01-12 08:11:11.354042: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Minimum
2023-01-12 08:11:11.373169: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SymbolicGradient
2023-01-12 08:11:11.376035: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _FusedConv2D
2023-01-12 08:11:11.392075: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RandomStandardNormal
2023-01-12 08:11:11.392334: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LowerBound
2023-01-12 08:11:11.392416: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResizeBilinearGrad
2023-01-12 08:11:11.392480: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Reverse
2023-01-12 08:11:11.392697: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyCenteredRMSProp
2023-01-12 08:11:11.393105: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RngSkip
2023-01-12 08:11:11.393732: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: GatherNd
2023-01-12 08:11:11.394058: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaScatter
2023-01-12 08:11:11.394899: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Identity
2023-01-12 08:11:11.398422: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RGBToHSV
2023-01-12 08:11:11.399275: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSelfAdjointEig
2023-01-12 08:11:11.399460: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPoolGradV2
2023-01-12 08:11:11.399556: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: PreventGradient
2023-01-12 08:11:11.399634: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaReducePrecision
2023-01-12 08:11:11.399879: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StopGradient
2023-01-12 08:11:11.400141: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BatchToSpace
2023-01-12 08:11:11.400329: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _EagerConst
2023-01-12 08:11:11.400884: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AdjustContrastv2
2023-01-12 08:11:11.401277: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AdjustSaturation
2023-01-12 08:11:11.401570: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AdjustHue
2023-01-12 08:11:11.401787: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cosh
2023-01-12 08:11:11.401993: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: NonMaxSuppressionV3
2023-01-12 08:11:11.402194: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResizeBilinear
2023-01-12 08:11:11.402497: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceApplyAdaMax
2023-01-12 08:11:11.403321: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: InTopKV2
2023-01-12 08:11:11.403472: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Greater
2023-01-12 08:11:11.403584: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ArgMax
2023-01-12 08:11:11.403681: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: EluGrad
2023-01-12 08:11:11.403767: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: QuantizeAndDequantizeV2
2023-01-12 08:11:11.403841: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: FakeQuantWithMinMaxArgsGradient
2023-01-12 08:11:11.403923: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ArgMin
2023-01-12 08:11:11.404014: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: L2Loss
2023-01-12 08:11:11.404158: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: UnsortedSegmentSum
2023-01-12 08:11:11.404256: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AvgPool
2023-01-12 08:11:11.404341: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ListDiff
2023-01-12 08:11:11.404429: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaCallModule
2023-01-12 08:11:11.404513: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ReverseSequence
2023-01-12 08:11:11.404595: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: UpperBound
2023-01-12 08:11:11.404676: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ClipByValue
2023-01-12 08:11:11.404750: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LRN
2023-01-12 08:11:11.405056: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cumsum
2023-01-12 08:11:11.405399: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LRNGrad
2023-01-12 08:11:11.405549: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Round
2023-01-12 08:11:11.405975: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SparseMatMul
2023-01-12 08:11:11.406260: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Log
2023-01-12 08:11:11.406431: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Select
2023-01-12 08:11:11.406518: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cholesky
2023-01-12 08:11:11.406613: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TruncateMod
2023-01-12 08:11:11.406695: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixDiag
2023-01-12 08:11:11.406777: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AssignAddVariableOp
2023-01-12 08:11:11.407394: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaRngBitGenerator
2023-01-12 08:11:11.407760: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPool3D
2023-01-12 08:11:11.407961: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixDiagV3
2023-01-12 08:11:11.408188: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixDiagPartV2
2023-01-12 08:11:11.408426: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterMul
2023-01-12 08:11:11.408566: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixDiagPartV3
2023-01-12 08:11:11.408680: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixSetDiagV2
2023-01-12 08:11:11.409099: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixSetDiagV3
2023-01-12 08:11:11.409875: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayReadV3
2023-01-12 08:11:11.410289: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ReverseV2
2023-01-12 08:11:11.410909: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixSolve
2023-01-12 08:11:11.411341: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Relu
2023-01-12 08:11:11.411456: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: BatchMatMulV2
2023-01-12 08:11:11.411718: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixTriangularSolve
2023-01-12 08:11:11.411812: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Multinomial
2023-01-12 08:11:11.411884: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: UnsortedSegmentMin
2023-01-12 08:11:11.412159: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MirrorPadGrad
2023-01-12 08:11:11.412314: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: NoOp
2023-01-12 08:11:11.412412: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Add
2023-01-12 08:11:11.412530: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: PartitionedCall
2023-01-12 08:11:11.412647: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Pack
2023-01-12 08:11:11.412740: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Pad
2023-01-12 08:11:11.412899: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSpmdFullToShardShape
2023-01-12 08:11:11.413166: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPool
2023-01-12 08:11:11.413476: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: UniqueV2
2023-01-12 08:11:11.413708: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatelessRandomGetKeyCounterAlg
2023-01-12 08:11:11.413771: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: QuantizeAndDequantizeV4
2023-01-12 08:11:11.413830: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSort
2023-01-12 08:11:11.413892: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Bitcast
2023-01-12 08:11:11.413951: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPoolV2
2023-01-12 08:11:11.414012: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaSelectAndScatter
2023-01-12 08:11:11.414932: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ConcatV2
2023-01-12 08:11:11.415207: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Snapshot
2023-01-12 08:11:11.415624: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AvgPool3D
2023-01-12 08:11:11.416845: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixInverse
2023-01-12 08:11:11.417131: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: NotEqual
2023-01-12 08:11:11.417330: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ParameterizedTruncatedNormal
2023-01-12 08:11:11.417474: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: AvgPool3DGrad
2023-01-12 08:11:11.420571: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArrayCloseV3
2023-01-12 08:11:11.421204: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MaxPoolGradGradV2
2023-01-12 08:11:11.421527: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Gather
2023-01-12 08:11:11.421929: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: UnsortedSegmentMax
2023-01-12 08:11:11.422153: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: GreaterEqual
2023-01-12 08:11:11.422444: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Qr
2023-01-12 08:11:11.422651: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: HSVToRGB
2023-01-12 08:11:11.424559: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: QuantizeAndDequantizeV3
2023-01-12 08:11:11.424778: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RandomShuffle
2023-01-12 08:11:11.425432: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: RandomUniformInt
2023-01-12 08:11:11.425705: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: SparseToDense
2023-01-12 08:11:11.425899: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Mean
2023-01-12 08:11:11.426395: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TruncateDiv
2023-01-12 08:11:11.426609: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TruncatedNormal
2023-01-12 08:11:11.426926: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Max
2023-01-12 08:11:11.427393: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Roll
2023-01-12 08:11:11.427730: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Erf
2023-01-12 08:11:11.427895: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Sum
2023-01-12 08:11:11.428246: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Prod
2023-01-12 08:11:11.428511: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: All
2023-01-12 08:11:11.428620: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: LeakyReluGrad
2023-01-12 08:11:11.428713: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Dequantize
2023-01-12 08:11:11.428796: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Any
2023-01-12 08:11:11.428873: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ReluGrad
2023-01-12 08:11:11.429557: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: StatefulUniformInt
2023-01-12 08:11:11.429725: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Relu6Grad
2023-01-12 08:11:11.429823: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorArraySizeV3
2023-01-12 08:11:11.429893: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: XlaReplicaId
2023-01-12 08:11:11.430011: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: _Retval
2023-01-12 08:11:11.432274: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Cumprod
2023-01-12 08:11:11.432737: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ResourceScatterUpdate
2023-01-12 08:11:11.432954: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorScatterMin
2023-01-12 08:11:11.433086: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: ScatterNd
2023-01-12 08:11:11.433210: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Acos
2023-01-12 08:11:11.433392: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorScatterAdd
2023-01-12 08:11:11.433542: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: MatrixBandPart
2023-01-12 08:11:11.433762: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: TensorScatterSub
2023-01-12 08:11:11.434333: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: Transpose
2023-01-12 08:11:11.435791: I tensorflow/compiler/tf2xla/xla_op_registry.cc:328] XLA op registration: device: XLA_CPU_JIT op: UnsortedSegmentProd
2023-01-12 08:11:11.437051: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1263] Starting fuel: infinity
2023-01-12 08:11:11.437258: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1268] sorted_nodes.size() = 3
2023-01-12 08:11:11.441478: I tensorflow/compiler/tf2xla/xla_op_registry.cc:153] tf_xla_cpu_global_jit = 0
2023-01-12 08:11:11.441921: I tensorflow/compiler/tf2xla/xla_op_registry.cc:51] LaunchOpHasKernelForDevice kernel_class_name: XlaLocalLaunchOp
2023-01-12 08:11:11.442099: I tensorflow/compiler/tf2xla/xla_op_registry.cc:51] LaunchOpHasKernelForDevice kernel_class_name: XlaLocalLaunchOp
2023-01-12 08:11:11.442146: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for input: CPU
2023-01-12 08:11:11.677382: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:11.832744: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:11.833262: I tensorflow/compiler/jit/compilability_check_util.cc:74] Found uncompilable node input (op _Arg): top level _Arg or _Retval
2023-01-12 08:11:11.833319: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for _EagerConst: CPU
2023-01-12 08:11:11.999629: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:12.171674: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:12.172516: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for output_RetVal: CPU
2023-01-12 08:11:12.459807: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:12.681961: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:12.682516: I tensorflow/compiler/jit/compilability_check_util.cc:74] Found uncompilable node output_RetVal (op _Retval): top level _Arg or _Retval
2023-01-12 08:11:12.682544: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1437] compilation_candidates_.size() = 1
2023-01-12 08:11:12.685678: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting _SOURCE
2023-01-12 08:11:12.685757: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting input
2023-01-12 08:11:12.685777: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting _EagerConst
2023-01-12 08:11:12.685791: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting output_RetVal
2023-01-12 08:11:12.685819: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting _SOURCE
2023-01-12 08:11:12.685887: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting input
2023-01-12 08:11:12.685937: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting _EagerConst
2023-01-12 08:11:12.685968: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting output_RetVal
2023-01-12 08:11:12.685996: I tensorflow/compiler/jit/deadness_analysis.cc:1413] Done populating frame  using the pessimistic mode.
2023-01-12 08:11:12.686092: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^_EagerConst -> #true
2023-01-12 08:11:12.686118: I tensorflow/compiler/jit/deadness_analysis.cc:1561] _EagerConst:0 -> #true
2023-01-12 08:11:12.686132: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^_SOURCE -> #true
2023-01-12 08:11:12.686146: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^input -> #true
2023-01-12 08:11:12.686159: I tensorflow/compiler/jit/deadness_analysis.cc:1561] input:0 -> #true
2023-01-12 08:11:12.686173: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^output_RetVal -> #true
2023-01-12 08:11:12.686225: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:650] DeadnessAnalysis time: 1.39 ms (cumulative: 1.39 ms, max: 1.39 ms, #called: 1)
2023-01-12 08:11:12.686368: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] _SOURCE -> {}
2023-01-12 08:11:12.686452: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] input -> {}
2023-01-12 08:11:12.686485: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] _EagerConst -> {}
2023-01-12 08:11:12.686511: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] output_RetVal -> {}
2023-01-12 08:11:12.686531: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] _SINK -> {}
2023-01-12 08:11:12.827399: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:12.827897: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:775] Running phase 0
2023-01-12 08:11:12.827974: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:798] Running phase 1
2023-01-12 08:11:12.827997: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:854] Running phase 2
2023-01-12 08:11:12.828016: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:863] Checking idempotence
2023-01-12 08:11:12.828053: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1801] Not compiling cluster with device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:12.828194: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1610] *** Clustering info for graph of size 5
2023-01-12 08:11:12.831504: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1611]  Built 0 clusters, size 0 / 5 (0.00%)
2023-01-12 08:11:12.831606: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1630]  Unclustered nodes: 5 / 5 (100.00%)
2023-01-12 08:11:12.831627: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   NoOp: 2 instances
2023-01-12 08:11:12.831638: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   _Arg: 1 instances
2023-01-12 08:11:12.831649: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   _EagerConst: 1 instances
2023-01-12 08:11:12.831659: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   _Retval: 1 instances
2023-01-12 08:11:12.831691: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1690] *** Inter-Cluster edges:
2023-01-12 08:11:12.831703: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1692]    [none]
2023-01-12 08:11:12.831784: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1554] MarkForCompilationPassImpl::Run time: 1.4 s (cumulative: 1.4 s, max: 1.4 s, #called: 1)
2023-01-12 08:11:12.832081: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_10_MarkForCompilationPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:12.962163: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:12.962769: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 12
2023-01-12 08:11:12.962797: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ForceXlaConstantsOnHostPass
2023-01-12 08:11:12.963053: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_12_ForceXlaConstantsOnHostPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.092239: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.092822: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 20
2023-01-12 08:11:13.092850: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: IncreaseDynamismForAutoJitPass
2023-01-12 08:11:13.093029: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_20_IncreaseDynamismForAutoJitPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.242857: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.243556: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 30
2023-01-12 08:11:13.243589: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: PartiallyDeclusterPass
2023-01-12 08:11:13.244027: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_30_PartiallyDeclusterPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.381434: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.381969: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 40
2023-01-12 08:11:13.381992: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ReportClusteringInfoPass
2023-01-12 08:11:13.382092: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:13.382329: I tensorflow/compiler/jit/xla_activity_logging_listener.cc:39] Not logging: logger not ready yet.
2023-01-12 08:11:13.382496: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_40_ReportClusteringInfoPass_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.495567: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.496192: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 50
2023-01-12 08:11:13.496293: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: EncapsulateSubgraphsPass
2023-01-12 08:11:13.496320: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1139] EncapsulateSubgraphsPass::Run
2023-01-12 08:11:13.496455: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_subgraphs_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.611440: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.612450: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:13.612559: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:13.612740: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_subgraphs_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.737361: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.738092: I tensorflow/compiler/jit/xla_cluster_util.cc:558] # iterations = 1
2023-01-12 08:11:13.738191: I tensorflow/compiler/jit/xla_cluster_util.cc:558] # iterations = 1
2023-01-12 08:11:13.738280: I tensorflow/compiler/jit/xla_cluster_util.cc:590] GetNodesRelatedToRefVariables() found 0 nodes
2023-01-12 08:11:13.738523: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "_SOURCE"
op: "NoOp"
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}

2023-01-12 08:11:13.738705: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "_SINK"
op: "NoOp"
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}

2023-01-12 08:11:13.738900: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "input"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:13.739135: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "_EagerConst"
op: "_EagerConst"
input: "input"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}

2023-01-12 08:11:13.739363: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "output_RetVal"
op: "_Retval"
input: "_EagerConst"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:13.739784: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_50_EncapsulateSubgraphsPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.858758: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.859387: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 60
2023-01-12 08:11:13.859413: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: BuildXlaOpsPass
2023-01-12 08:11:13.859464: I tensorflow/compiler/jit/build_xla_ops_pass.cc:603] print_outputs = 0
2023-01-12 08:11:13.859510: I tensorflow/compiler/jit/build_xla_ops_pass.cc:604] check_input_numerics = 0
2023-01-12 08:11:13.859526: I tensorflow/compiler/jit/build_xla_ops_pass.cc:605] check_output_numerics = 0
2023-01-12 08:11:13.859641: W tensorflow/core/util/dump_graph.cc:134] Failed to dump build_xla_ops because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:13.986358: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::BuildXlaOpsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:13.987035: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_60_BuildXlaOpsPass_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.109630: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:14.110220: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 2
2023-01-12 08:11:14.110408: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_2_93931476575232 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.217187: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:14.217796: I tensorflow/core/common_runtime/replicate_per_replica_nodes.cc:277] No nodes with composiste device found.
2023-01-12 08:11:14.217851: I tensorflow/core/common_runtime/process_function_library_runtime.cc:993] Main function graph to be partitioned:
2023-01-12 08:11:14.218050: I tensorflow/core/common_runtime/process_function_library_runtime.cc:994] 
(input:double@CPU:0) -> (_EagerConst:double@CPU:0) {
  _EagerConst = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](input)
}

2023-01-12 08:11:14.220585: I tensorflow/core/graph/graph_partition.cc:1251] Added send/recv: controls=0, data=0
2023-01-12 08:11:14.220652: W tensorflow/core/util/dump_graph.cc:134] Failed to dump partition_/job:localhost/replica:0/task:0/device:CPU:0_93931480121432 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.353382: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::Partition(tensorflow::PartitionOptions const&, tensorflow::Graph*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::GraphDef, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> > >*)

        tensorflow::PartitionFunctionGraph(tensorflow::DeviceSet const&, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> > > > >*, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (tensorflow::Edge const*)>)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:14.354063: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:14.354253: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:14.354528: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for input
2023-01-12 08:11:14.354635: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _EagerConst
2023-01-12 08:11:14.354725: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for output_RetVal
2023-01-12 08:11:14.354898: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running POST_PARTITIONING passes (/job:localhost/replica:0/task:0/device:CPU:0) #nodes 5 #edges 5
2023-01-12 08:11:14.355149: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:14.355177: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0) -> (n3:double@CPU:0) {
2023-01-12 08:11:14.355192: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](n2)
2023-01-12 08:11:14.355204: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:14.355216: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:14.355235: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 3
2023-01-12 08:11:14.355325: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_3_partition_/job:localhost/replica:0/task:0/device:CPU:0_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.468920: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:14.469537: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 1
2023-01-12 08:11:14.469611: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: MklLayoutRewritePass
2023-01-12 08:11:14.469645: I tensorflow/core/common_runtime/mkl_layout_pass.cc:4198] TF-MKL: MKL is not enabled
2023-01-12 08:11:14.469824: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_3_phase_1_MklLayoutRewritePass_partition_/job:localhost/replica:0/task:0/device:CPU:0_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.685626: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:14.687405: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 3
2023-01-12 08:11:14.687913: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_3_partition_/job:localhost/replica:0/task:0/device:CPU:0_93931476576016 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.820401: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:14.820965: I tensorflow/core/common_runtime/function_utils.cc:78] Graph After all optimization passes (/job:localhost/replica:0/task:0/device:CPU:0) #nodes 5 #edges 5
2023-01-12 08:11:14.821272: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:14.821332: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0) -> (n3:double@CPU:0) {
2023-01-12 08:11:14.821350: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](n2)
2023-01-12 08:11:14.821362: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:14.821373: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:14.821463: W tensorflow/core/util/dump_graph.cc:134] Failed to dump pflr_after_all_optimization_passes_93931476576016_/job:localhost/replica:0/task:0/device:CPU:0 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:14.928511: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.041547: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named 'sub_index' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::UpdateArgAndRetvalMetadata(tensorflow::Graph*, std::vector<tensorflow::FunctionArgIndex, std::allocator<tensorflow::FunctionArgIndex> >*, std::vector<int, std::allocator<int> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, bool)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.172678: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named 'sub_index' in NodeDef:
         [[{{node input}}]]". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        void tsl::errors::AppendToMessage<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tsl::Status*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
        tensorflow::AttachDef(tsl::Status const&, tensorflow::NodeDef const&, bool)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::UpdateArgAndRetvalMetadata(tensorflow::Graph*, std::vector<tensorflow::FunctionArgIndex, std::allocator<tensorflow::FunctionArgIndex> >*, std::vector<int, std::allocator<int> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, bool)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.309124: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpRegistryInterface::LookUpOpDef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**) const
        tensorflow::FunctionLibraryDefinition::AddFunctionDefHelper(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&, bool*)
        tensorflow::FunctionLibraryDefinition::AddFunctionDef(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.309701: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:15.309908: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1150] Start instantiating component function __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0 on device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.310013: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1152] 
__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0(input:double) -> (output_retval:double) {
  _EagerConst = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](input)
  return output_retval = _EagerConst:output:0
}

2023-01-12 08:11:15.310191: I tensorflow/core/framework/function.cc:742] Instantiate function definition: name=__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0 #input_args=1 #output_args=1 #control_output=0
2023-01-12 08:11:15.310258: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:15.310280: I tensorflow/core/framework/function.cc:747] || __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0(input:double) -> (output_retval:double) {
2023-01-12 08:11:15.310293: I tensorflow/core/framework/function.cc:747] ||   _EagerConst = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](input)
2023-01-12 08:11:15.310306: I tensorflow/core/framework/function.cc:747] ||   return output_retval = _EagerConst:output:0
2023-01-12 08:11:15.310318: I tensorflow/core/framework/function.cc:747] || }
2023-01-12 08:11:15.310329: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:15.311593: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:15.311766: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:15.312043: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for input
2023-01-12 08:11:15.312144: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _EagerConst
2023-01-12 08:11:15.312238: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for output_retval_RetVal
2023-01-12 08:11:15.312780: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1159] Finished instantiating component function __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0 with handle 0 status: OK
2023-01-12 08:11:15.312940: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1195] Instantiated MultiDevice function "__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0" with handle 1
2023-01-12 08:11:15.313194: I tensorflow/core/common_runtime/eager/execute.cc:245] !is_function: 0
2023-01-12 08:11:15.313225: I tensorflow/core/common_runtime/eager/execute.cc:246] handle->Type(): 0
2023-01-12 08:11:15.313260: I tensorflow/core/common_runtime/eager/execute.cc:1445] Executing op _EagerConst in device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.313305: I tensorflow/core/common_runtime/eager/tensor_handle.cc:495] TensorValue on TensorHandle: 0x556e1ce8bbf0 device: 0
2023-01-12 08:11:15.313492: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1347] Running component function on device /job:localhost/replica:0/task:0/device:CPU:0 from __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0 with handle 0
2023-01-12 08:11:15.313541: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1356]     with FLR::Options(step_id=-8225150392039021579 rendezvous=set cancellation_manager=set collective_executor=set step_container=set stats_collector=unset runner=set remote_execution=0 source_device= create_rendezvous=0 allow_dead_tensors=1 args_alloc_attrs=[AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0)] rets_alloc_attrs=[AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0)])
2023-01-12 08:11:15.313671: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:15.313770: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:15.313892: I tensorflow/core/common_runtime/function.cc:893] Pruning function body: function_name=__wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0_18052295582031462748_0
2023-01-12 08:11:15.313994: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : output_retval_RetVal from _EagerConst
2023-01-12 08:11:15.314034: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : _EagerConst from input
2023-01-12 08:11:15.314118: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : input from _SOURCE
2023-01-12 08:11:15.314179: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Initial #nodes 5 #edges 6
2023-01-12 08:11:15.314422: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:15.314469: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double) -> (n3:double) {
2023-01-12 08:11:15.314506: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](n2)
2023-01-12 08:11:15.314528: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:15.314547: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:15.314572: I tensorflow/core/common_runtime/function_utils.cc:164] Removing list array converter
2023-01-12 08:11:15.314618: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before #nodes 5 #edges 6
2023-01-12 08:11:15.314752: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:15.314780: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double) -> (n3:double) {
2023-01-12 08:11:15.314794: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](n2)
2023-01-12 08:11:15.314806: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:15.314827: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:15.314911: I tensorflow/core/common_runtime/constant_folding.cc:613] No constant foldable nodes found
2023-01-12 08:11:15.315357: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:15.315429: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:15.315529: I tensorflow/core/common_runtime/function_utils.cc:78] Graph ReCopy #nodes 5 #edges 7
2023-01-12 08:11:15.315682: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:15.315715: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double) -> (n3:double) {
2023-01-12 08:11:15.315737: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n3 = _EagerConst[T=double, _XlaHasReferenceVars=false, device=CPU:0](n2)
2023-01-12 08:11:15.315750: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:15.315763: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:15.315873: W tensorflow/core/util/dump_graph.cc:134] Failed to dump EnsureMemoryTypes because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:15.550729: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EnsureMemoryTypes(tsl::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)
        tensorflow::FunctionLibraryRuntimeImpl::CreateItem(tensorflow::FunctionLibraryRuntimeImpl::Item**)
        tensorflow::FunctionLibraryRuntimeImpl::GetOrCreateItem(unsigned long, tensorflow::FunctionLibraryRuntimeImpl::Item**)
        tensorflow::FunctionLibraryRuntimeImpl::PrepareRunSync(unsigned long, tensorflow::FunctionLibraryRuntime::Options*, tensorflow::FunctionLibraryRuntimeImpl::Item**, std::unique_ptr<tensorflow::PrivateIntraProcessRendezvous, std::default_delete<tensorflow::PrivateIntraProcessRendezvous> >*)
        tensorflow::FunctionLibraryRuntimeImpl::RunSync(tensorflow::FunctionLibraryRuntime::Options, unsigned long, absl::lts_20220623::Span<tensorflow::Tensor const>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
        tensorflow::ProcessFunctionLibraryRuntime::RunMultiDeviceSync(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long, std::vector<std::variant<tensorflow::Tensor, tensorflow::TensorShape>, std::allocator<std::variant<tensorflow::Tensor, tensorflow::TensorShape> > >*, std::function<tsl::Status (tensorflow::ProcessFunctionLibraryRuntime::ComponentFunctionData const&, tensorflow::ProcessFunctionLibraryRuntime::InternalArgs*)>) const
        tensorflow::ProcessFunctionLibraryRuntime::RunSync(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long, absl::lts_20220623::Span<tensorflow::Tensor const>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) const
        tensorflow::KernelAndDeviceFunc::Run(tensorflow::ScopedStepContainer*, tensorflow::EagerKernelArgs const&, std::vector<std::variant<tensorflow::Tensor, tensorflow::TensorShape>, std::allocator<std::variant<tensorflow::Tensor, tensorflow::TensorShape> > >*, tsl::CancellationManager*, std::optional<tensorflow::EagerFunctionParams> const&, std::optional<tensorflow::ManagedStackTrace> const&, tensorflow::CoordinationServiceAgent*)
        tensorflow::EagerKernelExecute(tensorflow::EagerContext*, absl::lts_20220623::InlinedVector<tensorflow::TensorHandle*, 4ul, std::allocator<tensorflow::TensorHandle*> > const&, std::optional<tensorflow::EagerFunctionParams> const&, std::unique_ptr<tensorflow::KernelAndDevice, tsl::core::RefCountDeleter> const&, tensorflow::GraphCollector*, tsl::CancellationManager*, absl::lts_20220623::Span<tensorflow::TensorHandle*>, std::optional<tensorflow::ManagedStackTrace> const&)
        tensorflow::ExecuteNode::Run()
        tensorflow::EagerExecutor::SyncExecute(tensorflow::EagerNode*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.551812: I tensorflow/core/common_runtime/memory_types.cc:210] Dumped graph after EnsureMemoryTypes to (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:15.552143: I tensorflow/core/framework/op_kernel.cc:1689] Instantiating kernel for node: {{node _EagerConst}} = _EagerConst[T=DT_DOUBLE, _XlaHasReferenceVars=false, _device="/job:localhost/replica:0/task:0/device:CPU:0"](input)
2023-01-12 08:11:15.552699: I tensorflow/core/framework/op_kernel.cc:1689] Instantiating kernel for node: {{node output_retval_RetVal}} = _Retval[T=DT_DOUBLE, index=0](_EagerConst)
2023-01-12 08:11:15.555881: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1370] Component function execution succeeded.
2023-01-12 08:11:15.556057: I tensorflow/core/common_runtime/eager/tensor_handle.cc:253] Creating Local TensorHandle: 0x556e1d044c40 device: [] tensor: Tensor<type: double shape: [3,3]>
2023-01-12 08:11:15.556208: I tensorflow/core/common_runtime/eager/tensor_handle.cc:422] Releasing tensor handle 0x556e1ce8bbf0
2023-01-12 08:11:15.556249: I tensorflow/core/common_runtime/eager/tensor_handle.cc:419] Deleting tensor handle 0x556e1ce8bbf0
2023-01-12 08:11:15.559364: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogRawAllocation { step_id: -3 operation: "TF_NewTensor" num_bytes: 72 ptr: 93931480121472 allocation_id: 5 allocator_name: "cpu" }
2023-01-12 08:11:15.559537: I tensorflow/core/common_runtime/eager/tensor_handle.cc:253] Creating Local TensorHandle: 0x556e1ce8bbf0 device: [] tensor: Tensor<type: double shape: [3,3]>
2023-01-12 08:11:15.559728: I tensorflow/core/common_runtime/eager/execute.cc:1795] op: _EagerConst is not Async.
2023-01-12 08:11:15.559814: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.559907: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.560033: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.560092: I tensorflow/core/common_runtime/eager/execute.cc:987] _EagerConst:input:0 /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.692383: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Unknown composite device: /job:localhost/replica:0/task:0/device:CPU:0". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)

        tensorflow::EagerContext::FindCompositeDeviceFromName(std::basic_string_view<char, std::char_traits<char> >, tensorflow::CompositeDevice**) const



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        tensorflow::EagerConst(TFE_Context*, TFE_TensorHandle*, char const*, TF_Status*)
        tensorflow::ConvertToEagerTensorUncached(TFE_Context*, _object*, tensorflow::DataType, char const*)
        tensorflow::ConvertToEagerTensor(TFE_Context*, _object*, tensorflow::DataType, char const*)
        EagerTensor_init
        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        PyObject_Call
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.693266: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.693324: I tensorflow/core/common_runtime/eager/execute.cc:923] ctx.RunEagerOpAsFunction(): 1
2023-01-12 08:11:15.693399: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.693434: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.693517: I tensorflow/core/common_runtime/eager/execute.cc:245] !is_function: 0
2023-01-12 08:11:15.693540: I tensorflow/core/common_runtime/eager/execute.cc:246] handle->Type(): 0
2023-01-12 08:11:15.693563: I tensorflow/core/common_runtime/eager/execute.cc:1445] Executing op _EagerConst in device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.693619: I tensorflow/core/common_runtime/eager/tensor_handle.cc:495] TensorValue on TensorHandle: 0x556e1ce8bbf0 device: 0
2023-01-12 08:11:15.693874: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1347] Running component function on device /job:localhost/replica:0/task:0/device:CPU:0 from __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:CPU:0 with handle 0
2023-01-12 08:11:15.693991: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1356]     with FLR::Options(step_id=-8369561641587738136 rendezvous=set cancellation_manager=set collective_executor=set step_container=set stats_collector=unset runner=set remote_execution=0 source_device= create_rendezvous=0 allow_dead_tensors=1 args_alloc_attrs=[AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0)] rets_alloc_attrs=[AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0)])
2023-01-12 08:11:15.694366: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1370] Component function execution succeeded.
2023-01-12 08:11:15.694485: I tensorflow/core/common_runtime/eager/tensor_handle.cc:253] Creating Local TensorHandle: 0x556e204b3360 device: [] tensor: Tensor<type: double shape: [3,3]>
2023-01-12 08:11:15.694596: I tensorflow/core/common_runtime/eager/tensor_handle.cc:422] Releasing tensor handle 0x556e1ce8bbf0
2023-01-12 08:11:15.694620: I tensorflow/core/common_runtime/eager/tensor_handle.cc:419] Deleting tensor handle 0x556e1ce8bbf0
2023-01-12 08:11:15.695569: I tensorflow/core/common_runtime/eager/execute.cc:1795] op: MatMul is not Async.
2023-01-12 08:11:15.695683: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.695912: I tensorflow/core/common_runtime/eager/execute.cc:1036] PreferredDevice MatMul: /job:localhost/replica:0/task:0
2023-01-12 08:11:15.695945: I tensorflow/core/common_runtime/eager/execute.cc:1037] Placer place op [MatMul] on device: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.699733: I tensorflow/core/common_runtime/eager/execute.cc:1039] Available kernels for MatMul are  device='XLA_CPU_JIT'; T in [DT_FLOAT, DT_DOUBLE, DT_INT32, DT_COMPLEX64, DT_INT64, DT_BFLOAT16, DT_COMPLEX128, DT_HALF]
  device='CPU'; T in [DT_INT64]
  device='CPU'; T in [DT_INT32]
  device='CPU'; T in [DT_INT16]
  device='CPU'; T in [DT_DOUBLE]
  device='CPU'; T in [DT_FLOAT]
  device='CPU'; T in [DT_BFLOAT16]
  device='CPU'; T in [DT_HALF]
  device='CPU'; T in [DT_COMPLEX128]
  device='CPU'; T in [DT_COMPLEX64]

2023-01-12 08:11:15.700134: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.700534: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.700743: I tensorflow/core/common_runtime/eager/execute.cc:987] MatMul:input:0 /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.850817: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Unknown composite device: /job:localhost/replica:0/task:0/device:CPU:0". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)

        tensorflow::EagerContext::FindCompositeDeviceFromName(std::basic_string_view<char, std::char_traits<char> >, tensorflow::CompositeDevice**) const



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.851261: I tensorflow/core/common_runtime/eager/execute.cc:987] MatMul:input:1 /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.925001: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Unknown composite device: /job:localhost/replica:0/task:0/device:CPU:0". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)

        tensorflow::EagerContext::FindCompositeDeviceFromName(std::basic_string_view<char, std::char_traits<char> >, tensorflow::CompositeDevice**) const



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:15.925404: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.925424: I tensorflow/core/common_runtime/eager/execute.cc:923] ctx.RunEagerOpAsFunction(): 1
2023-01-12 08:11:15.925437: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.925448: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.925476: I tensorflow/core/common_runtime/eager/execute.cc:1118] Creating new kernel for MatMul on device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.925491: I tensorflow/core/common_runtime/eager/execute.cc:1143] MatMul function_outputs_on_op_device: 0
2023-01-12 08:11:15.925503: I tensorflow/core/common_runtime/eager/execute.cc:1148] Device for [MatMul] already set to: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:15.925514: I tensorflow/core/common_runtime/eager/context.cc:743] RunEagerOpAsFunction: 1
2023-01-12 08:11:15.926078: I tensorflow/core/common_runtime/eager/execute.cc:858] signature {
  name: "__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0"
  input_arg {
    name: "a"
    type_attr: "T"
  }
  input_arg {
    name: "b"
    type_attr: "T"
  }
  output_arg {
    name: "product"
    type_attr: "T"
  }
  attr {
    name: "transpose_a"
    type: "bool"
    default_value {
      b: false
    }
  }
  attr {
    name: "transpose_b"
    type: "bool"
    default_value {
      b: false
    }
  }
  attr {
    name: "T"
    type: "type"
    allowed_values {
      list {
        type: DT_BFLOAT16
        type: DT_HALF
        type: DT_FLOAT
        type: DT_DOUBLE
        type: DT_INT32
        type: DT_INT64
        type: DT_COMPLEX64
        type: DT_COMPLEX128
      }
    }
  }
}
node_def {
  name: "MatMul"
  op: "MatMul"
  input: "a:0"
  input: "b:0"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      placeholder: "T"
    }
  }
  attr {
    key: "transpose_a"
    value {
      placeholder: "transpose_a"
    }
  }
  attr {
    key: "transpose_b"
    value {
      placeholder: "transpose_b"
    }
  }
}
ret {
  key: "product"
  value: "MatMul:product:0"
}

2023-01-12 08:11:16.104505: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpRegistryInterface::LookUpOpDef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**) const
        tensorflow::FunctionLibraryDefinition::AddFunctionDefHelper(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&, bool*)
        tensorflow::FunctionLibraryDefinition::AddFunctionDef(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&)
        tensorflow::EagerContext::AddFunctionDef(tensorflow::FunctionDef const&, tensorflow::FunctionDefLibrary const&, bool, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&)
        tensorflow::EagerContext::AddFunctionDef(tensorflow::FunctionDef const&)



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.105463: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:16.241592: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpDefForOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)
        tensorflow::AttrTypeMapForOp(char const*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > > const**, bool*)
        tensorflow::EagerOperation::Reset(char const*, char const*, bool, tensorflow::EagerExecutor*, std::optional<tensorflow::EagerFunctionParams>)
        tensorflow::EagerOperation::Reset(char const*, char const*)



        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.241976: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:16.325499: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpDefForOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)
        tensorflow::AttrBuilder::FillAttrValueMap(google::protobuf::Map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::AttrValue>*) const
        tensorflow::AttrBuilder::BuildNodeDef()


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.325883: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:16.326181: I tensorflow/core/common_runtime/eager/execute.cc:1214] Running __wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0 using multi-device function. Full node_def=name: "__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0"
op: "__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0"
input: "dummy_input"
input: "dummy_input"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "experimental_ints_on_device"
  value {
    b: true
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

2023-01-12 08:11:16.326534: I tensorflow/core/common_runtime/process_function_library_runtime.cc:951] Instantiating MultiDevice function "__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0" on default device "/job:localhost/replica:0/task:0/device:CPU:0"
2023-01-12 08:11:16.326589: I tensorflow/core/common_runtime/process_function_library_runtime.cc:955] Requested input devices:
2023-01-12 08:11:16.326609: I tensorflow/core/common_runtime/process_function_library_runtime.cc:957]     [input 0] /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:16.326620: I tensorflow/core/common_runtime/process_function_library_runtime.cc:957]     [input 1] /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:16.326631: I tensorflow/core/common_runtime/process_function_library_runtime.cc:960] Requested output devices:
2023-01-12 08:11:16.326667: I tensorflow/core/framework/function.cc:742] Instantiate function definition: name=__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0 #input_args=2 #output_args=1 #control_output=0
2023-01-12 08:11:16.326758: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:16.326777: I tensorflow/core/framework/function.cc:747] || __wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0[transpose_a:bool, transpose_b:bool, T:{bfloat16, half, float, double, int32, int64, complex64, complex128}](a:T, b:T) -> (product:T) {
2023-01-12 08:11:16.326788: I tensorflow/core/framework/function.cc:747] ||   MatMul = MatMul[T=$T, transpose_a=$transpose_a, transpose_b=$transpose_b, device=CPU:0](a:0, b:0)
2023-01-12 08:11:16.326799: I tensorflow/core/framework/function.cc:747] ||   return product = MatMul:product:0
2023-01-12 08:11:16.326809: I tensorflow/core/framework/function.cc:747] || }
2023-01-12 08:11:16.326819: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:16.327096: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:16.327158: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:16.327375: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for a
2023-01-12 08:11:16.327445: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for b
2023-01-12 08:11:16.327549: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for MatMul
2023-01-12 08:11:16.327692: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for product_RetVal
2023-01-12 08:11:16.328112: I tensorflow/core/common_runtime/process_function_library_runtime.cc:483] Trying to determine device for node product_RetVal[T=double]
2023-01-12 08:11:16.328172: I tensorflow/core/common_runtime/process_function_library_runtime.cc:496] Considering src: MatMul src_device: /job:localhost/replica:0/task:0/device:CPU:0 colo group: 
2023-01-12 08:11:16.328229: I tensorflow/core/common_runtime/process_function_library_runtime.cc:602] Setting output device to /job:localhost/replica:0/task:0/device:CPU:0 for node {{node product_RetVal}} = _Retval[T=DT_DOUBLE, index=0](MatMul)
2023-01-12 08:11:16.328332: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running PRE_PLACEMENT passes #nodes 6 #edges 7
2023-01-12 08:11:16.328493: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:16.328545: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0, n3:double@CPU:0) -> (n4:double@CPU:0) {
2023-01-12 08:11:16.328565: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:16.328583: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:16.328604: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:16.328635: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 0
2023-01-12 08:11:16.328770: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_0_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:16.458532: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.459184: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 0
2023-01-12 08:11:16.459219: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: MlirV1CompatGraphOptimizationPass
2023-01-12 08:11:16.459429: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_0_MlirV1CompatGraphOptimizationPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:16.552581: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.553027: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 9
2023-01-12 08:11:16.553051: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ControlFlowDepsToChainsPass
2023-01-12 08:11:16.553067: I tensorflow/core/common_runtime/control_flow_deps_to_chains.cc:37] ControlFlowDepsToChainsPass::Run
2023-01-12 08:11:16.553310: W tensorflow/core/util/dump_graph.cc:134] Failed to dump control_flow_deps_to_chains_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:16.701391: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::ControlFlowDepsToChainsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.704476: W tensorflow/core/util/dump_graph.cc:134] Failed to dump control_flow_deps_to_chains_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:16.875406: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::ControlFlowDepsToChainsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.876025: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_9_ControlFlowDepsToChainsPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:16.967047: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:16.967603: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 10
2023-01-12 08:11:16.967627: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: AccumulateNV2RemovePass
2023-01-12 08:11:16.967800: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_10_AccumulateNV2RemovePass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.132788: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.133323: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: LowerFunctionalOpsPass
2023-01-12 08:11:17.133533: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_10_LowerFunctionalOpsPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.237132: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.237625: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ParallelConcatRemovePass
2023-01-12 08:11:17.237813: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_10_ParallelConcatRemovePass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.343469: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.344056: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 35
2023-01-12 08:11:17.344241: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: IsolatePlacerInspectionRequiredOpsPass
2023-01-12 08:11:17.344320: I tensorflow/core/common_runtime/isolate_placer_inspection_required_ops_pass.cc:34] IsolatePlacerInspectionRequiredOpsPass::Run
2023-01-12 08:11:17.345053: I tensorflow/core/util/dump_graph.cc:171] /tmp/isolate_deep_ops_before_1.pbtxt
2023-01-12 08:11:17.345106: I tensorflow/core/util/dump_graph.cc:172] node {
  name: "a"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
node {
  name: "b"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 1
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "a"
  input: "b"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "product_RetVal"
  op: "_Retval"
  input: "MatMul"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
library {
}
versions {
  producer: 1286
}

2023-01-12 08:11:17.349326: I tensorflow/core/util/dump_graph.cc:206] Dumped Graph to /tmp/isolate_deep_ops_before_1.pbtxt
2023-01-12 08:11:17.350180: I tensorflow/core/util/dump_graph.cc:171] /tmp/isolate_deep_ops_after_1.pbtxt
2023-01-12 08:11:17.350254: I tensorflow/core/util/dump_graph.cc:172] node {
  name: "a"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
node {
  name: "b"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 1
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "a"
  input: "b"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "product_RetVal"
  op: "_Retval"
  input: "MatMul"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
library {
}
versions {
  producer: 1286
}

2023-01-12 08:11:17.350589: I tensorflow/core/util/dump_graph.cc:206] Dumped Graph to /tmp/isolate_deep_ops_after_1.pbtxt
2023-01-12 08:11:17.350726: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_35_IsolatePlacerInspectionRequiredOpsPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.468562: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.469010: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: IntroduceFloatingPointJitterPass
2023-01-12 08:11:17.469043: I tensorflow/compiler/jit/introduce_floating_point_jitter_pass.cc:126] Nothing to do
2023-01-12 08:11:17.469189: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_35_IntroduceFloatingPointJitterPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.625356: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.627054: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 36
2023-01-12 08:11:17.627279: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: EncapsulateXlaComputationsPass
2023-01-12 08:11:17.627663: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_xla_computations_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.792843: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateXlaComputationsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.793436: I tensorflow/compiler/jit/encapsulate_xla_computations_pass.cc:382] EncapsulateXlaComputations(): (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:17.793600: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:17.793710: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:17.793836: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:17.793890: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:17.794136: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_xla_computations_halfway because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.889590: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateXlaComputationsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.890018: I tensorflow/compiler/jit/encapsulate_xla_computations_pass.cc:393] EncapsulateXlaComputations() half-way: (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:17.890272: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_xla_computations_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:17.981892: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateXlaComputationsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:17.982398: I tensorflow/compiler/jit/encapsulate_xla_computations_pass.cc:399] EncapsulateXlaComputations() finished: (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:17.982572: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_36_EncapsulateXlaComputationsPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.093477: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.093985: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 37
2023-01-12 08:11:18.094012: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: FunctionalizeControlFlowForXlaPass
2023-01-12 08:11:18.094246: W tensorflow/core/util/dump_graph.cc:134] Failed to dump functionalize_control_flow_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.195949: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::FunctionalizeControlFlowForXlaPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.196790: W tensorflow/core/util/dump_graph.cc:134] Failed to dump functionalize_control_flow_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.308495: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::FunctionalizeControlFlowForXlaPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.309282: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_37_FunctionalizeControlFlowForXlaPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.429769: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.430318: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 99999
2023-01-12 08:11:18.430383: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: WeakTypeInferencePass
2023-01-12 08:11:18.430409: I tensorflow/core/common_runtime/type_inference.cc:141] TypeInferencePass::Run
2023-01-12 08:11:18.430551: W tensorflow/core/util/dump_graph.cc:134] Failed to dump forward_type_inference_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.538864: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::TypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::WeakTypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.539569: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "_SOURCE"
op: "NoOp"

  op def: name: "NoOp"

2023-01-12 08:11:18.539675: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "_SINK"
op: "NoOp"

  op def: name: "NoOp"

2023-01-12 08:11:18.539925: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "a"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

  op def: name: "_Arg"
output_arg {
  name: "output"
  description: "The argument."
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "index"
  type: "int"
  description: "This argument is the index-th argument of the function.\n\nAttributes for shape inference:\n1. _output_shapes: this attribute should contain a list of TensorShapeProto\n   describing the shape(s) of the tensor(s) this _Arg node will produce. If set,\n   _Arg node\'s shape inference function will use it as the node\'s output shapes.\n2. _handle_dtypes and _handle_shapes: these attributes can be set on an _Arg\n   node producing resource output(s). If set, value of _handle_dtypes should\n   contain the dtype(s) of the resource(s) and value of _handle_shapes should\n   contain the shape(s) of the resource(s). If both attributes are set, _Arg\n   node\'s shape inference function will use their values as the node\'s output\n   handle\'s type(s) and shape(s)."
  has_minimum: true
}
summary: "A graph node which represents an argument to a function."
is_stateful: true

2023-01-12 08:11:18.540202: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "b"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 1
  }
}

  op def: name: "_Arg"
output_arg {
  name: "output"
  description: "The argument."
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "index"
  type: "int"
  description: "This argument is the index-th argument of the function.\n\nAttributes for shape inference:\n1. _output_shapes: this attribute should contain a list of TensorShapeProto\n   describing the shape(s) of the tensor(s) this _Arg node will produce. If set,\n   _Arg node\'s shape inference function will use it as the node\'s output shapes.\n2. _handle_dtypes and _handle_shapes: these attributes can be set on an _Arg\n   node producing resource output(s). If set, value of _handle_dtypes should\n   contain the dtype(s) of the resource(s) and value of _handle_shapes should\n   contain the shape(s) of the resource(s). If both attributes are set, _Arg\n   node\'s shape inference function will use their values as the node\'s output\n   handle\'s type(s) and shape(s)."
  has_minimum: true
}
summary: "A graph node which represents an argument to a function."
is_stateful: true

2023-01-12 08:11:18.540546: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "MatMul"
op: "MatMul"
input: "a"
input: "b"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

  op def: name: "MatMul"
input_arg {
  name: "a"
  type_attr: "T"
}
input_arg {
  name: "b"
  type_attr: "T"
}
output_arg {
  name: "product"
  type_attr: "T"
}
attr {
  name: "transpose_a"
  type: "bool"
  default_value {
    b: false
  }
}
attr {
  name: "transpose_b"
  type: "bool"
  default_value {
    b: false
  }
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT32
      type: DT_INT64
      type: DT_COMPLEX64
      type: DT_COMPLEX128
    }
  }
}

2023-01-12 08:11:18.540888: I tensorflow/core/common_runtime/type_inference.cc:162] 
  node: name: "product_RetVal"
op: "_Retval"
input: "MatMul"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

  op def: name: "_Retval"
input_arg {
  name: "input"
  description: "The return value."
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "index"
  type: "int"
  description: "This return value is the index-th return value of the function."
  has_minimum: true
}
summary: "A graph node which represents a return value of a function."
is_stateful: true

2023-01-12 08:11:18.541125: I tensorflow/core/common_runtime/type_inference.cc:258] Iteration 0, 4 nodes in queue
2023-01-12 08:11:18.541148: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting _SOURCE
2023-01-12 08:11:18.541189: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "_SOURCE"
op: "NoOp"

2023-01-12 08:11:18.541220: I tensorflow/core/common_runtime/type_inference.cc:284]   closing _SOURCE - all sources closed
2023-01-12 08:11:18.541241: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting _SINK
2023-01-12 08:11:18.541276: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "_SINK"
op: "NoOp"

2023-01-12 08:11:18.541304: I tensorflow/core/common_runtime/type_inference.cc:284]   closing _SINK - all sources closed
2023-01-12 08:11:18.541342: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting a
2023-01-12 08:11:18.541455: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "a"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:18.541517: I tensorflow/core/common_runtime/type_inference.cc:284]   closing a - all sources closed
2023-01-12 08:11:18.541557: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting b
2023-01-12 08:11:18.541666: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "b"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 1
  }
}

2023-01-12 08:11:18.541728: I tensorflow/core/common_runtime/type_inference.cc:284]   closing b - all sources closed
2023-01-12 08:11:18.541766: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting MatMul
2023-01-12 08:11:18.542015: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "MatMul"
op: "MatMul"
input: "a"
input: "b"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

2023-01-12 08:11:18.542236: I tensorflow/core/common_runtime/type_inference.cc:284]   closing MatMul - all sources closed
2023-01-12 08:11:18.542302: I tensorflow/core/common_runtime/type_inference.cc:263]   visiting product_RetVal
2023-01-12 08:11:18.542618: I tensorflow/core/common_runtime/type_inference.cc:272]   done name: "product_RetVal"
op: "_Retval"
input: "MatMul"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:18.542720: I tensorflow/core/common_runtime/type_inference.cc:284]   closing product_RetVal - all sources closed
2023-01-12 08:11:18.542823: I tensorflow/core/common_runtime/type_inference.cc:314] Done iteration 0, 6 nodes closed
2023-01-12 08:11:18.542867: I tensorflow/core/common_runtime/type_inference.cc:318] Finished after 1 iterations; done 6 of 6 nodes in 6 visits
2023-01-12 08:11:18.542995: W tensorflow/core/util/dump_graph.cc:134] Failed to dump forward_type_inference_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.648842: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::TypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::WeakTypeInferencePass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.649531: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_0_phase_99999_WeakTypeInferencePass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.741809: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.742321: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 0
2023-01-12 08:11:18.742466: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_0_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.839283: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.839845: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before calling Placer #nodes 6 #edges 8
2023-01-12 08:11:18.840132: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:18.840201: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0, n3:double@CPU:0) -> (n4:double@CPU:0) {
2023-01-12 08:11:18.840301: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:18.840319: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:18.840333: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:18.840439: W tensorflow/core/util/dump_graph.cc:134] Failed to dump placer_input because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:18.939554: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::Placer::Run()
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:18.940045: I tensorflow/core/common_runtime/placer.cc:178]     a: requested: '' assigned: '/job:localhost/replica:0/task:0/device:CPU:0'
2023-01-12 08:11:18.940105: I tensorflow/core/common_runtime/placer.cc:178]     b: requested: '' assigned: '/job:localhost/replica:0/task:0/device:CPU:0'
2023-01-12 08:11:18.940124: I tensorflow/core/common_runtime/placer.cc:178]     MatMul: requested: '/job:localhost/replica:0/task:0/device:CPU:0' assigned: ''
2023-01-12 08:11:18.940141: I tensorflow/core/common_runtime/placer.cc:178]     product_RetVal: requested: '' assigned: '/job:localhost/replica:0/task:0/device:CPU:0'
2023-01-12 08:11:18.940547: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "a"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:18.940747: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "b"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 1
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:18.941098: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "MatMul"
op: "MatMul"
input: "a"
input: "b"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:18.941348: I tensorflow/core/common_runtime/placer.cc:120] 
Node:
name: "product_RetVal"
op: "_Retval"
input: "MatMul"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}
placed on: /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:18.941567: W tensorflow/core/util/dump_graph.cc:134] Failed to dump placer_output because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:19.037533: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::Placer::Run()
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.136949: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INTERNAL: Failed to get the directory for colocation_graph because dump location is not specified through TF_DUMP_GRAPH_PREFIX environment variable". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::Internal<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)


        tensorflow::Placer::Run()
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.137373: E tensorflow/core/common_runtime/placer.cc:93] Failed to write final colocation graph to file  with INTERNAL: Failed to get the directory for colocation_graph because dump location is not specified through TF_DUMP_GRAPH_PREFIX environment variable
2023-01-12 08:11:19.137430: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running POST_PLACEMENT passes #nodes 6 #edges 8
2023-01-12 08:11:19.137705: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:19.137756: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0, n3:double@CPU:0) -> (n4:double@CPU:0) {
2023-01-12 08:11:19.137771: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:19.137783: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:19.137792: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:19.137807: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 1
2023-01-12 08:11:19.137894: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_1_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:19.233714: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.234209: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 1
2023-01-12 08:11:19.234359: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_1_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:19.329306: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.329755: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running POST_REWRITE_FOR_EXEC passes #nodes 6 #edges 8
2023-01-12 08:11:19.330019: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:19.330071: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0, n3:double@CPU:0) -> (n4:double@CPU:0) {
2023-01-12 08:11:19.330088: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:19.330099: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:19.330109: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:19.330128: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 2
2023-01-12 08:11:19.330268: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_2_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:19.483760: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.485707: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 5
2023-01-12 08:11:19.485799: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: CloneConstantsForBetterClusteringPass
2023-01-12 08:11:19.485866: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:19.486368: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_5_CloneConstantsForBetterClusteringPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:19.667710: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.668266: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 9
2023-01-12 08:11:19.668296: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ClusterScopingPass
2023-01-12 08:11:19.668324: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:19.668476: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_9_ClusterScopingPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:19.766292: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:19.766821: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 10
2023-01-12 08:11:19.766850: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: MarkForCompilationPass
2023-01-12 08:11:19.766907: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:19.767102: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1263] Starting fuel: infinity
2023-01-12 08:11:19.767176: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1268] sorted_nodes.size() = 4
2023-01-12 08:11:19.768219: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for a: CPU
2023-01-12 08:11:19.914517: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.051366: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.051878: I tensorflow/compiler/jit/compilability_check_util.cc:74] Found uncompilable node a (op _Arg): top level _Arg or _Retval
2023-01-12 08:11:20.051926: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for b: CPU
2023-01-12 08:11:20.203435: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.332932: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.333387: I tensorflow/compiler/jit/compilability_check_util.cc:74] Found uncompilable node b (op _Arg): top level _Arg or _Retval
2023-01-12 08:11:20.333426: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for MatMul: CPU
2023-01-12 08:11:20.480299: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.600668: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.601165: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1293] Device type for product_RetVal: CPU
2023-01-12 08:11:20.740610: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named '_XlaCompile' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, std::basic_string_view<char, std::char_traits<char> >, bool*)





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.882885: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:20.883392: I tensorflow/compiler/jit/compilability_check_util.cc:74] Found uncompilable node product_RetVal (op _Retval): top level _Arg or _Retval
2023-01-12 08:11:20.883422: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1437] compilation_candidates_.size() = 1
2023-01-12 08:11:20.883673: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting _SOURCE
2023-01-12 08:11:20.883739: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting a
2023-01-12 08:11:20.883760: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting b
2023-01-12 08:11:20.883774: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting MatMul
2023-01-12 08:11:20.883788: I tensorflow/compiler/jit/deadness_analysis.cc:1285] Visiting product_RetVal
2023-01-12 08:11:20.883817: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting _SOURCE
2023-01-12 08:11:20.883867: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting a
2023-01-12 08:11:20.883902: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting b
2023-01-12 08:11:20.883935: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting MatMul
2023-01-12 08:11:20.883966: I tensorflow/compiler/jit/deadness_analysis.cc:1444] Visiting product_RetVal
2023-01-12 08:11:20.884002: I tensorflow/compiler/jit/deadness_analysis.cc:1413] Done populating frame  using the pessimistic mode.
2023-01-12 08:11:20.884038: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^MatMul -> #true
2023-01-12 08:11:20.884057: I tensorflow/compiler/jit/deadness_analysis.cc:1561] MatMul:0 -> #true
2023-01-12 08:11:20.884072: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^_SOURCE -> #true
2023-01-12 08:11:20.884087: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^a -> #true
2023-01-12 08:11:20.884102: I tensorflow/compiler/jit/deadness_analysis.cc:1561] a:0 -> #true
2023-01-12 08:11:20.884117: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^b -> #true
2023-01-12 08:11:20.884132: I tensorflow/compiler/jit/deadness_analysis.cc:1561] b:0 -> #true
2023-01-12 08:11:20.884147: I tensorflow/compiler/jit/deadness_analysis.cc:1561] ^product_RetVal -> #true
2023-01-12 08:11:20.884225: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:650] DeadnessAnalysis time: 569 us (cumulative: 1.96 ms, max: 1.39 ms, #called: 2)
2023-01-12 08:11:20.884318: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] _SOURCE -> {}
2023-01-12 08:11:20.884408: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] a -> {}
2023-01-12 08:11:20.884447: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] b -> {}
2023-01-12 08:11:20.884478: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] MatMul -> {}
2023-01-12 08:11:20.884507: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] product_RetVal -> {}
2023-01-12 08:11:20.884530: I tensorflow/compiler/jit/resource_operation_safety_analysis.cc:310] _SINK -> {}
2023-01-12 08:11:21.035280: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: Attr _XlaCompile is not defined.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
        tsl::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const





        tensorflow::MarkForCompilationPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.035925: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:775] Running phase 0
2023-01-12 08:11:21.036059: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:798] Running phase 1
2023-01-12 08:11:21.036182: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:854] Running phase 2
2023-01-12 08:11:21.036211: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:863] Checking idempotence
2023-01-12 08:11:21.036263: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1801] Not compiling cluster with device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:21.036397: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1610] *** Clustering info for graph of size 6
2023-01-12 08:11:21.036437: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1611]  Built 0 clusters, size 0 / 6 (0.00%)
2023-01-12 08:11:21.036456: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1630]  Unclustered nodes: 6 / 6 (100.00%)
2023-01-12 08:11:21.036471: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   MatMul: 1 instances
2023-01-12 08:11:21.036484: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   NoOp: 2 instances
2023-01-12 08:11:21.036517: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   _Arg: 2 instances
2023-01-12 08:11:21.036532: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1635]   _Retval: 1 instances
2023-01-12 08:11:21.036571: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1690] *** Inter-Cluster edges:
2023-01-12 08:11:21.036610: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1692]    [none]
2023-01-12 08:11:21.036651: I tensorflow/compiler/jit/mark_for_compilation_pass.cc:1554] MarkForCompilationPassImpl::Run time: 1.27 s (cumulative: 2.67 s, max: 1.4 s, #called: 2)
2023-01-12 08:11:21.036930: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_10_MarkForCompilationPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.224271: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.224758: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 12
2023-01-12 08:11:21.224785: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ForceXlaConstantsOnHostPass
2023-01-12 08:11:21.225028: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_12_ForceXlaConstantsOnHostPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.326559: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.327085: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 20
2023-01-12 08:11:21.327116: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: IncreaseDynamismForAutoJitPass
2023-01-12 08:11:21.327284: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_20_IncreaseDynamismForAutoJitPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.413751: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.414298: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 30
2023-01-12 08:11:21.414329: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: PartiallyDeclusterPass
2023-01-12 08:11:21.414805: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_30_PartiallyDeclusterPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.525045: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.525564: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 40
2023-01-12 08:11:21.525589: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: ReportClusteringInfoPass
2023-01-12 08:11:21.525696: I tensorflow/compiler/jit/xla_cluster_util.cc:297] GetGlobalJitLevelForGraph returning -1
2023-01-12 08:11:21.525735: I tensorflow/compiler/jit/xla_activity_logging_listener.cc:35] Logging XlaAutoClusteringActivity
2023-01-12 08:11:21.527533: I tensorflow/compiler/jit/xla_activity_logging_listener.cc:36] global_jit_level: OFF
summary {
  unclustered_node_count: 6
  unclustered_op_histogram {
    op: "MatMul"
    count: 1
  }
  unclustered_op_histogram {
    op: "NoOp"
    count: 2
  }
  unclustered_op_histogram {
    op: "_Arg"
    count: 2
  }
  unclustered_op_histogram {
    op: "_Retval"
    count: 1
  }
}

2023-01-12 08:11:21.528987: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_40_ReportClusteringInfoPass_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.665932: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.666229: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 50
2023-01-12 08:11:21.666276: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: EncapsulateSubgraphsPass
2023-01-12 08:11:21.666321: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1139] EncapsulateSubgraphsPass::Run
2023-01-12 08:11:21.666483: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_subgraphs_before because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.772099: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.772775: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:21.772877: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:21.773149: W tensorflow/core/util/dump_graph.cc:134] Failed to dump encapsulate_subgraphs_after because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.871710: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.872061: I tensorflow/compiler/jit/xla_cluster_util.cc:558] # iterations = 1
2023-01-12 08:11:21.872144: I tensorflow/compiler/jit/xla_cluster_util.cc:558] # iterations = 1
2023-01-12 08:11:21.872161: I tensorflow/compiler/jit/xla_cluster_util.cc:590] GetNodesRelatedToRefVariables() found 0 nodes
2023-01-12 08:11:21.872440: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "_SOURCE"
op: "NoOp"
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}

2023-01-12 08:11:21.872554: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "_SINK"
op: "NoOp"
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}

2023-01-12 08:11:21.872700: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "a"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:21.872835: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "b"
op: "_Arg"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}
attr {
  key: "index"
  value {
    i: 1
  }
}

2023-01-12 08:11:21.873062: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "MatMul"
op: "MatMul"
input: "a"
input: "b"
device: "/job:localhost/replica:0/task:0/device:CPU:0"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

2023-01-12 08:11:21.873235: I tensorflow/compiler/jit/encapsulate_subgraphs_pass.cc:1307] Has ref vars = 0, node: name: "product_RetVal"
op: "_Retval"
input: "MatMul"
attr {
  key: "T"
  value {
    type: DT_DOUBLE
  }
}
attr {
  key: "_XlaHasReferenceVars"
  value {
    b: false
  }
}
attr {
  key: "index"
  value {
    i: 0
  }
}

2023-01-12 08:11:21.873525: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_50_EncapsulateSubgraphsPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:21.967819: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:21.968299: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 60
2023-01-12 08:11:21.968609: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: BuildXlaOpsPass
2023-01-12 08:11:21.968683: I tensorflow/compiler/jit/build_xla_ops_pass.cc:603] print_outputs = 0
2023-01-12 08:11:21.968732: I tensorflow/compiler/jit/build_xla_ops_pass.cc:604] check_input_numerics = 0
2023-01-12 08:11:21.968746: I tensorflow/compiler/jit/build_xla_ops_pass.cc:605] check_output_numerics = 0
2023-01-12 08:11:21.969479: W tensorflow/core/util/dump_graph.cc:134] Failed to dump build_xla_ops because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.102795: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::BuildXlaOpsPass::Run(tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.103180: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_2_phase_60_BuildXlaOpsPass_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.317658: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.317909: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 2
2023-01-12 08:11:22.318238: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_2_93931480425760 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.469900: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::OptimizeFunctionGraph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, std::shared_ptr<tensorflow::DeviceSet> const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.470250: I tensorflow/core/common_runtime/replicate_per_replica_nodes.cc:277] No nodes with composiste device found.
2023-01-12 08:11:22.470359: I tensorflow/core/common_runtime/process_function_library_runtime.cc:993] Main function graph to be partitioned:
2023-01-12 08:11:22.470606: I tensorflow/core/common_runtime/process_function_library_runtime.cc:994] 
(a:double@CPU:0, b:double@CPU:0) -> (MatMul:double@CPU:0) {
  MatMul = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](a, b)
}

2023-01-12 08:11:22.471055: I tensorflow/core/graph/graph_partition.cc:1251] Added send/recv: controls=0, data=0
2023-01-12 08:11:22.471122: W tensorflow/core/util/dump_graph.cc:134] Failed to dump partition_/job:localhost/replica:0/task:0/device:CPU:0_93931476623432 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.608731: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::Partition(tensorflow::PartitionOptions const&, tensorflow::Graph*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::GraphDef, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> > >*)

        tensorflow::PartitionFunctionGraph(tensorflow::DeviceSet const&, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> > > > >*, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (tensorflow::Edge const*)>)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.609223: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:22.609464: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:22.609955: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for a
2023-01-12 08:11:22.610221: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for b
2023-01-12 08:11:22.610386: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for MatMul
2023-01-12 08:11:22.610554: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for product_RetVal
2023-01-12 08:11:22.610839: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before running POST_PARTITIONING passes (/job:localhost/replica:0/task:0/device:CPU:0) #nodes 6 #edges 7
2023-01-12 08:11:22.611308: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:22.611375: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0, n3:double@CPU:0) -> (n4:double@CPU:0) {
2023-01-12 08:11:22.611396: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:22.611513: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:22.611542: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:22.611571: I tensorflow/core/common_runtime/optimization_registry.cc:54] Starting optimization of a group 3
2023-01-12 08:11:22.611728: W tensorflow/core/util/dump_graph.cc:134] Failed to dump before_grouping_3_partition_/job:localhost/replica:0/task:0/device:CPU:0_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.758203: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.758467: I tensorflow/core/common_runtime/optimization_registry.cc:66] Running optimization phase 1
2023-01-12 08:11:22.758523: I tensorflow/core/common_runtime/optimization_registry.cc:68] Running optimization pass: MklLayoutRewritePass
2023-01-12 08:11:22.758543: I tensorflow/core/common_runtime/mkl_layout_pass.cc:4198] TF-MKL: MKL is not enabled
2023-01-12 08:11:22.758714: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_group_3_phase_1_MklLayoutRewritePass_partition_/job:localhost/replica:0/task:0/device:CPU:0_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.871267: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.871522: I tensorflow/core/common_runtime/optimization_registry.cc:87] Finished optimization of a group 3
2023-01-12 08:11:22.871806: W tensorflow/core/util/dump_graph.cc:134] Failed to dump after_grouping_3_partition_/job:localhost/replica:0/task:0/device:CPU:0_93931480454624 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:22.976212: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

        tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:22.976472: I tensorflow/core/common_runtime/function_utils.cc:78] Graph After all optimization passes (/job:localhost/replica:0/task:0/device:CPU:0) #nodes 6 #edges 7
2023-01-12 08:11:22.976759: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:22.976805: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double@CPU:0, n3:double@CPU:0) -> (n4:double@CPU:0) {
2023-01-12 08:11:22.976817: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:22.976823: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:22.976829: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:22.976914: W tensorflow/core/util/dump_graph.cc:134] Failed to dump pflr_after_all_optimization_passes_93931480454624_/job:localhost/replica:0/task:0/device:CPU:0 because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:23.065938: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.168057: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named 'sub_index' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::UpdateArgAndRetvalMetadata(tensorflow::Graph*, std::vector<tensorflow::FunctionArgIndex, std::allocator<tensorflow::FunctionArgIndex> >*, std::vector<int, std::allocator<int> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, bool)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.263955: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named 'sub_index' in NodeDef:
         [[{{node a}}]]". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        void tsl::errors::AppendToMessage<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tsl::Status*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
        tensorflow::AttachDef(tsl::Status const&, tensorflow::NodeDef const&, bool)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::UpdateArgAndRetvalMetadata(tensorflow::Graph*, std::vector<tensorflow::FunctionArgIndex, std::allocator<tensorflow::FunctionArgIndex> >*, std::vector<int, std::allocator<int> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, bool)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.366322: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named 'sub_index' in NodeDef:". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::basic_string_view<char, std::char_traits<char> >, char const*>(char const*, std::basic_string_view<char, std::char_traits<char> >, char const*)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::UpdateArgAndRetvalMetadata(tensorflow::Graph*, std::vector<tensorflow::FunctionArgIndex, std::allocator<tensorflow::FunctionArgIndex> >*, std::vector<int, std::allocator<int> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, bool)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.470481: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: No attr named 'sub_index' in NodeDef:
         [[{{node b}}]]". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        void tsl::errors::AppendToMessage<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tsl::Status*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
        tensorflow::AttachDef(tsl::Status const&, tensorflow::NodeDef const&, bool)
        tensorflow::AttrSlice::CheckFind(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const*) const
        tensorflow::AttrSlice::Find(std::basic_string_view<char, std::char_traits<char> >, tensorflow::AttrValue const**) const
        tensorflow::UpdateArgAndRetvalMetadata(tensorflow::Graph*, std::vector<tensorflow::FunctionArgIndex, std::allocator<tensorflow::FunctionArgIndex> >*, std::vector<int, std::allocator<int> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, std::vector<tsl::AllocatorAttributes, std::allocator<tsl::AllocatorAttributes> >*, bool)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.630514: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)

        tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
        tensorflow::OpRegistryInterface::LookUpOpDef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**) const
        tensorflow::FunctionLibraryDefinition::AddFunctionDefHelper(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&, bool*)
        tensorflow::FunctionLibraryDefinition::AddFunctionDef(tensorflow::FunctionDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<tensorflow::AbstractStackTrace>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<tensorflow::AbstractStackTrace> > > > const&)




        std::function<void ()>::operator()() const

        tensorflow::ProcessFunctionLibraryRuntime::InstantiateMultiDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, tensorflow::FunctionLibraryRuntime::InstantiateOptions const&, unsigned long*)
        tensorflow::KernelAndDeviceFunc::InstantiateFunc(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)
        tensorflow::KernelAndDeviceFunc::Init(bool, tensorflow::NodeDef const&, tensorflow::GraphCollector*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.630905: I tensorflow/core/framework/op.cc:80] NOT_FOUND: Op type not registered '__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0' in binary running on docker-desktop. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.
2023-01-12 08:11:23.631894: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1150] Start instantiating component function __wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0 on device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:23.632138: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1152] 
__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0(a:double, b:double) -> (product_retval:double) {
  MatMul = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](a, b)
  return product_retval = MatMul:product:0
}

2023-01-12 08:11:23.632572: I tensorflow/core/framework/function.cc:742] Instantiate function definition: name=__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0 #input_args=2 #output_args=1 #control_output=0
2023-01-12 08:11:23.632763: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:23.632807: I tensorflow/core/framework/function.cc:747] || __wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0(a:double, b:double) -> (product_retval:double) {
2023-01-12 08:11:23.632829: I tensorflow/core/framework/function.cc:747] ||   MatMul = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](a, b)
2023-01-12 08:11:23.632850: I tensorflow/core/framework/function.cc:747] ||   return product_retval = MatMul:product:0
2023-01-12 08:11:23.632870: I tensorflow/core/framework/function.cc:747] || }
2023-01-12 08:11:23.632889: I tensorflow/core/framework/function.cc:747] || 
2023-01-12 08:11:23.633706: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:23.633993: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:23.634832: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for a
2023-01-12 08:11:23.635052: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for b
2023-01-12 08:11:23.635495: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for MatMul
2023-01-12 08:11:23.635793: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for product_retval_RetVal
2023-01-12 08:11:23.636665: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1159] Finished instantiating component function __wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0 with handle 2 status: OK
2023-01-12 08:11:23.636896: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1195] Instantiated MultiDevice function "__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0" with handle 3
2023-01-12 08:11:23.637384: I tensorflow/core/common_runtime/eager/execute.cc:245] !is_function: 0
2023-01-12 08:11:23.637531: I tensorflow/core/common_runtime/eager/execute.cc:246] handle->Type(): 0
2023-01-12 08:11:23.637578: I tensorflow/core/common_runtime/eager/execute.cc:245] !is_function: 0
2023-01-12 08:11:23.637692: I tensorflow/core/common_runtime/eager/execute.cc:246] handle->Type(): 0
2023-01-12 08:11:23.637750: I tensorflow/core/common_runtime/eager/execute.cc:1445] Executing op MatMul in device /job:localhost/replica:0/task:0/device:CPU:0
2023-01-12 08:11:23.637938: I tensorflow/core/common_runtime/eager/tensor_handle.cc:495] TensorValue on TensorHandle: 0x556e1d044c40 device: 0
2023-01-12 08:11:23.637991: I tensorflow/core/common_runtime/eager/tensor_handle.cc:495] TensorValue on TensorHandle: 0x556e204b3360 device: 0
2023-01-12 08:11:23.638299: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1347] Running component function on device /job:localhost/replica:0/task:0/device:CPU:0 from __wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0 with handle 2
2023-01-12 08:11:23.638490: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1356]     with FLR::Options(step_id=-2850322604395517144 rendezvous=set cancellation_manager=set collective_executor=set step_container=set stats_collector=unset runner=set remote_execution=0 source_device= create_rendezvous=0 allow_dead_tensors=1 args_alloc_attrs=[AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0), AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0)] rets_alloc_attrs=[AllocatorAttributes(on_host=0 nic_compatible=0 gpu_compatible=0)])
2023-01-12 08:11:23.638815: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:23.638962: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:23.639324: I tensorflow/core/common_runtime/function.cc:893] Pruning function body: function_name=__wrapped__MatMul_device_/job:localhost/replica:0/task:0/device:CPU:0_2307326318863871411_0
2023-01-12 08:11:23.639485: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : product_retval_RetVal from MatMul
2023-01-12 08:11:23.639557: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : MatMul from a
2023-01-12 08:11:23.639602: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : MatMul from b
2023-01-12 08:11:23.639647: I tensorflow/core/graph/algorithm.cc:235] Reverse reach : a from _SOURCE
2023-01-12 08:11:23.639726: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Initial #nodes 6 #edges 8
2023-01-12 08:11:23.640647: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:23.640944: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double, n3:double) -> (n4:double) {
2023-01-12 08:11:23.641011: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:23.641156: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:23.641479: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:23.641826: I tensorflow/core/common_runtime/function_utils.cc:164] Removing list array converter
2023-01-12 08:11:23.642042: I tensorflow/core/common_runtime/function_utils.cc:78] Graph Before #nodes 6 #edges 8
2023-01-12 08:11:23.643130: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:23.643296: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double, n3:double) -> (n4:double) {
2023-01-12 08:11:23.643640: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:23.643774: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:23.643809: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:23.644048: I tensorflow/core/common_runtime/constant_folding.cc:613] No constant foldable nodes found
2023-01-12 08:11:23.645355: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SOURCE
2023-01-12 08:11:23.645644: I tensorflow/core/graph/graph.cc:529] AddNode: no type constructor for _SINK
2023-01-12 08:11:23.646862: I tensorflow/core/common_runtime/function_utils.cc:78] Graph ReCopy #nodes 6 #edges 9
2023-01-12 08:11:23.648788: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:23.648946: I tensorflow/core/common_runtime/function_utils.cc:82] || (n2:double, n3:double) -> (n4:double) {
2023-01-12 08:11:23.649005: I tensorflow/core/common_runtime/function_utils.cc:82] ||   n4 = MatMul[T=double, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, device=CPU:0](n2, n3)
2023-01-12 08:11:23.649044: I tensorflow/core/common_runtime/function_utils.cc:82] || }
2023-01-12 08:11:23.649071: I tensorflow/core/common_runtime/function_utils.cc:82] || 
2023-01-12 08:11:23.649871: W tensorflow/core/util/dump_graph.cc:134] Failed to dump EnsureMemoryTypes because dump location is not  specified through either TF_DUMP_GRAPH_PREFIX environment variable or function argument.
2023-01-12 08:11:23.849982: I tensorflow/tsl/platform/status.cc:176] Generated non-OK status: "INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified". *** Begin stack trace ***

        tsl::Status::Status(tensorflow::error::Code, std::basic_string_view<char, std::char_traits<char> >, tsl::SourceLocation)
        tsl::Status tsl::errors::InvalidArgument<char const*>(char const*)


        tensorflow::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
        tensorflow::EnsureMemoryTypes(tsl::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)
        tensorflow::FunctionLibraryRuntimeImpl::CreateItem(tensorflow::FunctionLibraryRuntimeImpl::Item**)
        tensorflow::FunctionLibraryRuntimeImpl::GetOrCreateItem(unsigned long, tensorflow::FunctionLibraryRuntimeImpl::Item**)
        tensorflow::FunctionLibraryRuntimeImpl::PrepareRunSync(unsigned long, tensorflow::FunctionLibraryRuntime::Options*, tensorflow::FunctionLibraryRuntimeImpl::Item**, std::unique_ptr<tensorflow::PrivateIntraProcessRendezvous, std::default_delete<tensorflow::PrivateIntraProcessRendezvous> >*)
        tensorflow::FunctionLibraryRuntimeImpl::RunSync(tensorflow::FunctionLibraryRuntime::Options, unsigned long, absl::lts_20220623::Span<tensorflow::Tensor const>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
        tensorflow::ProcessFunctionLibraryRuntime::RunMultiDeviceSync(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long, std::vector<std::variant<tensorflow::Tensor, tensorflow::TensorShape>, std::allocator<std::variant<tensorflow::Tensor, tensorflow::TensorShape> > >*, std::function<tsl::Status (tensorflow::ProcessFunctionLibraryRuntime::ComponentFunctionData const&, tensorflow::ProcessFunctionLibraryRuntime::InternalArgs*)>) const
        tensorflow::ProcessFunctionLibraryRuntime::RunSync(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long, absl::lts_20220623::Span<tensorflow::Tensor const>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) const
        tensorflow::KernelAndDeviceFunc::Run(tensorflow::ScopedStepContainer*, tensorflow::EagerKernelArgs const&, std::vector<std::variant<tensorflow::Tensor, tensorflow::TensorShape>, std::allocator<std::variant<tensorflow::Tensor, tensorflow::TensorShape> > >*, tsl::CancellationManager*, std::optional<tensorflow::EagerFunctionParams> const&, std::optional<tensorflow::ManagedStackTrace> const&, tensorflow::CoordinationServiceAgent*)
        tensorflow::EagerKernelExecute(tensorflow::EagerContext*, absl::lts_20220623::InlinedVector<tensorflow::TensorHandle*, 4ul, std::allocator<tensorflow::TensorHandle*> > const&, std::optional<tensorflow::EagerFunctionParams> const&, std::unique_ptr<tensorflow::KernelAndDevice, tsl::core::RefCountDeleter> const&, tensorflow::GraphCollector*, tsl::CancellationManager*, absl::lts_20220623::Span<tensorflow::TensorHandle*>, std::optional<tensorflow::ManagedStackTrace> const&)
        tensorflow::ExecuteNode::Run()
        tensorflow::EagerExecutor::SyncExecute(tensorflow::EagerNode*)


        tensorflow::EagerExecute(tensorflow::EagerOperation*, tensorflow::TensorHandle**, int*)
        tensorflow::EagerOperation::Execute(absl::lts_20220623::Span<tensorflow::AbstractTensorHandle*>, int*)
        tensorflow::CustomDeviceOpHandler::Execute(tensorflow::ImmediateExecutionOperation*, tensorflow::ImmediateExecutionTensorHandle**, int*)
        TFE_Execute
        TFE_Py_FastPathExecute_C(_object*)







        _PyObject_MakeTpCall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault


        PyEval_EvalCode



        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault

        _PyFunction_Vectorcall

        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault

        PyEval_EvalCode


        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall
        _PyEval_EvalFrameDefault
        _PyFunction_Vectorcall

        Py_RunMain
        Py_BytesMain

        __libc_start_main
        _start
*** End stack trace ***

2023-01-12 08:11:23.850157: I tensorflow/core/common_runtime/memory_types.cc:210] Dumped graph after EnsureMemoryTypes to (failed to create writable file: INVALID_ARGUMENT: TF_DUMP_GRAPH_PREFIX not specified)
2023-01-12 08:11:23.850430: I tensorflow/core/framework/op_kernel.cc:1689] Instantiating kernel for node: {{node MatMul}} = MatMul[T=DT_DOUBLE, _XlaHasReferenceVars=false, transpose_a=false, transpose_b=false, _device="/job:localhost/replica:0/task:0/device:CPU:0"](a, b)
2023-01-12 08:11:23.854277: I tensorflow/core/framework/op_kernel.cc:1689] Instantiating kernel for node: {{node product_retval_RetVal}} = _Retval[T=DT_DOUBLE, index=0](MatMul)
2023-01-12 08:11:23.911774: I tensorflow/core/common_runtime/process_function_library_runtime.cc:1370] Component function execution succeeded.
2023-01-12 08:11:23.913634: I tensorflow/core/common_runtime/eager/tensor_handle.cc:253] Creating Local TensorHandle: 0x556e2071fc20 device: [] tensor: Tensor<type: double shape: [3,3]>
2023-01-12 08:11:23.914566: I tensorflow/core/common_runtime/eager/tensor_handle.cc:422] Releasing tensor handle 0x556e1d044c40
2023-01-12 08:11:23.914652: I tensorflow/core/common_runtime/eager/tensor_handle.cc:419] Deleting tensor handle 0x556e1d044c40
2023-01-12 08:11:23.914821: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogRawDeallocation { step_id: -3 operation: "TensorFlow C Api" allocation_id: 1 allocator_name: "cpu" }
2023-01-12 08:11:23.914889: I tensorflow/core/common_runtime/eager/tensor_handle.cc:422] Releasing tensor handle 0x556e204b3360
2023-01-12 08:11:23.914906: I tensorflow/core/common_runtime/eager/tensor_handle.cc:419] Deleting tensor handle 0x556e204b3360
2023-01-12 08:11:23.914970: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogRawDeallocation { step_id: -3 operation: "TensorFlow C Api" allocation_id: 5 allocator_name: "cpu" }
******************** call op/ matmul END
2023-01-12 08:11:23.915289: I tensorflow/core/common_runtime/eager/tensor_handle.cc:683] HasLocalMirror on TensorHandle: 0x556e2071fc20 device: 0
2023-01-12 08:11:23.915349: I tensorflow/core/common_runtime/eager/tensor_handle.cc:458] Tensor on TensorHandle: 0x556e2071fc20
tf.Tensor(
[[1.02324972 0.47361511 1.62131404]
 [0.27320793 0.11216209 0.47967184]
 [1.1840475  0.83708314 1.33795181]], shape=(3, 3), dtype=float64)
2023-01-12 08:11:24.565228: I tensorflow/core/common_runtime/eager/tensor_handle.cc:422] Releasing tensor handle 0x556e2071fc20
2023-01-12 08:11:24.565324: I tensorflow/core/common_runtime/eager/tensor_handle.cc:419] Deleting tensor handle 0x556e2071fc20
2023-01-12 08:11:24.565451: I tensorflow/core/framework/log_memory.cc:34] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: "cpu" }
root@docker-desktop:/ws/tfDemo# 